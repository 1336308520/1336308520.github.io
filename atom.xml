<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>百度搜不到丶的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://133608520.github.io/"/>
  <updated>2019-07-27T11:18:56.843Z</updated>
  <id>https://133608520.github.io/</id>
  
  <author>
    <name>LYH</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Web学习-2</title>
    <link href="https://133608520.github.io/2019/07/27/13/"/>
    <id>https://133608520.github.io/2019/07/27/13/</id>
    <published>2019-07-27T10:55:21.000Z</published>
    <updated>2019-07-27T11:18:56.843Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="JavaScript概念"><a href="#JavaScript概念" class="headerlink" title="JavaScript概念"></a>JavaScript概念</h2><blockquote><p><strong>JavaScript是由Netscape公司开发，介于Java与HTML之间、基于对象事件驱动的编程语言，已经受到全球的关注。因它的开发环境简单，不需要Java编译器，而是直接运行在Web浏览器中，而因倍受Web设计者的欢迎。</strong><br><strong>JavaScript的出现，它可以使得信息和用户之间不仅只是一种显示和浏览的关系，而是实现了一种实时的、动态的、可交式的表达能力</strong> </p></blockquote><h2 id="JavaScript特点"><a href="#JavaScript特点" class="headerlink" title="JavaScript特点"></a>JavaScript特点</h2><blockquote><ul><li><strong>脚本编写语言</strong> </li><li><strong>基于对象的语言</strong></li><li><strong>简单性</strong> </li><li><strong>安全性</strong> </li><li><strong>动态性</strong> </li><li><strong>跨平台性</strong></li></ul></blockquote><p> <strong><font color="red"> JavaScript是种脚本语言，它可以用来制作与网络无关的，与用户交互作用的软件。它本身提供了非常丰富的内部对象供设计人员使用，因而说它是一种基于对象（Object Based）和事件驱动（Event Driver）的编程语言。</font></strong>  </p><p>  <strong><font color="red">JavaScript是一种解释性编程语言，其源代码在发往客户端执行之前不需经过编译，而是将文本格式的字符代码发送给客户编由浏览器解释执行。</font></strong></p><blockquote><p><strong>JavaScript中变量声明，采用其弱类型。即变量在使用前不需作声明，而是解释器在运行时检查其数据类型，如：</strong>　　</p><p><strong>x=1234;</strong>　</p><p><strong>y＝”4321”;</strong></p><p><strong>前者说明x为其数值型变量，而后者说明y为字符型变量。</strong></p></blockquote><h2 id="JavaScript程序构成"><a href="#JavaScript程序构成" class="headerlink" title="JavaScript程序构成"></a>JavaScript程序构成</h2><ol><li><strong>控制语句</strong> </li><li><strong>函数</strong> </li><li><strong>对象</strong> </li><li><strong>方法</strong> </li><li><strong>属性</strong> </li></ol><h2 id="JS-HelloWorld"><a href="#JS-HelloWorld" class="headerlink" title="JS - HelloWorld"></a>JS - HelloWorld</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">document.write("Hello World!");</span><br><span class="line">alert("Hello World");</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="JS-–-函数"><a href="#JS-–-函数" class="headerlink" title="JS – 函数"></a>JS – 函数</h2><blockquote><p><strong>Function 函数名 （参数,变元）{</strong></p><p><strong>函数体;.</strong></p><p><strong>Return 表达式;</strong></p><p><strong>}</strong></p><p><strong>说明：</strong></p><p><strong>当调用函数时,所用变量或字面量均可作为变元传递。</strong></p><p><strong>函数由关键字Function定义。</strong></p><p><strong>函数名：定义自己函数的名字。</strong></p><p><strong>参数表，是传递给函数使用或操作的值，其值可以是常量 ，变量或其它表达式。</strong></p><p><strong>通过指定函数名（实参）来调用一个函数。</strong></p><p><strong>必须使用Return将值返回。</strong></p><p><strong>函数名对大小写是敏感的。</strong></p></blockquote><h2 id="JS-–-事件驱动及事件处理"><a href="#JS-–-事件驱动及事件处理" class="headerlink" title="JS – 事件驱动及事件处理"></a>JS – 事件驱动及事件处理</h2><blockquote><p><strong>JavaScript是基于对象(object-based)的语言，基于对象的基本特征，就是采用事件驱动(event-driven)。通常鼠标或键盘的动作我们称之为事件（Event），而由事件引发的程序的动作，称之为事件驱动（Event Driver）。对事件进行处理的程序或函数，我们称之为事件处理程序（Event Handler）</strong></p></blockquote><h2 id="事件处理程序"><a href="#事件处理程序" class="headerlink" title="事件处理程序"></a>事件处理程序</h2><p><font color="steelblue"><strong>在JavaScript中对象事件的处理通常由函数(Function)担任。其实就是在事件中调用函数。</strong></font></p><h2 id="主要有以下几个事件"><a href="#主要有以下几个事件" class="headerlink" title="主要有以下几个事件"></a>主要有以下几个事件</h2><ul><li><strong>单击事件onClick</strong></li><li><strong>onChange改变事件</strong> </li><li><strong>选中事件onSelect</strong> </li><li><strong>获得焦点事件onFocus</strong></li><li><strong>失去焦点onBlur</strong></li><li><strong>载入文件onLoad</strong> </li><li><strong>卸载文件onUnload</strong></li></ul><h3 id="Onchange演示"><a href="#Onchange演示" class="headerlink" title="Onchange演示"></a>Onchange演示</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">function checkmail()&#123;</span><br><span class="line">alert("修改了");</span><br><span class="line">&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"30"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">onchange</span>=<span class="string">"checkmail()"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="实战演习"><a href="#实战演习" class="headerlink" title="实战演习"></a>实战演习</h2><h3 id="JS-函数"><a href="#JS-函数" class="headerlink" title="JS-函数"></a>JS-函数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>JS-函数<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">//定义函数</span><br><span class="line">function hello()&#123;</span><br><span class="line">alert("HelloWorld");</span><br><span class="line">&#125;</span><br><span class="line">function say(hua)&#123;</span><br><span class="line">alert(hua);</span><br><span class="line">&#125;</span><br><span class="line">function cheng(a,b)&#123;</span><br><span class="line">return a*b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//调用函数</span><br><span class="line">hello();</span><br><span class="line">say("世界你好");</span><br><span class="line">var result = cheng(6,7);</span><br><span class="line">document.write("结果："+result);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JS-事件处理"><a href="#JS-事件处理" class="headerlink" title="JS-事件处理"></a>JS-事件处理</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>JS-函数<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">onchange</span>=<span class="string">"alert('值被改变'+this.value);"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"点这里..."</span> <span class="attr">onclick</span>=<span class="string">"dian();"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">function dian()&#123;</span><br><span class="line">alert("按钮被点击");</span><br><span class="line">window.location</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JS-查找DOM节点"><a href="#JS-查找DOM节点" class="headerlink" title="JS-查找DOM节点"></a>JS-查找DOM节点</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>JS-查找DOM节点<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t1"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"bt"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"检测"</span> <span class="attr">onclick</span>=<span class="string">"dian();"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"b"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t2"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span> &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t3"</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"XIXI"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function dian()&#123;</span><br><span class="line">//调用document对象的函数，查找id为t的元素所对应的DOM对象</span><br><span class="line">var el = document.getElementById('t');</span><br><span class="line">alert(el.value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//所有input元素的集合</span><br><span class="line">var ins = document.getElementsByTagName("input");</span><br><span class="line">for(var i=0;i&lt;ins.length;i++)&#123;</span><br><span class="line">var el = ins[i];</span><br><span class="line">//alert(el.id);</span><br><span class="line">&#125;</span><br><span class="line">//查找b节点下的input集合</span><br><span class="line">var ins = document.getElementById('b').getElementsByTagName("input");</span><br><span class="line">for(var i=0;i&lt;ins.length;i++)&#123;</span><br><span class="line">var el = ins[i];</span><br><span class="line">//alert(el.id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//查找t2父亲的最后一个孩子，实验发现：DIV中会把换行当做节点，所以一个DIV需要写成一行</span><br><span class="line">var x = document.getElementById("t2").parentNode.lastChild;</span><br><span class="line">console.log(x);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JS-函数变元"><a href="#JS-函数变元" class="headerlink" title="JS-函数变元"></a>JS-函数变元</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>JS-函数变元<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t1"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"bt"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"检测"</span> <span class="attr">onclick</span>=<span class="string">"dian();"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"b"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t2"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span> &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t3"</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"XIXI"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">//函数中描述应该有参数，叫做形参</span><br><span class="line">function hello(a,b,c)&#123;</span><br><span class="line">console.log("HelloWorld:");</span><br><span class="line">console.log(a);</span><br><span class="line">console.log(b);</span><br><span class="line">console.log(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//1,3,5,7,等数值是调用时真实的参数，叫做实参</span><br><span class="line">hello(2,3,5,7,9);</span><br><span class="line"></span><br><span class="line">//思考：js如何做重载呢？</span><br><span class="line">//目标：两个参数求和，三个参数求积</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//JS不支持重载，后定义的function会覆盖前面的</span><br><span class="line">function xx(a,b)&#123;</span><br><span class="line">console.log("aaaaaaa");</span><br><span class="line">&#125;</span><br><span class="line">function xx(a,b,c)&#123;</span><br><span class="line">console.log("bbbbbbb");</span><br><span class="line">&#125;</span><br><span class="line">xx(5,6);</span><br><span class="line">xx(5,6,7);</span><br><span class="line"></span><br><span class="line">//JS使用变元机制模拟重载</span><br><span class="line">function cz(a,b,c)&#123;</span><br><span class="line">//if条件：null,'',undefined,false都为假</span><br><span class="line">if(c!=undefined)&#123;//如果c有值</span><br><span class="line">console.log("至少3个参数:乘法运算="+(a*b*c));</span><br><span class="line">&#125;else if(b)&#123;</span><br><span class="line">console.log("有2个参数:加法运算="+(a+b));</span><br><span class="line">&#125;else if(a)&#123;</span><br><span class="line">console.log("有1个参数");</span><br><span class="line">&#125;else&#123;</span><br><span class="line">console.log("没有参数");</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cz(5,6,7);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JS-functino可以作为参数"><a href="#JS-functino可以作为参数" class="headerlink" title="JS-functino可以作为参数"></a>JS-functino可以作为参数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>JS-functino可以作为参数<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">//js是一个基于对象的语言</span><br><span class="line"></span><br><span class="line">//给hello赋值一个匿名函数</span><br><span class="line">var hello = function()&#123;</span><br><span class="line">alert("HelloWorld");</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//js中允许function对象作为参数传递</span><br><span class="line">function xx(fun)&#123;</span><br><span class="line">alert("接下来给大家展示一下function");</span><br><span class="line">fun();//执行传进来的函数</span><br><span class="line">alert("function展示结束");</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//调用xx，把已经存在的hello传进去</span><br><span class="line">xx(hello);</span><br><span class="line"></span><br><span class="line">xx(function()&#123;</span><br><span class="line">alert("这次没有调用Hello，这是一个匿名function");</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JS-回调函数"><a href="#JS-回调函数" class="headerlink" title="JS-回调函数"></a>JS-回调函数</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>JS-回调函数<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">//回调：回去调用，回头调用,</span><br><span class="line">//利用回调函数可以实现类似于监听器的功能</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//这个一个function，用来输出100次HelloWorld</span><br><span class="line">//a在开始之前执行</span><br><span class="line">//b在第5次执行</span><br><span class="line">//c在结束之后执行</span><br><span class="line">function hello(a,b,c)&#123;</span><br><span class="line">if(a)a();</span><br><span class="line">for(var i=1;i&lt;=10;i++)&#123;</span><br><span class="line">console.log("HelloWorld"+i);</span><br><span class="line">if(i==5)&#123;</span><br><span class="line">if(b)b();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(c)c();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var start = function()&#123;</span><br><span class="line">console.log("Start");</span><br><span class="line">&#125;;</span><br><span class="line">var hot = function()&#123;</span><br><span class="line">console.log("中间");</span><br><span class="line">&#125;;</span><br><span class="line">var end = function()&#123;</span><br><span class="line">console.log("Over");</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">//当我们调用的时候会传进去3个function，这三个function早就存在了</span><br><span class="line">//hello在执行过程中会回来调用他们，这就叫回调</span><br><span class="line">hello(start,hot,end);</span><br><span class="line"></span><br><span class="line">//传3个匿名函数过去，还是匿名函数用着方便</span><br><span class="line">hello(function()&#123;</span><br><span class="line">console.log("--------1");</span><br><span class="line">&#125;,function()&#123;</span><br><span class="line">console.log("--------2");</span><br><span class="line">&#125;,function()&#123;</span><br><span class="line">console.log("--------3");</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">//只带一个回调</span><br><span class="line">hello(function()&#123;</span><br><span class="line">console.log("开始，开始，开始，重要的事说三遍");</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JS-计时器"><a href="#JS-计时器" class="headerlink" title="JS-计时器"></a>JS-计时器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>JS-计时器<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"点击"</span> <span class="attr">onclick</span>=<span class="string">"go()"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"开始计时！"</span> <span class="attr">onClick</span>=<span class="string">"timedCount()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"停止计时！"</span> <span class="attr">onClick</span>=<span class="string">"stopCount()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"归零！"</span> <span class="attr">onClick</span>=<span class="string">"init()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">/**</span><br><span class="line">js中没有等待功能，计时器可以模拟等待功能</span><br><span class="line">计时器是独立的，不会阻塞程序流程的进行</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//------------- 可以暂停的计时器 ------------</span><br><span class="line">var c=0 //记录时间</span><br><span class="line">var t//计时器对象</span><br><span class="line">function timedCount()</span><br><span class="line">&#123;</span><br><span class="line">document.getElementById('txt').value=c</span><br><span class="line">c=c+1</span><br><span class="line">t=setTimeout("timedCount()",100);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function stopCount()</span><br><span class="line">&#123;</span><br><span class="line">clearTimeout(t);</span><br><span class="line">&#125;</span><br><span class="line">function init()&#123;</span><br><span class="line">c=0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//--------------- 计时器是独立出来的计划任务 ------------</span><br><span class="line">function hello(n)&#123;</span><br><span class="line">console.log("HelloWorld:"+n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function go()&#123;</span><br><span class="line">for(var i=1;i&lt;=10;i++)&#123;</span><br><span class="line">var str = "hello("+i+")";</span><br><span class="line">//计时器是独立的，不会阻塞for的执行</span><br><span class="line">setTimeout(str,1000*i);</span><br><span class="line">&#125;</span><br><span class="line">console.log("go执行结束");</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; title=&quot;JavaScript&quot;&gt;&lt;/a&gt;JavaScript&lt;/h1&gt;&lt;h2 id=&quot;JavaScript概念&quot;&gt;&lt;a href=&quot;#JavaScrip
      
    
    </summary>
    
      <category term="Web学习" scheme="https://133608520.github.io/categories/Web%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Web学习" scheme="https://133608520.github.io/tags/Web%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Web学习-1</title>
    <link href="https://133608520.github.io/2019/07/27/12/"/>
    <id>https://133608520.github.io/2019/07/27/12/</id>
    <published>2019-07-27T10:25:02.000Z</published>
    <updated>2019-07-27T11:21:30.995Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="HTML实例："><a href="#HTML实例：" class="headerlink" title="HTML实例："></a>HTML实例：</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">新建一个hello.html文件, 写入如下内容，用浏览器打开：</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面的标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我的页面。</span><br><span class="line">            <span class="tag">&lt;<span class="name">b</span>&gt;</span>这是粗体文本。<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>例子解释：<br>HTML文件中的第一个标签是<html>。这个标签告诉浏览器这个HTML文件的开始点。文件中最后一个标签是 </html>。这个标签告诉浏览器，这是结束点。<br>位于<head><meta name="generator" content="Hexo 3.9.0">标签和</head>标签之间的是头信息。头信息不会显示在浏览器窗口中，通常用于设定编码、自动跳转、SEO优化信息等。</p><title>是标题，会显示在浏览器的标题栏。<body>中的文本是页面的显示部分。<b> 和 </b> 标签中的文本将以粗体显示。<title>是标题，会显示在浏览器的标题栏。<body>中的文本是页面的显示部分。<b> 和 </b> 标签中的文本将以粗体显示。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; </span><br><span class="line">&gt; &lt;title&gt;是标题，会显示在浏览器的标题栏。</span><br><span class="line">&gt; &lt;body&gt;中的文本是页面的显示部分。</span><br><span class="line">&gt; &lt;b&gt; 和 &lt;/b&gt; 标签中的文本将以粗体显示。</span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></body></title><script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"log":false,"pluginJsPath":"lib/","pluginModelPath":"assets/","pluginRootPath":"live2dw/","tagMode":false});</script></body></title></blockquote><h1 id="HT2L文档结构"><a href="#HT2L文档结构" class="headerlink" title="HT2L文档结构"></a>HT2L文档结构</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">HTML须包含的基本结构标记符：</span><br><span class="line">HTML标记：<span class="tag">&lt;<span class="name">HTML</span>&gt;</span>    <span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br><span class="line">头标记：      <span class="tag">&lt;<span class="name">HEAD</span>&gt;</span>    <span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line">标题标记：   <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>   <span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">正文标记：   <span class="tag">&lt;<span class="name">BODY</span>&gt;</span>   <span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></span><br><span class="line">三大结构：</span><br><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span><span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="常用术语-–-元素"><a href="#常用术语-–-元素" class="headerlink" title="常用术语 – 元素"></a>常用术语 – 元素</h2><h2 id="常用术语-–-属性"><a href="#常用术语-–-属性" class="headerlink" title="常用术语 – 属性"></a>常用术语 – 属性</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>背景颜色<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"yellow"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>请看: 改变了颜色的背景。<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><font color="tomato">为HTML元素提供各种附加信息的就是HTML属性，它总是以”属性名=属性值”这种名值对的形式出现，而且属性总是在HTML元素的开始标签中进行定义。 </font></p></blockquote><h2 id="HTML注释"><a href="#HTML注释" class="headerlink" title="HTML注释"></a>HTML注释</h2><blockquote> <!--    --></blockquote><h2 id="HTML-表单"><a href="#HTML-表单" class="headerlink" title="HTML-表单"></a>HTML-表单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“text”</span> <span class="attr">value</span>=<span class="string">“文本”</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"></span><br><span class="line">文本框：text</span><br><span class="line">密码框：password</span><br><span class="line">单选框：radio</span><br><span class="line">复选框：checkbox</span><br><span class="line">普通按钮：button</span><br><span class="line">提交按钮：submit</span><br><span class="line">重置按钮：reset</span><br></pre></td></tr></table></figure><h2 id="HTML-超链接"><a href="#HTML-超链接" class="headerlink" title="HTML-超链接"></a>HTML-超链接</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">“http://www.baidu.com”</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">锚点：<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">“dian”</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-图片"><a href="#HTML-图片" class="headerlink" title="HTML-图片"></a>HTML-图片</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.图像标签</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">“图片路径”</span>&gt;</span><span class="tag">&lt;/<span class="name">img</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2.Body属性</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">“图片路径</span>" &gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-路径"><a href="#HTML-路径" class="headerlink" title="HTML-路径"></a>HTML-路径</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/根路径</span><br><span class="line">./当前目录</span><br><span class="line">../上层目录</span><br><span class="line">../../上层目录的上层目录</span><br></pre></td></tr></table></figure><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><blockquote><p><font color="purple"><strong>CSS又称级联样式表，是用来美化页面效果的神器，目前最新版本为CSS3，是能够真正做到网页表现与内容分离的一种样式设计语言。CSS能够对网页中的对象的位置排版进行像素级的精确控制，支持几乎所有的字体字号样式，并能够进行初步交互设计，是目前基于文本展示最优秀的表现设计语言。</strong></font></p></blockquote><h2 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器"></a>ID选择器</h2><ul><li><font color="tomato"><strong>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。   id 选择器以 “#” 来定义，元素id不可重复定义。</strong></font></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">#red &#123;color:red;&#125;</span><br><span class="line">#green &#123;color:green;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"red"</span>&gt;</span>这个段落是红色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"green"</span>&gt;</span>这个段落是绿色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Class选择器"><a href="#Class选择器" class="headerlink" title="Class选择器"></a>Class选择器</h2><ul><li><font color="tomato"><strong>class 选择器可以为标有特定class的元素指定特定的样式。 class选择器以 “.” 来定义，多个元素可共用一个class。</strong></font></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">.red &#123;color:red;&#125;</span><br><span class="line">.green &#123;color:green;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>这个段落是红色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"green"</span>&gt;</span>这个段落是绿色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>这段又是红色，吼吼。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"green"</span>&gt;</span>这段又是绿色，哈哈。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="DIV-CSS全屏固定背景"><a href="#DIV-CSS全屏固定背景" class="headerlink" title="DIV+CSS全屏固定背景"></a>DIV+CSS全屏固定背景</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">#bg&#123;</span><br><span class="line">background-image: url(background_1.jpg);</span><br><span class="line">background-repeat:no-repeat;</span><br><span class="line">background-size:100% 100%;</span><br><span class="line">position: fixed;</span><br><span class="line">left: 0;right: 0;top: 0;bottom: 0;</span><br><span class="line">z-index: -999;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="实战演习："><a href="#实战演习：" class="headerlink" title="实战演习："></a>实战演习：</h1><h2 id="自定义按钮样式"><a href="#自定义按钮样式" class="headerlink" title="自定义按钮样式"></a>自定义按钮样式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>自定义按钮样式<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/McStyle.css"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">.btn&#123;</span><br><span class="line">padding:8px;</span><br><span class="line">cursor:pointer;</span><br><span class="line">font-size:14px;</span><br><span class="line">border:1px solid transparent;</span><br><span class="line">border-radius:4px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.btn-default&#123;</span><br><span class="line">background-color:#fff;</span><br><span class="line">border-color:#aaa;</span><br><span class="line">&#125;</span><br><span class="line">.btn-default:hover&#123;</span><br><span class="line">background-color:#e5e5e5;</span><br><span class="line">&#125;</span><br><span class="line">.btn-default:active&#123;</span><br><span class="line">background-color:#ccc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn-primary&#123;</span><br><span class="line">background-color:#337ab7;</span><br><span class="line">border-color:#2f6da4;</span><br><span class="line">color:#fff;</span><br><span class="line">&#125;</span><br><span class="line">.btn-primary:hover&#123;</span><br><span class="line">background-color:#286090;</span><br><span class="line">&#125;</span><br><span class="line">.btn-primary:active&#123;</span><br><span class="line">background-color:#204d74;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn-danger&#123;</span><br><span class="line">background-color:#d9534f;</span><br><span class="line">border-color:#d43f3a;</span><br><span class="line">color:#fff;</span><br><span class="line">&#125;</span><br><span class="line">.btn-danger:hover&#123;</span><br><span class="line">background-color:#c9302c;</span><br><span class="line">&#125;</span><br><span class="line">.btn-danger:active&#123;</span><br><span class="line">background-color:#ae0000;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn-success&#123;</span><br><span class="line">background-color:#5cb85c;</span><br><span class="line">border-color:#4cae4c;</span><br><span class="line">color:#fff;</span><br><span class="line">&#125;</span><br><span class="line">.btn-success:hover&#123;</span><br><span class="line">background-color:#449d44;</span><br><span class="line">&#125;</span><br><span class="line">.btn-success:active&#123;</span><br><span class="line">background-color:#007700;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn-info&#123;</span><br><span class="line">background-color:#5bc0de;</span><br><span class="line">border-color:#46b8da;</span><br><span class="line">color:#fff;</span><br><span class="line">&#125;</span><br><span class="line">.btn-info:hover&#123;</span><br><span class="line">background-color:#31b0d5;</span><br><span class="line">&#125;</span><br><span class="line">.btn-info:active&#123;</span><br><span class="line">background-color:#1195b5;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> &gt;</span>点这里，点这里<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>我的默认按钮样式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>我的主要按钮样式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>我的危险按钮样式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>我的成功按钮样式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span>&gt;</span>我的消息按钮样式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">style</span>=<span class="string">"width:200px;"</span>&gt;</span>新按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">value</span>=<span class="string">"input也可以使用哦"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">style</span>=<span class="string">"width:150px;float:left;margin:0 3px ;"</span>&gt;</span>DIV也可以使用哦<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="自定义文本框样式"><a href="#自定义文本框样式" class="headerlink" title="自定义文本框样式"></a>自定义文本框样式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>自定义文本框样式<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/McStyle.css"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">.form-text&#123;</span><br><span class="line">padding:8px;</span><br><span class="line">font-size:16px;</span><br><span class="line">border:1px solid #ccc;</span><br><span class="line">border-radius:5px;</span><br><span class="line">box-shadow:0 1px 1px rgba(0,0,0,0.2) inset;</span><br><span class="line">width:400px;</span><br><span class="line">margin:2px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.form-text:focus&#123;</span><br><span class="line">border-color:66afe9;</span><br><span class="line">box-shadow:0 2px 2px rgba(0,0,0,0.2) inset,0 0 9px rgba(100,170,235,0.65);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">box-shadow:x位移  y位移  阴影大小   rgba(红，绿，蓝，透明度) inset代表内阴影，不加就是外阴影</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">位移是相对当前元素边界进行位移</span></span><br><span class="line"><span class="comment">rgb颜色取值是：0-255</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"这个是原始的文本框"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-text"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"请填写用户名..."</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-text"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"请填写用户名..."</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS定位"><a href="#CSS定位" class="headerlink" title="CSS定位"></a>CSS定位</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>我的页面<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">bgcolor</span>=<span class="string">"#eeeeee"</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line">绝对定位(absolute):脱离文档流，相对于父元素进行绝对定位<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">相对定位(relative):不脱离文档流，占用原位置，相对于父元素进行绝对定位<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">固定定位(fixed):相对于浏览器窗口进行定位，不受滚动条移动的影响</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 绝对定位(absolute) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute;width:200px;height:200px;background-color:#FFCCCC;left:100px;top:100px;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute;width:200px;height:200px;background-color:#FFFF99;left:100px;top:100px;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 相对定位(relative) --&gt;</span></span><br><span class="line">共创</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:relative;width:100px;height:100px;background-color:#996699;left:400px;top:160px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">中国梦</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 固定定位(fixed) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:fixed;width:50px;height:50px;background-color:#33CC33;right:20px;bottom:20px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h1&gt;&lt;h2 id=&quot;HTML实例：&quot;&gt;&lt;a href=&quot;#HTML实例：&quot; class=&quot;headerlink&quot; title=&quot;HTM
      
    
    </summary>
    
      <category term="Web学习" scheme="https://133608520.github.io/categories/Web%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Web学习" scheme="https://133608520.github.io/tags/Web%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JDBC学习-3</title>
    <link href="https://133608520.github.io/2019/07/26/11/"/>
    <id>https://133608520.github.io/2019/07/26/11/</id>
    <published>2019-07-26T10:02:08.000Z</published>
    <updated>2019-07-26T10:39:21.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DAO设计模式"><a href="#DAO设计模式" class="headerlink" title="DAO设计模式"></a>DAO设计模式</h1><p>[TOC]</p><h2 id="UserDAO-java"><a href="#UserDAO-java" class="headerlink" title="UserDAO.java"></a><font color="red"><strong>UserDAO.java</strong></font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> demo.model.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实体操作接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDAO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 保存用户</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> u</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 本次成功修改条数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">save</span><span class="params">(User u)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 修改用户信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> u</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(User u)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过id删除用户</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过用户id查人</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">User <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询所有用户</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过用户名和密码查人</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pass</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">User <span class="title">find</span><span class="params">(String name,String pass)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><font color="red">UserDaoImpl.java</font></strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> demo.dao.UserDAO;</span><br><span class="line"><span class="keyword">import</span> demo.model.User;</span><br><span class="line"><span class="keyword">import</span> demo.util.JDBCUtil;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 数据持久化的MySQL实现</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDAO</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">save</span><span class="params">(User u)</span> </span>&#123;</span><br><span class="line">Connection conn = JDBCUtil.getConnection();</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">"insert into usr values(0,?,?)"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line">pst.setString(<span class="number">1</span>, u.getUname());</span><br><span class="line">pst.setString(<span class="number">2</span>, u.getUpass());</span><br><span class="line"><span class="keyword">return</span> pst.executeUpdate();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">JDBCUtil.close(conn, pst);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(User usr)</span> </span>&#123;</span><br><span class="line">Connection conn = JDBCUtil.getConnection();</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">"update usr set usrname=?,usrpass=? where id=?"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line">pst.setString(<span class="number">1</span>, usr.getUname());</span><br><span class="line">pst.setString(<span class="number">2</span>, usr.getUpass());</span><br><span class="line">pst.setInt(<span class="number">3</span>, usr.getId());</span><br><span class="line"><span class="keyword">return</span> pst.executeUpdate();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">JDBCUtil.close(conn, pst);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">Connection conn = JDBCUtil.getConnection();</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">"delete from usr where id=?"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line">pst.setInt(<span class="number">1</span>, id);</span><br><span class="line"><span class="keyword">return</span> pst.executeUpdate();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">JDBCUtil.close(conn, pst);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findById</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">Connection conn = JDBCUtil.getConnection();</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">"select * from usr where id=?"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line">pst.setInt(<span class="number">1</span>, id);</span><br><span class="line">rs = pst.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">User usr = <span class="keyword">new</span> User();</span><br><span class="line">usr.setId(rs.getInt(<span class="string">"id"</span>));</span><br><span class="line">usr.setUname(rs.getString(<span class="string">"usrname"</span>));</span><br><span class="line">usr.setUpass(rs.getString(<span class="string">"usrpass"</span>));</span><br><span class="line"><span class="keyword">return</span> usr;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">JDBCUtil.close(conn, pst, rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">List&lt;User&gt; userList = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line">Connection conn = JDBCUtil.getConnection();</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">"select * from usr"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line">rs = pst.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">User usr = <span class="keyword">new</span> User();</span><br><span class="line">usr.setId(rs.getInt(<span class="string">"id"</span>));</span><br><span class="line">usr.setUname(rs.getString(<span class="string">"usrname"</span>));</span><br><span class="line">usr.setUpass(rs.getString(<span class="string">"usrpass"</span>));</span><br><span class="line">userList.add(usr);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">JDBCUtil.close(conn, pst, rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> userList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">find</span><span class="params">(String name, String pass)</span> </span>&#123;</span><br><span class="line">Connection conn = JDBCUtil.getConnection();</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">"select * from usr where usrname=? and usrpass=?"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line">pst.setString(<span class="number">1</span>, name);</span><br><span class="line">pst.setString(<span class="number">2</span>, pass);</span><br><span class="line">rs = pst.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">User usr = <span class="keyword">new</span> User();</span><br><span class="line">usr.setId(rs.getInt(<span class="string">"id"</span>));</span><br><span class="line">usr.setUname(rs.getString(<span class="string">"usrname"</span>));</span><br><span class="line">usr.setUpass(rs.getString(<span class="string">"usrpass"</span>));</span><br><span class="line"><span class="keyword">return</span> usr;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">JDBCUtil.close(conn, pst, rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="User-java"><a href="#User-java" class="headerlink" title="User.java"></a><font color="red"><strong>User.java</strong></font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.model;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实体模型</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">private</span> String uname;</span><br><span class="line"><span class="keyword">private</span> String upass;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String uname, String upass)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.uname = uname;</span><br><span class="line"><span class="keyword">this</span>.upass = upass;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> id, String uname, String upass)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line"><span class="keyword">this</span>.uname = uname;</span><br><span class="line"><span class="keyword">this</span>.upass = upass;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUname</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> uname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUname</span><span class="params">(String uname)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.uname = uname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUpass</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> upass;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUpass</span><span class="params">(String upass)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.upass = upass;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="UserDAOTest-java"><a href="#UserDAOTest-java" class="headerlink" title="UserDAOTest.java"></a><strong><font color="red">UserDAOTest.java</font></strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.Assert.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> demo.dao.UserDAO;</span><br><span class="line"><span class="keyword">import</span> demo.dao.impl.UserDaoImpl;</span><br><span class="line"><span class="keyword">import</span> demo.model.User;</span><br><span class="line"><span class="keyword">import</span> demo.util.DaoFactory;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单元测试DEMO</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * JUnit 4 开始使用 Java 5 中的注解（annotation），常用的几个 annotation 介绍：</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BeforeClass</span>：针对所有测试，只执行一次，且必须为static void</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Before</span>：初始化方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Test</span>：测试方法，在这里可以测试期望异常和超时时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@After</span>：释放资源</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@AfterClass</span>：针对所有测试，只执行一次，且必须为static void</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Ignore</span>：忽略的测试方法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 一个单元测试用例执行顺序为：</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@BeforeClass</span> –&gt; <span class="doctag">@Before</span> –&gt; <span class="doctag">@Test</span> –&gt; <span class="doctag">@After</span> –&gt; <span class="doctag">@AfterClass</span></span></span><br><span class="line"><span class="comment"> * 每一个测试方法的调用顺序为：</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Before</span> –&gt; <span class="doctag">@Test</span> –&gt; <span class="doctag">@After</span></span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 夏增明 create data:2015-11-13</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDAOTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">UserDAO dao = DaoFactory.getUserDao();</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"-------------"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">User usr1 = <span class="keyword">new</span> User(<span class="string">"吕布"</span>, <span class="string">"123456"</span>);</span><br><span class="line">User usr2 = <span class="keyword">new</span> User(<span class="string">"吕小布"</span>, <span class="string">"564654"</span>);</span><br><span class="line">User usr3 = <span class="keyword">new</span> User(<span class="string">"吕大布"</span>, <span class="string">"987987"</span>);</span><br><span class="line"></span><br><span class="line">dao.save(usr1);</span><br><span class="line">dao.save(usr2);</span><br><span class="line">dao.save(usr3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">User usr = <span class="keyword">new</span> User(<span class="number">8</span>, <span class="string">"小吕布"</span>, <span class="string">"111111"</span>);</span><br><span class="line">dao.update(usr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">dao.delete(<span class="number">9</span>);</span><br><span class="line">dao.delete(<span class="number">10</span>);</span><br><span class="line">dao.delete(<span class="number">11</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">User usr = dao.findById(<span class="number">8</span>);</span><br><span class="line"><span class="keyword">if</span>(usr==<span class="keyword">null</span>)&#123;</span><br><span class="line">fail(<span class="string">"BUG:8号数据没有查到"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(usr.getUname());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">List&lt;User&gt; list = dao.findAll();</span><br><span class="line"><span class="keyword">if</span>(list.size()!=<span class="number">7</span>)&#123;</span><br><span class="line">fail(<span class="string">"记录个数不对"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(User u : list)&#123;</span><br><span class="line">System.out.println(u.getUname());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFind</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//测试用例1，正确情况</span></span><br><span class="line">User usr = dao.find(<span class="string">"admin"</span>, <span class="string">"123"</span>);</span><br><span class="line"><span class="keyword">if</span>(usr==<span class="keyword">null</span> || usr.getId()!=<span class="number">4</span>)&#123;</span><br><span class="line">fail(<span class="string">"查到的数据不对"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">System.out.println(usr.getId()+<span class="string">","</span>+usr.getUname()+<span class="string">","</span>+usr.getUpass());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试用例2，故意填错</span></span><br><span class="line">User usr1 = dao.find(<span class="string">"admin"</span>, <span class="string">"123456"</span>);</span><br><span class="line"><span class="keyword">if</span>(usr1==<span class="keyword">null</span> || usr1.getId()!=<span class="number">4</span>)&#123;</span><br><span class="line">System.out.println(<span class="string">"功能OK"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">fail(<span class="string">"密码不对都能登录，重大BUG"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DaoFactory-java"><a href="#DaoFactory-java" class="headerlink" title="DaoFactory.java"></a><font color="red"><strong>DaoFactory.java</strong></font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> demo.dao.BookDao;</span><br><span class="line"><span class="keyword">import</span> demo.dao.UserDAO;</span><br><span class="line"><span class="keyword">import</span> demo.dao.impl.UserDaoImpl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用来创建Dao对象的工厂，可以实现统一</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span></span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaoFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UserDAO <span class="title">getUserDao</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> BookDao <span class="title">getBookDao</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以此类推</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JDBCUtil-java"><a href="#JDBCUtil-java" class="headerlink" title="JDBCUtil.java"></a><font color="red"><strong>JDBCUtil.java</strong></font></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC工具类：主要功能包括【获取连接】，【释放jdbc资源】</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line"><span class="comment">//数据库连接配置</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="string">"jdbc:mysql://192.168.10.235:3306/wukong_db"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="string">"wukong"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String pass = <span class="string">"123"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"><span class="comment">//第一次运行的时候加载驱动</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">new</span> com.mysql.jdbc.Driver();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"MySQL驱动加载异常！"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工厂模式获取新连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Connection conn = DriverManager.getConnection(url, user, pass);</span><br><span class="line"><span class="keyword">return</span> conn;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭物理连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn)</span></span>&#123;</span><br><span class="line">close(conn, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭物理连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn,Statement st)</span></span>&#123;</span><br><span class="line">close(conn, st, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭物理连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn,Statement st,ResultSet rs)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>)rs.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(st!=<span class="keyword">null</span>)st.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(conn!=<span class="keyword">null</span>)conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JDBC连接池"><a href="#JDBC连接池" class="headerlink" title="JDBC连接池"></a>JDBC连接池</h1><p><font color="steelblue"><strong>JDBC连接池又叫数据源</strong></font></p><h2 id="连接池说明"><a href="#连接池说明" class="headerlink" title="连接池说明"></a>连接池说明</h2><blockquote><p><font color="green"><strong>数据源和数据库连接不同，数据源无需创建多个，它是产生数据库连接的工厂，因此整个应用只需要一个数据源即可</strong>。</font></p><p><font color="green"><strong>当数据库访问结束后，程序还是像以前一样关闭数据库连接：conn.close(); 但上面的代码并没有关闭数据库的物理连接，它仅仅把数据库连接释放，归还给了数据库连接池</strong></font></p></blockquote><h2 id="两种开源连接池"><a href="#两种开源连接池" class="headerlink" title="两种开源连接池"></a>两种开源连接池</h2><p>JDBC 的数据库连接池使用 javax.sql.DataSource 来表示，DataSource 只是一个接口，该接口通常由服务器(Weblogic, JBoss, Tomcat)提供实现，也有一些开源组织提供实现：<br><strong>DBCP 连接池</strong><br><strong>C3P0 连接池</strong>  <font color="red"><strong>(常用)</strong></font><br>DataSource 通常被称为数据源，它包含连接池和连接池管理两个部分，习惯上也经常把 DataSource 称为连接池</p><h2 id="C3p0使用"><a href="#C3p0使用" class="headerlink" title="C3p0使用"></a>C3p0使用</h2><blockquote><p><strong>使用c3p0需要导入c3p0的jar包</strong></p></blockquote><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先需要创建连接池对象</span></span><br><span class="line">ComboPooledDataSource ds = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">//设置驱动和url</span></span><br><span class="line">    ds.setDriverClass(<span class="string">"oracle.jdbc.driver.OracleDriver"</span>);</span><br><span class="line">    ds.setJdbcUrl(<span class="string">"jdbc:oracle:thin:@127.0.0.1:1521:orcl"</span>);</span><br><span class="line">    <span class="comment">//设置用户名和密码</span></span><br><span class="line">    ds.setUser(<span class="string">"hehe"</span>);</span><br><span class="line">    ds.setPassword(<span class="string">"abc"</span>);</span><br><span class="line">    ds.setMaxPoolSize(<span class="number">40</span>);<span class="comment">//最大连接数</span></span><br><span class="line">    ds.setMinPoolSize(<span class="number">40</span>);<span class="comment">//最小连接数</span></span><br><span class="line">    ds.setInitialPoolSize(<span class="number">10</span>);<span class="comment">//初始连接数</span></span><br><span class="line">    Connection conn = ds.getConnection();</span><br><span class="line">    System.out.println(<span class="string">"成功从c3p0获取连接"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DAO设计模式&quot;&gt;&lt;a href=&quot;#DAO设计模式&quot; class=&quot;headerlink&quot; title=&quot;DAO设计模式&quot;&gt;&lt;/a&gt;DAO设计模式&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;UserDAO-java&quot;&gt;&lt;a href=&quot;#UserDAO-
      
    
    </summary>
    
      <category term="JDBC学习" scheme="https://133608520.github.io/categories/JDBC%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JDBC学习" scheme="https://133608520.github.io/tags/JDBC%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JDBC学习-2</title>
    <link href="https://133608520.github.io/2019/07/26/10/"/>
    <id>https://133608520.github.io/2019/07/26/10/</id>
    <published>2019-07-26T03:52:10.000Z</published>
    <updated>2019-07-26T04:30:31.655Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JDBC操作数据库"><a href="#JDBC操作数据库" class="headerlink" title="JDBC操作数据库"></a>JDBC操作数据库</h1><p><strong>1.  JDBC API核心类：</strong><br><strong>Driver</strong></p><p><strong>DriverManager</strong></p><p><strong>Connection</strong></p><p><strong>Statemen</strong></p><p><strong>ResultSet</strong></p><p><strong>2.预编译PreparedStarement的应用及其作用</strong> </p><ol><li><h1 id="JDBC-API核心类"><a href="#JDBC-API核心类" class="headerlink" title="JDBC API核心类"></a>JDBC API核心类</h1></li></ol><blockquote><p>1.Driver:代表驱动程序</p><ol start="2"><li>DirverManager类：<br>是JDBC的管理层，作用于用户和驱动之间。负责注册和加载JDBC驱动</li><li>Connection接口：conn<br>代表与数据库的连接。当用户与数据库交互的时候，首先必须建立一个数据库链接，只有在获得链接之后，才能进行进一步的操作，是用户与数据库之间的桥梁。</li><li>Statement对象 ：st<br>用于执行静态 SQL 语句并返回结果。Statement可以通过Connection对象的createStatement()方法创建。Statement对象只能执行静态sql语句。不能可以执行动态的sql（sql串中有参数），执行动态sql使用PreparedStatement对象，用法和Statement类似。</li><li>ResultSet对象：rs<br>ResultSet对象是结果集对象。当程序执行一条用于查询功能的sql语句（select）后，JDBC会把数据库的查询结果封装成一个ResultSet对象返回给程序。ResultSet 对象具有指向其当前数据行的指针，用户可以移动该指针读取ResultSet中的不同记录。另外ResultSet对象还封装了一些关于结果集表的列名、数据类型等信息，这些信息一般可以通过ResultSetMetaData对象来读取。</li></ol></blockquote><h1 id="JDBC事务处理"><a href="#JDBC事务处理" class="headerlink" title="JDBC事务处理"></a>JDBC事务处理</h1><blockquote><p>让多条SQL语句作为一个事务执行，需要取消自动提交：<br>conn. setAutoCommit(false);</p><p>在所有SQL语句都执行成功后，使用commit();提交事务<br>在出现异常时，调用 rollback(); 方法回滚事务</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//向数据库中添加10条记录，如果有异常，全部撤销</span></span><br><span class="line">Statement st = conn.createStatement();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    onn.setAutoCommit(<span class="keyword">false</span>);<span class="comment">//取消自动提交</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        st.executeUpdate(<span class="string">"insert into student values('小明',20)"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    conn.commit();<span class="comment">//提交事务</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">    conn.rollback();<span class="comment">//如果没有成功，则事务回滚</span></span><br><span class="line">&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">    conn.setAutoCommit(<span class="keyword">true</span>);<span class="comment">//恢复事务自动提交</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="资源释放"><a href="#资源释放" class="headerlink" title="资源释放"></a>资源释放</h1><blockquote><p><font color="steelblue"><strong>数据库连接是有数量限制的，用完的连接应及时关闭。</strong></font> </p><p><font color="slateblue"><strong>ResultSet 、Statement 和Connetction是依次依赖的。 要按先 ResultSet ，再Statement，最后Connetction的顺序关闭资源。 因ResultSet和Statement在连接的情况下才能使用，所以在连使用束 后可能还有其他的statement还在连接，所以不能先关闭Connection。</strong></font></p><p><strong>调用close（）方法:</strong><br>        <strong>rs.close();<br>        sta.close();<br>        conn.close();</strong></p></blockquote><h1 id="PreparedStatement"><a href="#PreparedStatement" class="headerlink" title=" PreparedStatement"></a><font color="red"> PreparedStatement</font></h1><blockquote><p><font color="steelblue"><strong>PreparedStatement是预编译语句，继承自Statement，但比Statement功能强大的多。它可以在SQL语句中用问号(?)来代替变量，接下来可以提供多组值，最后执行：</strong></font> </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">conn.setAutoCommit(<span class="keyword">false</span>); <span class="comment">//设置不自动commit</span></span><br><span class="line"><span class="comment">//用问号表示名字和年龄</span></span><br><span class="line">PreparedStatement pst = conn.prepareStatement(“<span class="function">insert into student <span class="title">values</span><span class="params">(?, ?)</span>”)</span>; </span><br><span class="line">pst.setString(<span class="number">1</span>,”李雷”); pst.setInt(<span class="number">2</span>,<span class="number">24</span>); pst.addBatch();<span class="comment">//一条记录</span></span><br><span class="line">pst.setString(<span class="number">1</span>,”李元芳”); pst.setInt(<span class="number">2</span>,<span class="number">33</span>); pst.addBatch();<span class="comment">//又一条记录</span></span><br><span class="line">pst.executeBatch();<span class="comment">//批量执行</span></span><br></pre></td></tr></table></figure><h1 id="编写JDBC工具类"><a href="#编写JDBC工具类" class="headerlink" title="编写JDBC工具类"></a>编写JDBC工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * JDBC工具类：主要功能包括【获取连接】，【释放jdbc资源】</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line"><span class="comment">//数据库连接配置</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="string">"jdbc:mysql://192.168.0.107:3306/wukong_db"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="string">"wukong"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String pass = <span class="string">"123"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line"><span class="comment">//第一次运行的时候加载驱动</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">new</span> com.mysql.jdbc.Driver();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"MySQL驱动加载异常！"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 工厂模式获取新连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Connection conn = DriverManager.getConnection(url, user, pass);</span><br><span class="line"><span class="keyword">return</span> conn;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭物理连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn)</span></span>&#123;</span><br><span class="line">close(conn, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭物理连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn,Statement st)</span></span>&#123;</span><br><span class="line">close(conn, st, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭物理连接</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> conn</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn,Statement st,ResultSet rs)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>)rs.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(st!=<span class="keyword">null</span>)st.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(conn!=<span class="keyword">null</span>)conn.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JDBC操作数据库&quot;&gt;&lt;a href=&quot;#JDBC操作数据库&quot; class=&quot;headerlink&quot; title=&quot;JDBC操作数据库&quot;&gt;&lt;/a&gt;JDBC操作数据库&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1.  JDBC API核心类：&lt;/strong&gt;&lt;br&gt;&lt;stro
      
    
    </summary>
    
      <category term="JDBC学习" scheme="https://133608520.github.io/categories/JDBC%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JDBC学习" scheme="https://133608520.github.io/tags/JDBC%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JDBC学习-1</title>
    <link href="https://133608520.github.io/2019/07/25/9/"/>
    <id>https://133608520.github.io/2019/07/25/9/</id>
    <published>2019-07-25T02:45:01.000Z</published>
    <updated>2019-07-25T03:56:42.476Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL管理员的基本素养"><a href="#MySQL管理员的基本素养" class="headerlink" title="MySQL管理员的基本素养"></a>MySQL管理员的基本素养</h1><ol><li><p><strong>MySQL中默认用户：root@localhost</strong></p></li><li><p><strong>初学者对于默认用户不要做任何修改</strong></p></li><li><p><strong>作为root，千万不要取消自己的服务器权限</strong></p></li><li><p><strong>在MySQL中root@localhost和root@%不是同一个用户</strong></p></li><li><p><strong>普通权限/服务器权限：</strong><br><strong>服务器权限通常都是给各种管理者使用的</strong></p></li><li><p><strong>root主要功能是创建用户和维护权限</strong><br><strong>开发期间为自己创建一个普通用户</strong><br><strong>作为管理员，要低调，不要使用root做开发</strong></p></li></ol><h1 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h1><p> <strong>1 JDBC基本概念</strong> </p><p><strong>2 JDBC的四种驱动类型</strong> </p><p><strong>3 JDBC开发接口</strong></p><p><strong>4 区分不同数据库的方式—URL</strong></p><p><strong>5 访问数据库</strong></p><p><strong>6 注册驱动的几种方法</strong></p><h2 id="JDBC基本概念"><a href="#JDBC基本概念" class="headerlink" title="JDBC基本概念"></a>JDBC基本概念</h2><p> <strong>JDBC（Java Data Base Connectivity,java数据库连接），JDBC提供了一个标准的API，使开发人员能够使用 Java操作数据库。</strong><br><strong>由一组用Java语言编写的类和接口组成</strong><br><strong>用于执行SQL语句</strong><br><strong>可以为多种关系数据库提供统一访问</strong></p><h2 id="JDBC的四种驱动类型"><a href="#JDBC的四种驱动类型" class="headerlink" title="JDBC的四种驱动类型"></a>JDBC的四种驱动类型</h2><p><strong>1.JDBC-ODBC桥</strong></p><p><strong>2.本地API驱动</strong></p><p><strong>3.网络协议驱动</strong></p><p><strong>4.本地协议驱动</strong></p><h3 id="本地协议驱动（纯Java）"><a href="#本地协议驱动（纯Java）" class="headerlink" title="本地协议驱动（纯Java）"></a>本地协议驱动（纯Java）</h3><h2 id="JDBC开发接口"><a href="#JDBC开发接口" class="headerlink" title="JDBC开发接口"></a>JDBC开发接口</h2><p><strong>1.Java.sql.Driver 接口是所有JDBC驱动程序需要实现的接口</strong><br><strong>2.DriverManager 类：驱动程序管理员</strong><br><strong>3.Connection 接口：代表数据库连接</strong><br><strong>4.Statement 、PreparedStatement、CallableStatement 接口：数据库操作对象</strong><br><strong>5.ResultSet 接口：代表结果集</strong><br><strong>6.DatabaseMetadata、ResultSetMetadata接口：代表元数据</strong><br><strong>7.Types 类：代表JDBC类型</strong></p><h2 id="不同数据库的URL"><a href="#不同数据库的URL" class="headerlink" title="不同数据库的URL"></a>不同数据库的URL</h2><p><strong>Oracle</strong><br><strong>驱动JAR包：ojdbc14.jar</strong><br><strong>驱动程序类名: oracle.jdbc.driver.OracleDriver</strong><br><strong>JDBC URL:</strong><br><strong>jdbc:oracle:thin:@//<host>:port&gt;/ServiceName</host></strong><br><strong>jdbc:oracle:thin:@<host>:<port>:<sid></sid></port></host></strong></p><p><strong>MySQL</strong><br><strong>驱动JAR包：mysql-connector-java-x.x.xx-bin.jar</strong><br><strong>驱动程序类名: com.mysql.jdbc.Driver</strong><br><strong>JDBC URL: jdbc:mysql://<host>:<port>/<database_name></database_name></port></host></strong><br><strong>默认端口3306，如果服务器使用默认端口则port可以省略</strong><br><strong>MySQL Connector/J Driver 允许在URL中添加额外的连接属性jdbc:mysql://<host>:<port>/<database_name>?property1=value1&amp;property2=value2</database_name></port></host></strong></p><h2 id="Java访问Oracle数据库"><a href="#Java访问Oracle数据库" class="headerlink" title="Java访问Oracle数据库"></a>Java访问Oracle数据库</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//注册JDBC驱动</span></span><br><span class="line">Class.forName(<span class="string">"oracle.jdbc.driver.OracleDriver"</span>); </span><br><span class="line"><span class="comment">//定义连接字符串</span></span><br><span class="line">String url=<span class="string">"jdbc:oracle:thin:@localhost:1521:orcl"</span>; </span><br><span class="line"><span class="comment">//orcl为数据库的SID </span></span><br><span class="line">String user=“hehe<span class="string">"; </span></span><br><span class="line"><span class="string">String password=“abc"</span>; </span><br><span class="line"><span class="comment">//使用驱动管理器建立与数据库的连接</span></span><br><span class="line">Connection conn= DriverManager.getConnection(url,user,password);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line"><span class="comment">// JDBC开发第一步导入驱动包jar</span></span><br><span class="line">String url = <span class="string">"jdbc:oracle:thin:@//192.168.0.105:1521/orcl"</span>;</span><br><span class="line">String name = <span class="string">"liuyanhao"</span>;</span><br><span class="line">String password = <span class="string">"abc123"</span>;</span><br><span class="line"><span class="comment">//注册jdbc驱动</span></span><br><span class="line">Class.forName(<span class="string">"oracle.jdbc.driver.OracleDriver"</span>);</span><br><span class="line"><span class="comment">//使用驱动管理器获得一条连接</span></span><br><span class="line">Connection conn = DriverManager.getConnection(url, name, password);</span><br><span class="line"><span class="keyword">if</span>(conn!=<span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"连接数据库成功"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conn.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注册驱动的方式"><a href="#注册驱动的方式" class="headerlink" title="注册驱动的方式"></a>注册驱动的方式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.使用JVM查找类名并加载</span><br><span class="line">Class.forName(<span class="string">" oracle.jdbc.driver.OracleDriver "</span>);</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.通过系统属性设置</span><br><span class="line">System.setProperty(<span class="string">"jdbc.drivers"</span>,</span><br><span class="line"><span class="string">"oracle.jdbc.driver.OracleDriver"</span>);</span><br><span class="line"><span class="number">3</span>.注册相应的JDBC驱动，比较直观</span><br><span class="line"><span class="keyword">new</span> oracle.jdbc.driver.OracleDriver();</span><br></pre></td></tr></table></figure><h1 id="通过Java操作数据库"><a href="#通过Java操作数据库" class="headerlink" title="通过Java操作数据库"></a>通过Java操作数据库</h1><p><strong>1.导入驱动jar包</strong><br><strong>2.注册JDBC驱动类</strong><br><strong>3.建立数据库连接Connection</strong><br><strong>4.通过连接创建数据库操作对象Statement</strong><br><strong>5.创建结果集ResultSet</strong><br><strong>6.关闭各种jdbc相关对象</strong><br><strong>关闭顺序：rs / st / conn</strong></p><h2 id="执行SQL"><a href="#执行SQL" class="headerlink" title="执行SQL"></a>执行SQL</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Statement st = conn.createStatement();</span><br><span class="line"></span><br><span class="line">Statement对象可以执行SQL语句：</span><br><span class="line">st.executeQuery(sql)</span><br><span class="line">执行select语句返回结果集</span><br><span class="line"></span><br><span class="line">st.executeUpdate(sql)</span><br><span class="line">可以执行insert或update语句返回受影响的行数</span><br><span class="line">可以执行DDL，返回行数为<span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hello;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException </span>&#123;</span><br><span class="line"><span class="comment">// 导入jar包</span></span><br><span class="line">String url = <span class="string">"jdbc:mysql://192.168.0.105:3306/lyh"</span>;</span><br><span class="line">String user = <span class="string">"LYH"</span>;</span><br><span class="line">String password = <span class="string">"123456"</span>;</span><br><span class="line">String sql = <span class="string">"create table student(id int,name varchar(255),age int);"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//注册JDBC驱动</span></span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">            <span class="comment">//使用驱动管理器建立与数据库的连接</span></span><br><span class="line">Connection coon = DriverManager.getConnection(url, user, password);</span><br><span class="line">     System.out.println(<span class="string">"连接数据库成功"</span>);</span><br><span class="line">     <span class="comment">//在连接成功后，st可以执行SQL</span></span><br><span class="line">     Statement st = coon.createStatement();</span><br><span class="line">            <span class="comment">//执行sql语句，创建student表</span></span><br><span class="line">     st.execute(sql);</span><br><span class="line">            <span class="comment">//增删改查用Update，返回受影响的行数</span></span><br><span class="line">      <span class="keyword">int</span> i = st.executeUpdate(<span class="string">"insert into student values(1,'大明',20);"</span>);</span><br><span class="line">      System.out.println(i);</span><br><span class="line">            <span class="comment">//ResultSet是一个结果集，默认的游标为0，结果集就相当于查询返回的表</span></span><br><span class="line">      ResultSet rs = st.executeQuery(<span class="string">"select * from student"</span>);</span><br><span class="line">     <span class="keyword">while</span>( rs.next())<span class="comment">//向下移动游标，从而指向第一行,返回boolean值</span></span><br><span class="line">     &#123;</span><br><span class="line">     System.out.println(rs.getString(<span class="string">"id"</span>));</span><br><span class="line">        System.out.println(rs.getString(<span class="string">"name"</span>));</span><br><span class="line">      System.out.println(rs.getString(<span class="string">"age"</span>));</span><br><span class="line">     &#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException x)</span><br><span class="line">&#123;</span><br><span class="line">x.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MySQL管理员的基本素养&quot;&gt;&lt;a href=&quot;#MySQL管理员的基本素养&quot; class=&quot;headerlink&quot; title=&quot;MySQL管理员的基本素养&quot;&gt;&lt;/a&gt;MySQL管理员的基本素养&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;MySQL中默认用
      
    
    </summary>
    
      <category term="JDBC学习" scheme="https://133608520.github.io/categories/JDBC%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="JDBC学习" scheme="https://133608520.github.io/tags/JDBC%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Oracle学习-4</title>
    <link href="https://133608520.github.io/2019/07/24/8/"/>
    <id>https://133608520.github.io/2019/07/24/8/</id>
    <published>2019-07-24T09:58:43.000Z</published>
    <updated>2019-07-24T10:09:56.716Z</updated>
    
    <content type="html"><![CDATA[<h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">存储过程</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span></span><br><span class="line"><span class="keyword">procedure</span> pro_hello</span><br><span class="line">(</span><br><span class="line"><span class="comment">--参数列表</span></span><br><span class="line">  A <span class="keyword">IN</span> <span class="built_in">NUMBER</span>,</span><br><span class="line">  B <span class="keyword">IN</span> <span class="built_in">NUMBER</span>,</span><br><span class="line">  C <span class="keyword">OUT</span> <span class="built_in">NUMBER</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">IS</span>            注意：如果这里不需要变量，要用  <span class="keyword">AS</span> </span><br><span class="line"><span class="comment">--定义变量</span></span><br><span class="line">x <span class="built_in">integer</span> := <span class="number">0</span>;</span><br><span class="line">y integer := 2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  x := A*<span class="number">2</span>;</span><br><span class="line">  y := B;</span><br><span class="line">  <span class="keyword">SELECT</span> (x+y) <span class="keyword">INTO</span> C <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">END</span> pro_hello;</span><br></pre></td></tr></table></figure><p><strong>注意分号的使用</strong></p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span></span><br><span class="line"><span class="keyword">FUNCTION</span> FUN_SUM</span><br><span class="line">(</span><br><span class="line"><span class="comment">--参数列表</span></span><br><span class="line">  A <span class="keyword">IN</span> <span class="built_in">NUMBER</span>,</span><br><span class="line">  B <span class="keyword">IN</span> <span class="built_in">NUMBER</span>,</span><br><span class="line">  C <span class="keyword">OUT</span> <span class="built_in">NUMBER</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">RETURN</span> <span class="built_in">NUMBER</span> </span><br><span class="line"><span class="keyword">IS</span>            注意：如果这里不需要变量，要用  <span class="keyword">AS</span> </span><br><span class="line"><span class="comment">--定义变量</span></span><br><span class="line">x <span class="built_in">integer</span> := <span class="number">0</span>;</span><br><span class="line">y integer := 2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  x := A*<span class="number">2</span>;</span><br><span class="line">  y := B;</span><br><span class="line">  <span class="keyword">SELECT</span> (x+y) <span class="keyword">INTO</span> C <span class="keyword">FROM</span> DUAL;</span><br><span class="line">  RETURN C;</span><br><span class="line"><span class="keyword">END</span> FUN_SUM;</span><br></pre></td></tr></table></figure><blockquote><p>函数可以用sql语句调用：</p><p><strong>select FUN_SUM(10,20) from dual;</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;存储过程&quot;&gt;&lt;a href=&quot;#存储过程&quot; class=&quot;headerlink&quot; title=&quot;存储过程&quot;&gt;&lt;/a&gt;存储过程&lt;/h1&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="Oracle学习" scheme="https://133608520.github.io/categories/Oracle%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Oracle学习" scheme="https://133608520.github.io/tags/Oracle%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Oracle学习-3</title>
    <link href="https://133608520.github.io/2019/07/23/7/"/>
    <id>https://133608520.github.io/2019/07/23/7/</id>
    <published>2019-07-23T08:07:08.000Z</published>
    <updated>2019-07-23T08:39:45.844Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Oracle常用函数"><a href="#Oracle常用函数" class="headerlink" title="Oracle常用函数"></a>Oracle常用函数</h1><p><strong>字符函数</strong><br><strong>数字函数</strong><br><strong>日期函数</strong><br><strong>转换函数</strong><br><strong>系统函数</strong></p><h2 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h2><p><strong>lower(char)：将字符串转化为小写的格式。</strong><br><strong>upper(char)：将字符串转化为大写的格式。</strong></p><p><strong>length(char)：返回字符串的长度。</strong></p><p><strong>substr(char, start, len)：截取字符串的子串，n代表取n个字符的意思，不是代表取到第n个</strong></p><p><strong>replace(char1, search_string, replace_string)</strong></p><p><strong>instr(C1,C2,I,J) –&gt;判断某字符或字符串是否存在，存在返回出现的位置的索引，否则返回小于1;在一个字符串中搜索指定的字符,返回发现指定的字符的位置;</strong></p><p><strong>C1 被搜索的字符串</strong></p><p><strong>C2 希望搜索的字符串</strong></p><p><strong>I 搜索的开始位置,默认为1</strong></p><p><strong>J 出现的位置,默认为1</strong></p><blockquote><p><strong>问题：将所有员工的名字按小写的方式显示</strong></p><p><strong>SQL&gt; select lower(ename) from emp;</strong></p><p><strong>问题：将所有员工的名字按大写的方式显示。</strong></p><p><strong>SQL&gt; select upper(ename) from emp;</strong></p><p><strong>问题：显示正好为5个字符的员工的姓名。</strong></p><p><strong>SQL&gt; select * from emp where length(ename)=5;</strong></p><p><strong>问题：显示所有员工姓名的前三个字符。SQL&gt; select substr(ename, 1, 3) from emp;</strong></p><p><strong>问题：以首字母大写,后面小写的方式显示所有员工的姓名。</strong></p><p><strong>SQL&gt; select upper(substr(ename,1,1)) || lower(substr(ename,2,length(ename)-1)) from emp;</strong></p><p><strong>问题：以首字母小写,后面大写的方式显示所有员工的姓名。</strong></p><p><strong>SQL&gt; select lower(substr(ename,1,1)) || upper(substr(ename,2,length(ename)-1)) from emp;</strong></p><p><strong>问题：显示所有员工的姓名，用“我是老虎”替换所有“A”</strong></p><p><strong>SQL&gt; select replace(ename,’A’, ‘我是老虎’) from emp;</strong></p><p><strong>问题：instr(char1,char2,[,n[,m]])用法</strong></p><p><strong>SQL&gt; select instr(‘azhangsanbcd’, ‘zhangsan’) from dual; –返回2</strong></p><p><strong>SQL&gt; select instr(‘oracle traning’, ‘ra’, 1, 1) instring from dual; –返回2SQL&gt; select instr(‘oracle traning’, ‘ra’, 1, 2) instring from dual; –返回9</strong></p><p><strong>SQL&gt; select instr(‘oracle traning’, ‘ra’, 1, 3) instring from dual; –返回0，根据条件，由于ra只出现二次，第四个参数3，就是说第3次出现ra的位置，显然第3次是没有再出现了，所以结果返回0。注意空格也算一个字符</strong></p><p><strong>SQL&gt; select instr(‘abc’,’d’) from dual;  –返回0</strong></p></blockquote><h2 id="数字四舍五入函数"><a href="#数字四舍五入函数" class="headerlink" title="数字四舍五入函数"></a>数字四舍五入函数</h2><p><strong>数学函数的输入参数和返回值的数据类型都是数字类型的。数学函数包括cos，cosh，exp，ln, log，sin，sinh，sqrt，tan，tanh，acos，asin，atan，round等我们讲最常用的：</strong><br><strong>round(n,[m]) 该函数用于执行四舍五入，如果省掉m，则四舍五入到整数。</strong></p><p><strong>如果m是正数，则四舍五入到小数点的m位后。如果m是负数，则四舍五入到小数点的m位前。</strong></p><p><strong>Eg:</strong><br><strong>SELECT round(23.75123) FROM dual; –返回24</strong></p><p><strong>SELECT round(23.75123, -1) FROM dual; –返回20</strong></p><p><strong>SELECT round(27.75123, -1) FROM dual; –返回30</strong></p><p><strong>SELECT round(23.75123, -3) FROM dual; –返回0</strong></p><p><strong>SELECT round(23.75123, 1) FROM dual; –返回23.8</strong></p><p><strong>SELECT round(23.75123, 2) FROM dual; –返回23.75</strong></p><p><strong>SELECT round(23.75123, 3) FROM dual; –返回23.751</strong></p><h2 id="数字截取函数"><a href="#数字截取函数" class="headerlink" title="数字截取函数"></a>数字截取函数</h2><p><strong>trunc(n,[m]) 该函数用于截取数字。</strong></p><p><strong>如果省掉m，就截去小数部分，</strong></p><p><strong>如果m是正数就截取到小数点的m位后，如果m是负数，则截取到小数点的前m位。</strong></p><p><strong>Eg：SELECT trunc(23.75123) FROM dual; –返回23</strong></p><p><strong>SELECT trunc(23.75123, -1) FROM dual; –返回20</strong></p><p><strong>SELECT trunc(27.75123, -1) FROM dual; –返回20SELECT trunc(23.75123, -3) FROM dual; –返回0</strong></p><p><strong>SELECT trunc(23.75123, 1) FROM dual; –返回23.7</strong></p><p><strong>SELECT trunc(23.75123, 2) FROM dual; –返回23.75</strong></p><p><strong>SELECT trunc(23.75123, 3) FROM dual; –返回23.751</strong></p><h2 id="数字函数"><a href="#数字函数" class="headerlink" title="数字函数"></a>数字函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mod(m,n)取余函数(取模)</span><br><span class="line">eg、<span class="keyword">select</span> <span class="keyword">mod</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">from</span> dual; <span class="comment">--返回0</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MOD</span>(<span class="number">10</span>,<span class="number">3</span>) <span class="keyword">FROM</span> dual; <span class="comment">--返回1</span></span><br><span class="line"></span><br><span class="line">floor(n) 返回小于或是等于n的最大整数</span><br><span class="line"></span><br><span class="line">ceil(n) 返回大于或是等于n的最小整数</span><br><span class="line">eg、<span class="keyword">SELECT</span> <span class="keyword">ceil</span>(<span class="number">24.56</span>) <span class="keyword">from</span> dual; <span class="comment">--返回25SELECT floor(24.56) from dual; --返回24</span></span><br><span class="line"></span><br><span class="line">abs(n) 返回数字n的绝对值</span><br><span class="line">对数字的处理，在财务系统或银行系统中用的最多，不同的处理方法，对财务报表有不同的结果</span><br></pre></td></tr></table></figure><h2 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">日期函数用于处理date类型的数据。默认情况下日期格式是dd-mon-yy 即“06-8 月-14”</span><br><span class="line">(1)sysdate 返回系统时间</span><br><span class="line">eg:SQL&gt; select sysdate from dual;</span><br><span class="line"></span><br><span class="line">(2)oracle add_months函数</span><br><span class="line">oracle add_months(time,months)</span><br><span class="line">可以得到某一时间之前或之后n个月的时间</span><br><span class="line">eg：<span class="keyword">select</span> add_months(<span class="keyword">sysdate</span>,<span class="number">-6</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--该查询的结果是当前时间半年前的时间</span></span><br><span class="line"><span class="keyword">select</span> add_months(<span class="keyword">sysdate</span>,<span class="number">6</span>) <span class="keyword">from</span> dual;</span><br><span class="line"> <span class="comment">--该查询的结果是当前时间半年后的时间</span></span><br><span class="line"> (3) last_day(d) ：返回指定日期所在月份的最后一天</span><br><span class="line"> 问题：查找已经入职8个月多的员工</span><br><span class="line"> SQL&gt; select * from emp where sysdate&gt;=add_months(hiredate,8);问题：显示满10年服务年限的员工的姓名和受雇日期。</span><br><span class="line"> SQL&gt; select ename, hiredate from emp where sysdate&gt;=add_months(hiredate,12*10);</span><br><span class="line"> 问题：对于每个员工，显示其加入公司的天数。</span><br><span class="line"> SQL&gt; select floor(sysdate-hiredate) "入职天数",ename from emp;</span><br><span class="line"> 或者</span><br><span class="line"> SQL&gt; select trunc(sysdate-hiredate) "入职天数",ename from emp;问题：找出各月倒数第3天受雇的所有员工。</span><br><span class="line"> SQL&gt; select hiredate,ename from emp where last_day(hiredate)-2=hiredate;</span><br></pre></td></tr></table></figure><h2 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h2><blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; 转换函数用于将数据类型从一种转为另外一种。在某些情况下，oracle server允许值的数据类型和实际的不一样，这时oracle server会隐含的转化数据类型</span><br><span class="line">&gt; 比如：</span><br><span class="line">&gt; create table t1(id number);</span><br><span class="line">&gt; insert into t1 values('10');--这样oracle会自动的将'10' --&gt;10</span><br><span class="line">&gt; create table t2 (id varchar2(10));</span><br><span class="line">&gt; insert into t2 values(1); --这样oracle就会自动的将1 --&gt;'1'；</span><br><span class="line">&gt; 我们要说的是尽管oracle可以进行隐含的数据类型的转换，但是它并不适应所有的情况，为了提高程序的可靠性，我们应该使用转换函数进行转换。</span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">to_char()函数</span><br><span class="line">你可以使用<span class="keyword">select</span> ename, hiredate, sal <span class="keyword">from</span> emp <span class="keyword">where</span> deptno = <span class="number">10</span>;显示信息，可是，在某些情况下，这个并不能满足你的需求。</span><br><span class="line">问题：日期是否可以显示 时/分/秒</span><br><span class="line">SQL&gt; select ename, to_char(hiredate, 'yyyy-mm-dd hh24:mi:ss') from emp;</span><br><span class="line">问题：薪水是否可以显示指定的货币符号</span><br><span class="line">SQL&gt;</span><br><span class="line">yy：两位数字的年份 2004<span class="comment">--&gt;04yyyy：四位数字的年份 2004年</span></span><br><span class="line">mm：两位数字的月份 8 月<span class="comment">--&gt;08dd：两位数字的天 30 号--&gt;30</span></span><br><span class="line">hh24： 8点<span class="comment">--&gt;20hh12：8点--&gt;08</span></span><br><span class="line">mi、ss<span class="comment">--&gt;显示分钟\秒9：显示数字，并忽略前面0</span></span><br><span class="line">0：显示数字，位数不足则用0补齐.：在指定位置显示小数点</span><br><span class="line">,：在指定位置显示逗号$：在数字前加美元</span><br><span class="line">L：在数字前面加本地货币符号C：在数字前面加国际货币符号G：在指定位置显示组分隔符、D：在指定位置显示小数点符号(.)</span><br><span class="line">问题：显示薪水的时候，把本地货币单位加在前面</span><br><span class="line">SQL&gt; select ename, to_char(hiredate, ‘yyyy-mm-dd hh24:mi:ss’), to_char(sal,‘￥99999.99') from emp;</span><br><span class="line">问题：显示1980年入职的所有员工</span><br><span class="line">SQL&gt; select * from emp where to_char(hiredate, 'yyyy')=1980;</span><br><span class="line">问题：显示所有12月份入职的员工</span><br><span class="line">SQL&gt; select * from emp where to_char(hiredate, 'mm')=12;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">to_date()函数</span><br><span class="line">函数to_date用于将字符串转换成date类型的数据。问题：能否按照中国人习惯的方式年—月—日添加日期。</span><br><span class="line">eg、<span class="keyword">SELECT</span> <span class="keyword">to_date</span>(<span class="string">'2012-02-18 09:25:30'</span>,<span class="string">'yyyy-mm-dd hh24:mi:ss'</span>) <span class="keyword">FROM</span> dual;</span><br><span class="line">Year:      yy two digits 两位年                显示值:07</span><br><span class="line">yyy three digits 三位年            显示值:007</span><br><span class="line">yyyy four digits 四位年            显示值:2007</span><br><span class="line">Month:  mm    number     两位月              显示值:11</span><br><span class="line">mon    abbreviated 字符集表示          显示值:11月,若是英文版,显示nov     </span><br><span class="line">month spelled out 字符集表示          显示值:11月,若是英文版,显示november </span><br><span class="line">Day:        dd    number         当月第几天        显示值:02</span><br><span class="line">ddd    number         当年第几天        显示值:02</span><br><span class="line">dy    abbreviated 当周第几天简写    显示值:星期五,若是英文版,显示fri</span><br><span class="line">day    spelled out   当周第几天全写    显示值:星期五,若是英文版,显示friday            </span><br><span class="line">Hour:      hh    two digits 12小时进制            显示值:01</span><br><span class="line">hh24 two digits 24小时进制            显示值:13    </span><br><span class="line">Minute:  mi    two digits 60进制                显示值:45</span><br><span class="line">Second:  ss    two digits 60进制                显示值:25</span><br><span class="line">其它:       Q     digit         季度                  显示值:4</span><br><span class="line">WW    digit         当年第几周            显示值:44</span><br><span class="line">W    digit          当月第几周            显示值:1</span><br><span class="line">24小时格式下时间范围为： 0:00:00 - 23:59:59....      </span><br><span class="line">s12小时格式下时间范围为： 1:00:00 - 12:59:59 ....</span><br></pre></td></tr></table></figure><h2 id="sys-context-系统函数"><a href="#sys-context-系统函数" class="headerlink" title="sys_context()系统函数"></a>sys_context()系统函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">主要参数：</span><br><span class="line">1)terminal：当前会话客户所对应的终端的标示符，如计算机名</span><br><span class="line">2)language: 语言</span><br><span class="line">3)db_name： 当前数据库名称</span><br><span class="line">4)nls_date_format： 当前会话客户所对应的日期格式</span><br><span class="line">5)session_user： 当前会话客户所对应的数据库用户名</span><br><span class="line">6)current_schema： 当前会话客户所对应的默认方案名</span><br><span class="line">7)host： 返回数据库所在主机的名称</span><br><span class="line"></span><br><span class="line">通过sys_context函数，可以查询一些重要信息，比如你正在使用哪个数据库：</span><br><span class="line"><span class="keyword">select</span> sys_context(<span class="string">'USERENV'</span>,<span class="string">'db_name'</span>) <span class="keyword">from</span> dual;</span><br><span class="line">注意：USERENV是固定的，不能改的，db_name可以换成其它,</span><br><span class="line">eg、<span class="keyword">select</span> sys_context(<span class="string">'USERENV'</span>,<span class="string">'language'</span>) <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">select</span> sys_context(<span class="string">'USERENV'</span>,‘host<span class="string">') from dual;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Oracle常用函数&quot;&gt;&lt;a href=&quot;#Oracle常用函数&quot; class=&quot;headerlink&quot; title=&quot;Oracle常用函数&quot;&gt;&lt;/a&gt;Oracle常用函数&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;字符函数&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;数字函数&lt;
      
    
    </summary>
    
      <category term="Oracle学习" scheme="https://133608520.github.io/categories/Oracle%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Oracle学习" scheme="https://133608520.github.io/tags/Oracle%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库-1</title>
    <link href="https://133608520.github.io/2019/07/22/6/"/>
    <id>https://133608520.github.io/2019/07/22/6/</id>
    <published>2019-07-22T10:29:55.000Z</published>
    <updated>2019-07-23T03:47:21.755Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://charles-pc:1158/em" target="_blank" rel="noopener">http://charles-pc:1158/em</a>        –企业管理控制台<br><a href="http://charles-pc:5560/isqlplus" target="_blank" rel="noopener">http://charles-pc:5560/isqlplus</a>        –网页命令行工具<br><a href="http://charles-pc:5560/isqlplus/dba" target="_blank" rel="noopener">http://charles-pc:5560/isqlplus/dba</a>    –网页命令行工具（DBA专用）</p><p><strong>系统服务：</strong></p><blockquote><p>OracleDBConsoleorcl：企业管理控制台<br>OracleOraDb10g_home1iSQL*Plus：网页命令行<br>OracleOraDb11g_home1TNSListener：远程监听<br>OracleServiceORCL：数据库实例</p></blockquote><p>以上4个服务可以设置为手动启动，以免影响开机速度，<br>==前两个都是辅助，后两个必须启动==</p><hr><h1 id="SQL：操作数据库"><a href="#SQL：操作数据库" class="headerlink" title="SQL：操作数据库"></a>SQL：操作数据库</h1><h2 id="用户登录："><a href="#用户登录：" class="headerlink" title="用户登录："></a>用户登录：</h2><p><strong>1.网页iSQL<em>plus<br>2.SQL</em>Plus（白框）</strong><br><strong>3.cmd sqlplus /nolog (黑框)</strong></p><p><strong>SYS:超级管理员</strong><br><strong>SYSTEM:普通管理员</strong></p><p><strong>使用数据库时应该使用普通用户</strong><br><strong>通常管理员账号都是用来做管理</strong></p><p><strong>命令行（黑框）：</strong><br><strong>conn 用户名/密码 ;</strong>    </p><p><strong>创建用户张三，密码为abc</strong><br><strong>create user zhangsan identified by abc;</strong></p><p><strong>授权“创建会话”给张三</strong><br><strong>grant     create session   to zhangsan;</strong></p><p><strong>create session是一个权限，用于登录</strong></p><h2 id="权限体系："><a href="#权限体系：" class="headerlink" title="权限体系："></a>权限体系：</h2><p><strong>用户 - 角色 - 权限</strong></p><p><strong>用户：用户名密码组合，用于识别身份</strong><br><strong>角色：一个职位，可以拥有很多权限</strong><br><strong>权限：功能，具体能做的事情</strong></p><p><strong>DEMO：</strong><br><strong>create role java;                –创建角色名为java</strong><br><strong>grant connect,resource to java;            –为java角色授权</strong><br><strong>grant java to zhangsan;                –把java角色授权给张三</strong><br><strong>revoke java from zhangsan;            –撤销授权</strong></p><hr><h3 id="—-超级管理员登录-—"><a href="#—-超级管理员登录-—" class="headerlink" title="— 超级管理员登录 —"></a><strong>— 超级管理员登录 —</strong></h3><p><strong>方式1：</strong><br><strong>sqlplus / as sysdba</strong></p><p><strong>方式2：</strong><br><strong>sqlplus /nolog</strong><br><strong>conn / as sysdba</strong></p><p><strong>方式3：</strong><br><strong>sqlplus</strong><br><strong>sys as sysdba</strong><br><strong>mima</strong></p><h3 id="修改用户密码："><a href="#修改用户密码：" class="headerlink" title="修改用户密码："></a>修改用户密码：</h3><p><strong>alter user 用户名 identified by 新密码;</strong></p><p><strong>锁定用户：</strong><br><strong>alter user 用户名 account lock;</strong></p><p><strong>用户解锁：</strong><br><strong>alter user 用户名 account unlock;</strong></p><p><strong>删除用户：</strong><br><strong>drop user 用户名;</strong></p><h1 id="Oracle卸载"><a href="#Oracle卸载" class="headerlink" title="Oracle卸载"></a>Oracle卸载</h1><p> <strong>直接注册表清除，步骤如下：</strong></p><p><strong>1、 开始－&gt;设置－&gt;控制面板－&gt;管理工具－&gt;服务</strong><br> <strong>停止所有Oracle服务。</strong></p><p><strong>2、 开始－&gt;程序－&gt;Oracle - OraHome81－&gt;Oracle Installation Products－&gt;</strong><br> <strong>Universal Installer</strong><br> <strong>卸装所有Oracle产品，但Universal Installer本身不能被删除</strong></p><p><strong>5、 运行regedit，选择HKEY_LOCAL_MACHINE\SOFTWARE\ORACLE，按del键删除这个入口。</strong></p><p><strong>6、 运行regedit，选择HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services，滚动</strong><br> <strong>这个列表，删除所有Oracle入口。</strong></p><p><strong>7、 运行refedit，</strong><br> <strong>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\Application，</strong><br> <strong>删除所有Oracle入口。</strong></p><p><strong>8、 开始－&gt;设置－&gt;控制面板－&gt;系统－&gt;高级－&gt;环境变量</strong><br> <strong>删除环境变量CLASSPATH和PATH中有关Oracle的设定</strong></p><p><strong>9、 从桌面上、STARTUP（启动）组、程序菜单中，删除所有有关Oracle的组和图标</strong></p><p><strong>10、 删除\Program Files\Oracle目录</strong></p><p><strong>11、 重新启动计算机，重起后才能完全删除Oracle所在目录</strong></p><p><strong>12、 删除与Oracle有关的文件，选择Oracle所在的缺省目录C:\Oracle，删除这个入</strong><br> <strong>口目录及所有子目录，并从Windows 2000目录（一般为C:\WINNT）下删除以下文</strong><br> <strong>件ORACLE.INI、oradim73.INI、oradim80.INI、oraodbc.ini等等。</strong></p><p><strong>13、 WIN.INI文件中若有[ORACLE]的标记段，删除该段</strong></p><p><strong>14、 如有必要，删除所有Oracle相关的ODBC的DSN</strong></p><p><strong>15、 到事件查看器中，删除Oracle相关的日志</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://charles-pc:1158/em&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://charles-pc:1158/em&lt;/a&gt;        –企业管理控制台&lt;br&gt;&lt;a href=&quot;http://charl
      
    
    </summary>
    
      <category term="Oracle学习" scheme="https://133608520.github.io/categories/Oracle%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Oracle学习" scheme="https://133608520.github.io/tags/Oracle%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库-2</title>
    <link href="https://133608520.github.io/2019/07/22/5/"/>
    <id>https://133608520.github.io/2019/07/22/5/</id>
    <published>2019-07-22T09:52:20.000Z</published>
    <updated>2019-07-22T10:48:20.745Z</updated>
    
    <content type="html"><![CDATA[<p><a name="Oracle数据库介绍">Oracle数据库介绍</a><br><a name="Oracle数据库中常用的数据类型">Oracle数据库中常用的数据类型</a><br><a name="SQL中常用的命令分类及其使用">SQL中常用的命令分类及其使用</a> </p><h1 id="Oracle数据库"><a href="#Oracle数据库" class="headerlink" title="Oracle数据库"></a><a href="Oracle数据库介绍">Oracle数据库</a></h1><blockquote><p><strong>ORACLE 是以高级结构化查询语言(SQL)为基础的大型关系数据库，通俗地 讲它是用方便逻辑管理的语言去操纵大量有规律数据的集合。是目前最流行的客户端/服务器(CLIENT/SERVER)体系结构的数据库之一。</strong></p></blockquote><h1 id="Oracle数据库中常用的数据类型"><a href="#Oracle数据库中常用的数据类型" class="headerlink" title="Oracle数据库中常用的数据类型 "></a><a href="Oracle数据库中常用的数据类型 ">Oracle数据库中常用的数据类型 </a></h1><table><thead><tr><th align="center">分类</th><th>数据类型</th><th>说明</th></tr></thead><tbody><tr><td align="center">文本、二进制类型</td><td>CHAR(size) char(20)</td><td>定长 最大2000字符</td></tr><tr><td align="center">文本、二进制类型</td><td>VARCHAR(size)  varchar(20)  ==Varchar2(size)==</td><td>变长 最大4000字符</td></tr><tr><td align="center">文本、二进制类型</td><td>nchar(n)</td><td>Unicode数据类型 ,定长 最大2000字符</td></tr><tr><td align="center">文本、二进制类型</td><td>nvarchar2(n)</td><td>Unicode数据类型 ,变长 最大4000字符</td></tr><tr><td align="center">文本、二进制类型</td><td>clob(character large object)</td><td>字符型大对象 ,最大8tb</td></tr><tr><td align="center">文本、二进制类型</td><td>blob(binary large object)</td><td>二进制数据  可以存放图片/声音 8tb</td></tr><tr><td align="center">数值类型</td><td>number(p,s)</td><td>p为整数位,s为小数位.范围： 1 &lt;= p &lt;=38, -84 &lt;= s &lt;= 127 保存数据范围：-1.0e-130 &lt;= number value &lt; 1.0e+126    保存在机器内部的范围： 1 ~ 22 bytes</td></tr><tr><td align="center">时间日期</td><td>date  TIMESTAMP(n)</td><td>包含年月日,时分秒。默认格式：DD-MON-YYYY。从公元前4712年1月1日到公元4712年12月31日的所有合法日期 n的取值为0~9.表示指定TIMESTAMP中秒的小数位数。N为可选。如果n为0，timestamp与date等价[不推荐]</td></tr></tbody></table><h1 id="SQL中常用的命令分类及其使用"><a href="#SQL中常用的命令分类及其使用" class="headerlink" title="SQL中常用的命令分类及其使用"></a><a href="SQL中常用的命令分类及其使用">SQL中常用的命令分类及其使用</a></h1><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line">(</span><br><span class="line">field1  datatype,</span><br><span class="line">field2  datatype,</span><br><span class="line">field3  datatype</span><br><span class="line">)</span><br><span class="line"><span class="keyword">field</span>：指定列名　datatype：指定列类型</span><br></pre></td></tr></table></figure><h2 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h2><p><strong>使用 ALTER TABLE 语句添加, 修改, 或删除列的语法.</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tablename</span><br><span class="line"><span class="keyword">ADD</span>   (columnname datatype);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">MODIFY</span>   (columnname datatype);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">table</span></span><br><span class="line"><span class="keyword">DROP</span><span class="keyword">column</span> <span class="keyword">column</span>;</span><br><span class="line"></span><br><span class="line">修改表的名称：<span class="keyword">rename</span>  表名 <span class="keyword">to</span> 新表名</span><br></pre></td></tr></table></figure><h2 id="表中数据的管理"><a href="#表中数据的管理" class="headerlink" title="表中数据的管理"></a>表中数据的管理</h2><ul><li><strong>Insert语句        (增加数据)</strong></li><li><strong>Update语句      (更新数据)</strong></li><li><strong>Delete语句       (删除数据)</strong></li><li><strong>Select语句　    (查找数据)</strong></li></ul><h3 id="增加数据-Insert"><a href="#增加数据-Insert" class="headerlink" title="增加数据- Insert"></a>增加数据- Insert</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span><span class="keyword">table</span> [(<span class="keyword">column</span> [, column...])]</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="keyword">value</span> [, value...]);</span><br></pre></td></tr></table></figure><ol><li><strong>插入的数据应与字段的数据类型相同。</strong></li><li><strong>数据的大小应在列的规定范围内，例如：不能将一个长度为80的字符串加入到长度为40的列中。</strong></li><li><strong>在values中列出的数据位置必须与被加入的列的排列位置相对应。</strong><br><strong>字符和日期型数据应包含在==单引号==中。</strong></li><li><strong>插入空值，不指定或insert into table value(null)</strong></li></ol><p>例如：</p><blockquote><p><strong>新建学生：</strong><br><strong>Insert into student(id,name,salary,birthday)</strong><br><strong>values (1001,’盖伦’,’6500’,null);</strong></p></blockquote><h3 id="基本查询"><a href="#基本查询" class="headerlink" title="基本查询"></a>基本查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [<span class="keyword">DISTINCT</span>] *|&#123;column1, column2. column3..&#125;<span class="keyword">FROM</span></span><br></pre></td></tr></table></figure><ol><li><strong>Select 指定查询哪些列的数据。</strong></li><li><strong>column指定列名，*号代表查询所有列。</strong></li><li><strong>From指定查询哪张表。</strong></li><li><strong>DISTINCT可选，指显示结果时，是否剔除重复数据</strong></li></ol><h3 id="修改数据-Update"><a href="#修改数据-Update" class="headerlink" title="修改数据- Update"></a>修改数据- Update</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> tbl_name    </span><br><span class="line"><span class="keyword">SET</span> col_name1=expr1 [, col_name2=expr2 ...]    </span><br><span class="line">[<span class="keyword">WHERE</span> where_definition]</span><br></pre></td></tr></table></figure><ol><li><strong>UPDATE语法可以用新值更新原有表行中的各列。</strong></li><li><strong>SET子句指示要修改哪些列和要给予哪些值。</strong></li><li><strong>WHERE子句指定应更新哪些行。如没有WHERE子句，则更新所有的行</strong></li></ol><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名;  </span><br><span class="line">删除所有记录,表结构还在,写日志,可以恢复的,速度慢</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> xh=<span class="string">'A001'</span>;  删除一条记录</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名;  </span><br><span class="line">删除表的结构和数据</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名; //不常用</span><br><span class="line">删除表中的所有记录,表结构还在,不写日志,无法找回删除的记录,速度快</span><br></pre></td></tr></table></figure><h1 id="SQL中常用的命令分类及其使用-1"><a href="#SQL中常用的命令分类及其使用-1" class="headerlink" title="SQL中常用的命令分类及其使用"></a><a href="SQL中常用的命令分类及其使用">SQL中常用的命令分类及其使用</a></h1><h2 id="DDL-（Data-Definition-Language-）数据库定义语言"><a href="#DDL-（Data-Definition-Language-）数据库定义语言" class="headerlink" title="DDL （Data Definition Language ）数据库定义语言 :"></a>DDL （Data Definition Language ）数据库定义语言 :</h2><p><strong>statements are used to define the database structure or schema，DDL不需要commit.</strong> </p><p><strong>CREATE   ：创建</strong></p><p><strong>ALTER    ：修改</strong></p><p><strong>DROP     ：删除</strong></p><p><strong>TRUNCATE ：截断</strong></p><p><strong>COMMENT ：注释</strong></p><p><strong>RENAME ：重命名</strong></p><h2 id="DML-（Data-Manipulation-Language）数据操纵语言"><a href="#DML-（Data-Manipulation-Language）数据操纵语言" class="headerlink" title="DML （Data Manipulation Language）数据操纵语言:"></a>DML （Data Manipulation Language）数据操纵语言:</h2><p>statements are used for managing data within schema objects，DML需要commit. </p><p><strong>SELECT ：查询记录</strong></p><p><strong>INSERT ：插入记录</strong></p><p><strong>UPDATE ：更新记录</strong></p><p><strong>DELETE ：删除记录</strong></p><p><strong>MERGE ：CALL ：调用</strong></p><p><strong>EXPLAIN PLAN：执行计划</strong> </p><p><strong>LOCK TABLE ：锁表</strong></p><h2 id="DCL（Data-Control-Language）数据库控制语言"><a href="#DCL（Data-Control-Language）数据库控制语言" class="headerlink" title="DCL（Data Control Language）数据库控制语言:"></a>DCL（Data Control Language）数据库控制语言:</h2><p><strong>授权，角色控制等</strong></p><p>*<em>GRANT：授权 *</em></p><p><strong>REVOKE：取消授权</strong></p><h2 id="TCL（Transaction-Control-Language）事务控制语言"><a href="#TCL（Transaction-Control-Language）事务控制语言" class="headerlink" title="TCL（Transaction Control Language）事务控制语言 "></a>TCL（Transaction Control Language）事务控制语言 </h2><p><strong>事务是一个不可分割的工作逻辑单元，可以使用事务来保证数据库的一致性和可恢复性，事务中的sql语句，==成功都成功，失败都失败。==</strong></p><p><strong>事务的ACID特性（4个英文首字母缩写）</strong><br><strong>原子性</strong><br><strong>一致性</strong><br><strong>隔离性</strong><br><strong>持久性</strong></p><p><strong>COMMIT命令用于提交并结束事务处理，对数据库执行永久性的事务更改</strong><br><strong>SAVEPOINT保存点类似于标记，它将很长的事务处理划分为较小的部分。</strong><br><strong>ROLLBACK命令用来撤销在当前事务中已完成的操作</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a name=&quot;Oracle数据库介绍&quot;&gt;Oracle数据库介绍&lt;/a&gt;&lt;br&gt;&lt;a name=&quot;Oracle数据库中常用的数据类型&quot;&gt;Oracle数据库中常用的数据类型&lt;/a&gt;&lt;br&gt;&lt;a name=&quot;SQL中常用的命令分类及其使用&quot;&gt;SQL中常用的命令分类及其使用&lt;/
      
    
    </summary>
    
      <category term="Oracle学习" scheme="https://133608520.github.io/categories/Oracle%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Oracle学习" scheme="https://133608520.github.io/tags/Oracle%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>网络编程和线程</title>
    <link href="https://133608520.github.io/2019/07/20/4/"/>
    <id>https://133608520.github.io/2019/07/20/4/</id>
    <published>2019-07-20T03:29:49.000Z</published>
    <updated>2019-07-20T04:12:21.312Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1><p><strong>网络协议</strong><br><strong>TCP/IP</strong><br><strong>UDP</strong><br><strong>网络编程</strong><br><strong>Socket/ServerSocket</strong><br><strong>DatagramSocket</strong></p><h2 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h2><p><strong>TCP协议是一个面向连接的、可靠的协议</strong><br>TCP(transmission control protocol)<br>是专门设计用于在不可靠的因特网上提供可靠的、端到端的字节流通信的协议。它是一种面向连接的协议。TCP连接是字节流而非报文流。<br><strong>UDP协议是一个不可靠的、无连接协议</strong><br>UDP(user datagram protocol )<br>UDP向应用程序提供了一种发送封装的原始IP数据报的方法、并且发送时无需建立连接。是一种不可靠的连接。</p><h2 id="TCP编程"><a href="#TCP编程" class="headerlink" title="TCP编程"></a>TCP编程</h2><p><strong>TCP编程</strong><br>java.net.Socket<br>java.net.ServerSocket<br> <strong>TCP编程的核心思路</strong></p><p>开发服务器端<br>ServerSocket ss = new ServerSocket(9000)<br>ss.accept();<br>开发客户端<br>Socket s = new Socket(“150.236.56.101”, 9000)</p><p><strong>TCP编程</strong></p><table><thead><tr><th align="center">Server</th><th align="center">Client</th></tr></thead><tbody><tr><td align="center">ServerSocket(port)</td><td align="center">Socket(server,port)</td></tr><tr><td align="center">ServerSocket.accept();</td><td align="center">OutputStream</td></tr><tr><td align="center">Socket()</td><td align="center">InputStream</td></tr><tr><td align="center">OutputStream</td><td align="center"></td></tr><tr><td align="center">InputStream</td><td align="center"></td></tr><tr><td align="center">Socket.close()</td><td align="center">Socket.close()</td></tr></tbody></table><p><strong>总结</strong><br><strong>服务器端</strong>：<br>创建ServerSocket对象（并绑定端口）<br>调用accept方法，等待来自客户端的连接<br>调用getXXXStream方法，进行I/O<br>关闭Socket<br><strong>客户端</strong>：<br>创建Socket对象，并连接服务器<br>调用getXXXStream方法，进行I/O<br>关闭Socket</p><h2 id="UDP编程"><a href="#UDP编程" class="headerlink" title="UDP编程"></a>UDP编程</h2><h3 id="UDP协议简介"><a href="#UDP协议简介" class="headerlink" title="UDP协议简介"></a>UDP协议简介</h3><p>UDP是一个无连接，不可靠的协议。即：数据的发送方只负责将数据发送出去，数据的接受方只负责接受数据。发送方和接收方不会相互确认数据的传输是否成功。</p><h3 id="UDP编程-1"><a href="#UDP编程-1" class="headerlink" title="UDP编程"></a><strong>UDP编程</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java.net.DatagramSocket</span><br><span class="line">java.net. DatagramPacket</span><br></pre></td></tr></table></figure><h3 id="UDP编程的核心思路"><a href="#UDP编程的核心思路" class="headerlink" title="UDP编程的核心思路"></a>UDP编程的核心思路</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DatagramSocket socket = <span class="keyword">new</span> DatagramSocket(<span class="number">9000</span>) <span class="comment">//接收端</span></span><br><span class="line">DatagramSocket socket = <span class="keyword">new</span> DatagramSocket() <span class="comment">//发送端</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DatagramPacket</span><br><span class="line">DatagramPacket(<span class="keyword">byte</span>[] buf, <span class="keyword">int</span> off, <span class="keyword">int</span> length)</span><br><span class="line">DatagramPacket(<span class="keyword">byte</span>[] buf, <span class="keyword">int</span> ,length, SoketAddress)</span><br><span class="line">getAddress()/getSockAddress()/getPort()/getLength()</span><br><span class="line">setAddress()/setSockAddress()/setPort()/setLength()</span><br></pre></td></tr></table></figure><h1 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h1><p><strong>什么是线程</strong><br><strong>在一个程序中同时运行的多个独立流程，每一个独立的流程就是一个线程</strong><br><strong>线程并发</strong><br><strong>多个线程并发执行</strong><br><strong>主线程</strong><br><strong>当JVM启动之后，加载类文件，发现main方法，那么就会为main方法创建一个线程，用于main方法执行，这个为main方法创建的线程称为主线程</strong></p><h2 id="Java中线程的使用"><a href="#Java中线程的使用" class="headerlink" title="Java中线程的使用"></a>Java中线程的使用</h2><p>在Java中创建线程的方法有两种</p><ul><li>方法一<br>继承java.lang.Thread类</li><li>方法二<br>实现java.lang.Runnable接口</li></ul><h3 id="继承Thread类"><a href="#继承Thread类" class="headerlink" title="继承Thread类"></a>继承Thread类</h3><ol><li>自定义一个线程类继承自Thread</li><li>重写Thread的run方法</li><li>创建一个该类的对象</li><li>调用该类继承自Thread的start方法开启线程</li></ol><h3 id="Runnable接口开发线程"><a href="#Runnable接口开发线程" class="headerlink" title="Runnable接口开发线程"></a>Runnable接口开发线程</h3><ol><li>用户开发一个类实现Runnable接口</li><li>实现run()</li><li>运行线程 </li></ol><h2 id="sleep方法"><a href="#sleep方法" class="headerlink" title="sleep方法"></a>sleep方法</h2><p><strong>void sleep(long time)方法用于使当前线程休眠指定的毫秒数</strong></p><h2 id="join方法"><a href="#join方法" class="headerlink" title="join方法"></a>join方法</h2><ul><li>利用sleep方法对线程的控制是非常不精确的</li><li>join方法可以精确控制线程</li><li>join方法也会导致线程阻塞</li><li>特点：<strong>如果当前线程中调用了另外一个线程的 join方法，当前线程会立即阻塞，直到另外一个线程运行完成</strong></li></ul><h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><p><strong>产生数据不一致的原因</strong><br><strong>多个线程并发访问了同一个对象，如果破坏了不可分割的操作，从而就会造成数据不一致</strong><br><strong>被多线程并发访问时如果一个对象有可能出现数据不一致的问题,那么这个对象称为线程不安全的对象</strong></p><h3 id="如何解决多线程并发访问的问题"><a href="#如何解决多线程并发访问的问题" class="headerlink" title="如何解决多线程并发访问的问题"></a><strong>如何解决多线程并发访问的问题</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">synchronized</span>(object)&#123;</span><br><span class="line">    代码块</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;网络编程&quot;&gt;&lt;a href=&quot;#网络编程&quot; class=&quot;headerlink&quot; title=&quot;网络编程&quot;&gt;&lt;/a&gt;网络编程&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;网络协议&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;TCP/IP&lt;/strong&gt;&lt;
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>文件和I/O流</title>
    <link href="https://133608520.github.io/2019/07/18/3/"/>
    <id>https://133608520.github.io/2019/07/18/3/</id>
    <published>2019-07-18T02:55:10.000Z</published>
    <updated>2019-07-18T06:48:43.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件和I-O流大纲"><a href="#文件和I-O流大纲" class="headerlink" title="文件和I/O流大纲"></a>文件和I/O流大纲</h1><p>[TOC]</p><h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><h2 id="创建File对象"><a href="#创建File对象" class="headerlink" title="创建File对象"></a>创建File对象</h2><h3 id="File类的构造方法"><a href="#File类的构造方法" class="headerlink" title="File类的构造方法"></a>File类的构造方法</h3><blockquote><p><strong>由于File类的每一个对象都表示的是一个具体的目录或者文件，所以File类没有提供无参的构造方法，File类的所有构造方法都需要一个目录或者文件的路径作为参数</strong> </p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* File(String pathname)</span><br><span class="line"></span><br><span class="line">* File(String parent, String child)</span><br><span class="line"></span><br><span class="line">* File(File parent, String child)</span><br></pre></td></tr></table></figure><h3 id="File类常用方法"><a href="#File类常用方法" class="headerlink" title="File类常用方法"></a>File类常用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">File类常用方法  </span><br><span class="line"> <span class="function"><span class="keyword">boolean</span> <span class="title">createNewFile</span><span class="params">()</span>创建一个新文件</span></span><br><span class="line"><span class="function"> <span class="keyword">boolean</span> <span class="title">mkdir</span><span class="params">()</span> / <span class="title">mkdirs</span><span class="params">()</span>创建新的目录</span></span><br><span class="line"><span class="function"> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">()</span> 删除文件或者目录 </span></span><br><span class="line"><span class="function"> <span class="keyword">void</span> <span class="title">deleteOnExit</span><span class="params">()</span> 虚拟机退出时删除文件或者目录</span></span><br><span class="line"><span class="function"> <span class="keyword">boolean</span> <span class="title">exists</span><span class="params">()</span> 判断当前文件或者目录是否存在 </span></span><br><span class="line"><span class="function"> <span class="keyword">boolean</span> <span class="title">isFile</span><span class="params">()</span> 判断File对象代表的是否是一个文件</span></span><br><span class="line"><span class="function"> <span class="keyword">boolean</span> <span class="title">isDirectory</span><span class="params">()</span> 判断File对象代表的是否是一个目录 </span></span><br><span class="line"><span class="function"> String <span class="title">getPath</span><span class="params">()</span> 返回当前File对象的字符串路径</span></span><br><span class="line"><span class="function"> String <span class="title">getName</span><span class="params">()</span>返回当前File对象的文件名或者目录名</span></span><br><span class="line"><span class="function"> String <span class="title">getParent</span><span class="params">()</span>返回当前File对象的父级目录 </span></span><br><span class="line"><span class="function"> String <span class="title">getAbsolutePath</span><span class="params">()</span>返回当前File对象的绝对路径 </span></span><br><span class="line"><span class="function"> String[]<span class="title">list</span><span class="params">()</span>返回当前File对象包含的子目录以及文件</span></span><br></pre></td></tr></table></figure><h1 id="HTML折叠语法"><a href="#HTML折叠语法" class="headerlink" title="HTML折叠语法"></a>HTML折叠语法</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span>点击时的区域标题：点击查看详细内容<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span> - 测试 测试测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>  title，value，callBack可以缺省  <span class="tag">&lt;/<span class="name">code</span>&gt;</span>  <span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>显示效果</strong>  </p><details>  <summary>点击时的区域标题：点击查看详细内容</summary>  <p> - 测试 测试测试</p>  <pre><code>  title，value，callBack可以缺省  </code>  </pre></details><h1 id="流"><a href="#流" class="headerlink" title="流"></a>流</h1><p>==<strong>流在使用的时候一定要关闭，使用多种类型的流时，关闭最外层的流即可</strong>==</p><h2 id="流的分类"><a href="#流的分类" class="headerlink" title="流的分类"></a>流的分类</h2><blockquote><p><strong>按照流传输方向不同</strong><br><strong>输入流（InputStream）</strong><br><strong>输出流（OutputStream）</strong><br><strong>按照处理数据类型的不同</strong><br><strong>字节流</strong><br><strong>字符流</strong><br><strong>按照流的基本功能不同</strong><br><strong>节点流</strong><br><strong>过滤流</strong></p></blockquote><h2 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h2><p>字节流的概念<br>传输的数据单位是字节，也意味着字节流能够处理任何一种文件<br>字节流的组成<br>字节输入流 InputStream<strong>（注意它是接口不能背实例化，使用时候一般结合FileInputStream实例化）</strong><br>字节输出流 OutputStream<strong>（注意它是接口不能背实例化使用时候一般结合FileOutputStream实例化）</strong></p><h3 id="FileInputStream字节输入流类"><a href="#FileInputStream字节输入流类" class="headerlink" title="FileInputStream字节输入流类"></a>FileInputStream字节输入流类</h3><h4 id="FileInputStream常用方法"><a href="#FileInputStream常用方法" class="headerlink" title="FileInputStream常用方法"></a>FileInputStream常用方法</h4><h5 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileInputStream (String filename)</span><br><span class="line">FileInputStream (File file)</span><br></pre></td></tr></table></figure><h5 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">close() </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">byte</span>[]b)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">byte</span>[] bs, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span></span></span><br></pre></td></tr></table></figure><h3 id="FileOutputStream字节输出流类"><a href="#FileOutputStream字节输出流类" class="headerlink" title="FileOutputStream字节输出流类"></a>FileOutputStream字节输出流类</h3><h4 id="FileOutputStream常用方法"><a href="#FileOutputStream常用方法" class="headerlink" title="FileOutputStream常用方法"></a>FileOutputStream常用方法</h4><h5 id="常用构造方法"><a href="#常用构造方法" class="headerlink" title="常用构造方法"></a>常用构造方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FileOutputStream(String path)</span><br><span class="line">FileOutputStream(File file)</span><br><span class="line">FileOutputStream(String path, <span class="keyword">boolean</span> append)</span><br><span class="line">FileOutputStream(File file, <span class="keyword">boolean</span> append)</span><br></pre></td></tr></table></figure><h5 id="常用方法-1"><a href="#常用方法-1" class="headerlink" title="常用方法"></a>常用方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">close()</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] bs)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] bs, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span></span></span><br></pre></td></tr></table></figure><h2 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h2><p><strong>字符编码</strong><br><strong>常见的 编码规范（字符集）</strong><br><strong>ASCII</strong><br><strong>ISO-8859-1</strong><br><strong>GBK</strong><br><strong>UTF-8</strong><br><strong>乱码问题</strong></p><h3 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FileReader(String  fileName)</span><br><span class="line">close()</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span>[] cbuf)</span></span></span><br></pre></td></tr></table></figure><h3 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FileWriter(String fileName)</span><br><span class="line">close()</span><br><span class="line">write(String value)</span><br></pre></td></tr></table></figure><h2 id="InputStreamReader和OutputStreamWriter"><a href="#InputStreamReader和OutputStreamWriter" class="headerlink" title="InputStreamReader和OutputStreamWriter"></a>InputStreamReader和OutputStreamWriter</h2><blockquote><p><strong>特点：<br>可以把一个字节流转换成一个字符流<br> 在转换时可以执行编码方式</strong></p></blockquote><h3 id="InputStreamReader"><a href="#InputStreamReader" class="headerlink" title="InputStreamReader"></a>InputStreamReader</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">InputStreamReader(InputStream  is)</span><br><span class="line">InputStreamReader(InputStream  is ,String charSet)</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">char</span>[] cbuf)</span></span></span><br></pre></td></tr></table></figure><h3 id="OutputStreamWriter"><a href="#OutputStreamWriter" class="headerlink" title="OutputStreamWriter"></a>OutputStreamWriter</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OutputStreamWriter(OutputStream  is) </span><br><span class="line">OutputStreamWriter(nOuputtStream  is, String charSet)</span><br><span class="line">write(String value)</span><br></pre></td></tr></table></figure><h2 id="过滤流"><a href="#过滤流" class="headerlink" title="过滤流"></a>过滤流</h2><ul><li>Data  Stream<ul><li>DataInputStream <ul><li>readXxx();</li></ul></li><li>DataOutputStream<ul><li>writeXxx();  </li></ul></li></ul></li></ul><p>过滤流的开发步骤<br> <a name="1">创建节点流</a><br> <a name="2">基于节点流创建过滤流</a><br> <a name="3">读/写数据</a><br> <a name="4">关闭外层流</a></p><h3 id="创建节点流"><a href="#创建节点流" class="headerlink" title="创建节点流"></a><a href="#1">创建节点流</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileOutputStream fout = <span class="keyword">new</span> FileOutputStream(<span class="string">"pi.data"</span>)</span><br></pre></td></tr></table></figure><h3 id="封装过滤流"><a href="#封装过滤流" class="headerlink" title="封装过滤流"></a><a href="2">封装过滤流</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataOutputStream dout = <span class="keyword">new</span> DataOutputStream(fout)</span><br></pre></td></tr></table></figure><h3 id="写数据"><a href="#写数据" class="headerlink" title="写数据"></a><a href="3">写数据</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dout.writeDouble(<span class="number">3.14</span>);</span><br></pre></td></tr></table></figure><h3 id="关闭外层流"><a href="#关闭外层流" class="headerlink" title="关闭外层流"></a><a href="4">关闭外层流</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dout.close()</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建节点流</span></span><br><span class="line"></span><br><span class="line">FileInputStream fin = <span class="keyword">new</span> FileInputStream(<span class="string">"pi.data"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//封装过滤流</span></span><br><span class="line"></span><br><span class="line">DataInputStream din = <span class="keyword">new</span> DataInputStream（fin);</span><br><span class="line"></span><br><span class="line"><span class="comment">//读数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> pi = din.readDouble();</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭外层流</span></span><br><span class="line"></span><br><span class="line">din.close();</span><br><span class="line"></span><br><span class="line">system.out.println(pi);</span><br></pre></td></tr></table></figure><h3 id="BufferedOutputStream"><a href="#BufferedOutputStream" class="headerlink" title="BufferedOutputStream"></a>BufferedOutputStream</h3><p>和基本字节输出流的区别：带了缓冲区，基本方法都一样</p><h3 id="ObjectStream"><a href="#ObjectStream" class="headerlink" title="ObjectStream"></a>ObjectStream</h3><p>涉及概念：对象序列化（需要类实现Serializable接口,但并不需要实现具体方法）</p><p>操作对象的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ObjectStream</span><br><span class="line">ObjectInputStream  </span><br><span class="line">ObjectOutputStream</span><br><span class="line">ObjectStream特点</span><br><span class="line">  writeObject()</span><br><span class="line">   readObject()</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(Student name,<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Student stu1 = <span class="keyword">new</span> Student(<span class="string">"tom"</span>,<span class="number">18</span>);</span><br><span class="line">Student stu2 = <span class="keyword">new</span> Student(<span class="string">"jerry"</span>,<span class="number">18</span>);</span><br><span class="line">FileOutputStream oout = <span class="keyword">new</span> ObjectOutputStream(fout);</span><br><span class="line">oout.writeObject(stu1);</span><br><span class="line">oout.writeObject(stu2);</span><br><span class="line">oout.close();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FileInputStream fin = <span class="keyword">new</span> FileInputStream(<span class="string">"stu.dat"</span>);</span><br><span class="line">ObjectInputStream oin = <span class="keyword">new</span> ObjectInputStream(fin);</span><br><span class="line">Student s1 = (Student)oin.readObject();</span><br><span class="line">Studetn s2 = (Student)oin.readObject();</span><br><span class="line">oin.close();</span><br><span class="line">system.out.println(s1.name+<span class="string">""</span>+s1.age);</span><br><span class="line">system.out.println(s2.name+<span class="string">""</span>+s2.age);</span><br></pre></td></tr></table></figure><h2 id="transient-关键字"><a href="#transient-关键字" class="headerlink" title="transient 关键字"></a>transient 关键字</h2><p> <strong>序列化时注意事项</strong><br><strong>不要使用追加的方式写对象</strong><br><strong>如果一个对象的属性又是一个对象，则要求这个属性对象也实现了Serializable接口</strong></p><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;文件和I-O流大纲&quot;&gt;&lt;a href=&quot;#文件和I-O流大纲&quot; class=&quot;headerlink&quot; title=&quot;文件和I/O流大纲&quot;&gt;&lt;/a&gt;文件和I/O流大纲&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;文件&quot;&gt;&lt;a href=&quot;#文件&quot; class=
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Java-异常和集合</title>
    <link href="https://133608520.github.io/2019/07/17/2/"/>
    <id>https://133608520.github.io/2019/07/17/2/</id>
    <published>2019-07-17T11:40:48.000Z</published>
    <updated>2019-07-17T11:42:45.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="7月13日异常和集合"><a href="#7月13日异常和集合" class="headerlink" title="7月13日异常和集合"></a>7月13日异常和集合</h1><h1 id="异常"><a href="#异常" class="headerlink" title=" 异常 "></a><font color="red"> 异常 </font></h1><hr><ul><li><strong>常见的几种异常类型 都继承自Exception，产生异常时，后面的语句不再执行（如果没有try，catch的话</strong> ）</li><li><strong>try，catch，finally语句</strong></li><li><strong>在方法中的语句抛出异常throw new Exception（）；</strong></li><li><strong>方法抛出异常，在声明的后面加上 throws **</strong></li><li><strong>可以多个catch，不过按顺序，第一个接受了就不会给第二个了</strong></li><li><strong>finnally无论如何都会执行，就算是catch里面有return也依然会执行</strong></li></ul><h1 id="集合"><a href="#集合" class="headerlink" title=" 集合 "></a><font color="red"> 集合 </font></h1><p><strong>要清楚各种集合之间的关系，collection是List和Set的父类，不过三者都是接口，均不能实例化，List的实现类有ArrayList（常用）和LinkedList两者区别不大，Set实现子类有HashSet（常用）和TreeSet</strong><br><strong>Map接口及其实现类HashMap，Map不能包含重复的键</strong> </p><h2 id="集合种的几种常用方法"><a href="#集合种的几种常用方法" class="headerlink" title="集合种的几种常用方法"></a><font color="red">集合种的几种常用方法</font></h2><p>•<strong>Collaction接口的常用方法：size，isEmpty，contains，add，remove，iterator</strong> </p><p><strong>-list集合和set集合的区别，list集合可以加入重复的数据，set集合不可以，list集合是有顺序的，Hashset是无序的</strong> </p><h2 id="ArrayList常用的方法："><a href="#ArrayList常用的方法：" class="headerlink" title="ArrayList常用的方法："></a><font color="red">ArrayList常用的方法：</font></h2><p><strong>•get（index）返回指定位置的元素，特有<br>•indexOf（object o）返回指定元素的所在位置<br>•注意用remove方法的时候，删除一个后，后一个数移动到该位置上来</strong> </p><h2 id="HashMap常用的方法："><a href="#HashMap常用的方法：" class="headerlink" title="HashMap常用的方法："></a><font color="red">HashMap常用的方法：</font></h2><p><strong>•put（key，valve）<br>•get（key）返回指定键所对应的映射值<br>•remove（key）如果存在一个键的映射关系那么移除<br>•containKey（key）<br>•containValve（valve）<br>•set&lt; Entry&lt;key,value&gt;&gt;entrySet() 将Map变为Set，这样才能使用set的方法，从而使map和collection联系</strong> </p><h2 id="遍历集合或者Map的方法"><a href="#遍历集合或者Map的方法" class="headerlink" title="遍历集合或者Map的方法"></a><font color="red">遍历集合或者Map的方法</font></h2><p><strong>•for（？：？）方法<br>•Iterator<br>-List和Set使用迭代器<br>•Iterator i = list.Iterator();</strong><br><strong>Map要想使用迭代器必须先转换成set（通过entrySet方法）</strong></p><h2 id="遍历的时候主要是用到两个方法"><a href="#遍历的时候主要是用到两个方法" class="headerlink" title="-遍历的时候主要是用到两个方法"></a><font color="red">-遍历的时候主要是用到两个方法</font></h2><p><strong>•hasNext（）<br>•next（）<br>-注意set，list，map，Itterator后面都是跟着范型的</strong> </p><h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a><font color="red">文件</font></h1><p><strong>•java.io.File<br>•– File用于表示硬盘中的一个文件或者文件夹<br>•– File对象是java对象，包含文件的各种属性<br>•– File对象可以代表还不存在的文件或文件夹<br>•– File对象可以调用各种方法例如创建或删除<br>•createNewFile和mkdir和mkdirs方法的区别<br>•file.delete()可以删除文件和空文件夹，但是不能删除包含了一个有文件的文件夹</strong>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;7月13日异常和集合&quot;&gt;&lt;a href=&quot;#7月13日异常和集合&quot; class=&quot;headerlink&quot; title=&quot;7月13日异常和集合&quot;&gt;&lt;/a&gt;7月13日异常和集合&lt;/h1&gt;&lt;h1 id=&quot;异常&quot;&gt;&lt;a href=&quot;#异常&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客——MarkDown学习</title>
    <link href="https://133608520.github.io/2019/07/16/1/"/>
    <id>https://133608520.github.io/2019/07/16/1/</id>
    <published>2019-07-16T05:40:03.000Z</published>
    <updated>2019-07-16T06:07:15.356Z</updated>
    
    <content type="html"><![CDATA[<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><blockquote><p>这里有四种方式                      </p><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>行内式：[链接文字](http:<a href="http://www.hao123.com" target="_blank" rel="noopener">www.hao123.com</a> “链接属性”),（）里面写链接地址和链接属性，两者之间有一个空格，属性要加&quot; “<br>下面做一个实验：<br><a href="http:www.hao123.com" title="百度搜不到·" target="_blank" rel="noopener">链接文字，链接到百度</a><br>好吧，应该是成功了，不过发现了一个问题，在引用里换行时候不需要输入两个空格     </p></blockquote><h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>分为两部分，先把链接文字写成来，给它做个标记，然后在下面在个标记赋值，也许你会问，这只是我的怀疑，我怀疑:代表赋值，语法大体如下：<br>这是[百度] [1]<br>[1]: http:<a href="http://www.hao123.com" target="_blank" rel="noopener">www.hao123.com</a> “百度搜不到”<br>参考式有一个优点就是在文章里有多个链接引用的时候，可以更好的对连接进行统一整理。</p><h2 id="自动连接"><a href="#自动连接" class="headerlink" title="自动连接"></a>自动连接</h2><p>&lt;&gt;，代表自动链接，符号里面写网址，Markdown就会自动把它转换成链接，链接文字和链接地址一样，下面来实验一下自动链接百度<br><a href="http:www.hao123.com" target="_blank" rel="noopener">http:www.hao123.com</a></p><blockquote><h2 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h2><p>链接到文章内部的叫锚点，具体语法如下：<br>语法和html一样。这里不写代码直接演示<br><a name="maodian"> 锚点 </a><br><a href="#maodian">跳转到锚点 </a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>使用   <em>，+，-表示无序列表         *</em>发现了一个问题，在引用中你输入几个空格，它就显示几个空格,还不错**<br>三个符号代表的无序列表显示是一样的，选择一种即可，我选择 *<br>代码如下：</p><blockquote><p>- 无序列表项 一<br>- 无序列表项二<br>- 无序列表项三<br>显示效果如下:</p><ul><li>无序列表项  一</li><li>无序列表项  二</li><li>无序列表项  三</li></ul></blockquote><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>代码如下：</p><blockquote><p>1. 有序列表 一<br>2. 有序列表 二<br>3. 有序列表 三<br>显示效果：</p><ol><li>有序列表项 一 </li><li>有序列表项 二</li><li>有序列表项 三<br>注意.后面有一个空格</li></ol></blockquote><h2 id="包含段落的列表"><a href="#包含段落的列表" class="headerlink" title="包含段落的列表"></a>包含段落的列表</h2><p>下面介绍包含段落列表：<br>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; - 这是第一行</span><br><span class="line">&gt; 第一段</span><br><span class="line">&gt; 第二段</span><br><span class="line">&gt; -这是第二行</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>显示效果如下：  </p><ul><li>这是第一行<br>第一段<br>第二段</li><li>这是第二行<h2 id="包含引用或者代码块的列表"><a href="#包含引用或者代码块的列表" class="headerlink" title="包含引用或者代码块的列表"></a>包含引用或者代码块的列表</h2>代码如下：<br>*    阅读的方法：<blockquote><p>打开书本<br>打开电灯<br>显示效果如下：</p></blockquote></li></ul><ul><li>阅读的方法：<blockquote><p>打开书本<br>打开电灯</p></blockquote></li></ul><p>下面介绍包含代码块的：<br>代码如下：<br>* 包含代码快<br>    &lt;代码写在这里&gt;<br>显示效果如下:</p><ul><li>包含代码块  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 大家好，我是列表下的代码块</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li>让我看看这是哪一行？</li></ul></blockquote><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>首先这就是在一个引用里面写的<br>代码如下：<br>&gt; 这是一个引用<br>显示效果如下：</p><blockquote><p>这是一个引用<br>当然由于本身已经在引用里面了所以这里发生了引用的多层嵌套，根据上面可以看出引用里面也可以使用其他语法，比如列表之类的</p></blockquote></blockquote><h2 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h2><blockquote><p>插图像挺痛疼的，图床建立需要花钱，免费的又不稳定，只能在本地里面一张张的存图片了，哎<br>代码:<br>![图片描述]（图片地址 “图片Title”)<br>显示效果：这里就不做演示了<br>还有一种方法参考式和超链接的参考式一样</p></blockquote><h2 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h2><blockquote><p>在段落中写[]已显示全文内容的目录结构,里面是大写的toc<br>代码:<br>[TOC]</p><p>显示效果：</p><p>[TOC]<br>可以在任意的位置添加</p></blockquote><h2 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h2><blockquote><p>注脚就是课本上对某些文字做注解的地方，一般课本的最后有做过注脚地方的解释。<br>代码：<br>这是一个注脚[^1]<br>[^1]：注脚是一种解释<br>显示效果如下:<br>这是一个注脚[^1]<br>[^1]: 注脚是一种解释<br><strong>脚注自动搬运到最后面，请到文章末尾查看，并且脚注后方的链接可以直接跳转到加注的地方</strong></p></blockquote><h2 id="LaTeX公式"><a href="#LaTeX公式" class="headerlink" title="LaTeX公式"></a>LaTeX公式</h2><blockquote><p>第一次见，初次见面，请多多关照🤭</p><ol><li>$表示行内公式</li><li>$$表示整行公式</li></ol></blockquote><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2><blockquote><p>代码:<br>- [ ] 吃饭,代表没有选中的复选<br>- [x] 吃饭,代表选中的复选<br>显示效果如下:</p><ul><li><input disabled type="checkbox"> 吃饭,代表没有选中的复选</li><li><input checked disabled type="checkbox"> 吃饭,代表选中的复选</li></ul></blockquote><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><blockquote><ol><li>不管哪种方式,第一行为表头,第二行分隔表头和主体部分,第三行开始每一行为一个表格行</li><li>列和列之间使用管道符|隔开</li><li>第二行可以为不同的列指定对齐方式.默认为左对齐,在-右边加上:,该列就会右对齐<br>代码如下:<br>学号|姓名</li></ol><p>-|-|-<br>123|小明<br>显示效果如下:</p><blockquote><table><thead><tr><th>学号</th><th>姓名</th></tr></thead><tbody><tr><td>123</td><td>小明</td></tr></tbody></table></blockquote></blockquote><p>##　代码</p><blockquote><ul><li>行内代码</li><li>多行代码</li><li>缩进式<ul><li>子序列1<ul><li>子子序列</li></ul></li></ul></li></ul><p>下面推出<br><strong>上面又发现了多级列表的嵌套规则,根据*前面的制表符数匹配</strong><br><strong>如何退出无序列表</strong><br><strong>通过添加一个空白行</strong></p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>代码:<br>***<br>显示效果如下:</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;超链接&quot;&gt;&lt;a href=&quot;#超链接&quot; class=&quot;headerlink&quot; title=&quot;超链接&quot;&gt;&lt;/a&gt;超链接&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;这里有四种方式                      &lt;/p&gt;
&lt;h2 id=&quot;行内式&quot;&gt;&lt;a hre
      
    
    </summary>
    
      <category term="MarkDown学习笔记" scheme="https://133608520.github.io/categories/MarkDown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MarkDown学习笔记" scheme="https://133608520.github.io/tags/MarkDown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
