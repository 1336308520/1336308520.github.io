<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>百度搜不到丶的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://133608520.github.io/"/>
  <updated>2019-11-21T01:41:04.640Z</updated>
  <id>https://133608520.github.io/</id>
  
  <author>
    <name>LYH</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模模式_组合模式</title>
    <link href="https://133608520.github.io/2019/11/19/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E6%A8%A1%E5%BC%8F-%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/"/>
    <id>https://133608520.github.io/2019/11/19/设计模模式-组合模式/</id>
    <published>2019-11-19T14:06:39.000Z</published>
    <updated>2019-11-21T01:41:04.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组合模式的概念和机制"><a href="#组合模式的概念和机制" class="headerlink" title="组合模式的概念和机制"></a>组合模式的概念和机制</h1><blockquote><ul><li><strong>概念</strong></li><li>组合模式：组合模式是指将对象组合成树形结构，以表示“部分-整体”的层次结构。组合模式使得用户对单个对象和组合对象的使用具有一致性。</li></ul></blockquote><blockquote><ul><li><p><strong>机制</strong></p><ol><li><strong>Component</strong>：为组合模式中的对象声明接口。</li><li><strong>Leaf</strong>             ：在组合模式中表示叶节点对象，叶节点对象没有子节点，实现Component的所有方法。</li><li><strong>Composite</strong> ：表示组合部件（可以带有子部件），实现所有在Component的操作。</li><li><strong>Client</strong>         : 通过Component接口操纵组合部件的对象。</li></ol></li></ul></blockquote><h1 id="组合模式结构图"><a href="#组合模式结构图" class="headerlink" title="组合模式结构图"></a><strong>组合模式结构图</strong></h1><p><img src="C:%5CUsers%5Clyh%5CDesktop%5CBlog%5CBlog%5Csource%5Cimg%5C%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B8%8E%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%5C1018770-20190618215742748-1302167321.png" alt></p><h2 id="组合模式代码示例"><a href="#组合模式代码示例" class="headerlink" title="组合模式代码示例"></a>组合模式代码示例</h2><h3 id="Component-java"><a href="#Component-java" class="headerlink" title="Component.java"></a>Component.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zuhemoshi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Component c)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Component c)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Component <span class="title">getChild</span><span class="params">(<span class="keyword">int</span> i)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">print</span> <span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Leaf-java"><a href="#Leaf-java" class="headerlink" title="Leaf.java"></a>Leaf.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zuhemoshi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Leaf</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Leaf</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Leaf</span><span class="params">( <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.num = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Component c)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Component <span class="title">getChild</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Component c)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.out.println(<span class="string">"这是叶子节点，所带的数据是:     "</span>+num);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Composite-java"><a href="#Composite-java" class="headerlink" title="Composite.java"></a>Composite.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zuhemoshi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Composite</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> ArrayList&lt;Component&gt; list = <span class="keyword">new</span> ArrayList&lt;Component&gt;();</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Composite</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Composite</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.num = num;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Component c)</span> </span>&#123;</span><br><span class="line">list.add(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Component <span class="title">getChild</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (Component)list.get(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Component c)</span> </span>&#123;</span><br><span class="line">       list.remove(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"这是一个树枝，其数值为："</span>+num);</span><br><span class="line"><span class="keyword">for</span>(Object test: list) &#123;</span><br><span class="line">((Component)test).print();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Test-java"><a href="#Test-java" class="headerlink" title="Test.java"></a>Test.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zuhemoshi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Composite composite = <span class="keyword">new</span> Composite(<span class="number">1</span>);</span><br><span class="line">composite.add(<span class="keyword">new</span> Leaf(<span class="number">2</span>));</span><br><span class="line">composite.add(<span class="keyword">new</span> Leaf(<span class="number">3</span>));</span><br><span class="line">composite.add(<span class="keyword">new</span> Leaf(<span class="number">4</span>));</span><br><span class="line">Composite composite_1 = <span class="keyword">new</span> Composite(<span class="number">5</span>);</span><br><span class="line">composite_1.add(<span class="keyword">new</span> Leaf(<span class="number">6</span>));</span><br><span class="line">composite.add(composite_1);</span><br><span class="line">composite.print();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;组合模式的概念和机制&quot;&gt;&lt;a href=&quot;#组合模式的概念和机制&quot; class=&quot;headerlink&quot; title=&quot;组合模式的概念和机制&quot;&gt;&lt;/a&gt;组合模式的概念和机制&lt;/h1&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;概念&lt;/strong&gt;
      
    
    </summary>
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/categories/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/tags/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>GitHub和Git学习</title>
    <link href="https://133608520.github.io/2019/09/20/33/"/>
    <id>https://133608520.github.io/2019/09/20/33/</id>
    <published>2019-09-20T11:54:13.000Z</published>
    <updated>2019-09-22T13:08:34.278Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><blockquote><p><strong>仓库（Repository）：即你的项目，每个项目对应一个仓库</strong></p><p><strong>收藏（Star):收藏仓库，下次方便查找</strong></p><p><strong>复制克隆项目(Fork):复制出来的项目是独立存在的</strong></p><p><strong>发起请求（Pull Request）：请求修改时候</strong></p><p><strong>关注（Watch）：关注项目，当项目更新可以接收到通知</strong></p><p><strong>事务卡片（Issue）：发现代码Bug，但是目前还没有成型的代码，需要讨论时候用</strong></p><hr><p><strong>GitHub主页：左侧显示用户动态以及关注用户或关注仓库的动态，右侧显示所有的git库</strong></p><p><strong>仓库主页：</strong></p><p><strong>个人主页：</strong></p></blockquote><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><blockquote><p><strong>通过git来管理github托管项目代码</strong></p></blockquote><h2 id="基本工作流程"><a href="#基本工作流程" class="headerlink" title="基本工作流程"></a>基本工作流程</h2><blockquote><p><strong>Git Repository(Git仓库)：最终确定的文件保存到仓库，成为一个新的版本，并且对他人可见</strong></p><p><strong>暂存区：暂存已经修改的文件最后统一提交到git仓库中</strong></p><p><strong>工作区（Working Directory） 添加，编辑，修改文件等动作</strong></p></blockquote><hr><blockquote><p><strong>假如提交两个文件，名字为hello.php,test.php</strong></p></blockquote><blockquote><ul><li><strong>首先查看所处的状态  ——git status</strong></li><li><strong>将文件存入暂存区     ——git add hello.php       git add test.php</strong></li><li><strong>将暂存区里的文件提交到git仓库</strong><ul><li><strong>首先查看当前所处的状态</strong></li><li><strong>提交到git仓库  —— git commit -m “提交描述”</strong></li></ul></li><li><strong>最后检验是否是git仓库    ——git status</strong></li></ul></blockquote><h2 id="Git初始化及仓库创建和操作"><a href="#Git初始化及仓库创建和操作" class="headerlink" title="Git初始化及仓库创建和操作"></a>Git初始化及仓库创建和操作</h2><h3 id="基本信息配置"><a href="#基本信息配置" class="headerlink" title="基本信息配置"></a>基本信息配置</h3><blockquote><ul><li>设置用户名<ul><li>git config –global user.name ‘username’</li></ul></li><li>设置用户名邮箱<ul><li>git config –global user.email ‘1336308520@qq.com’</li></ul></li></ul></blockquote><h3 id="初始化一个新的Git仓库"><a href="#初始化一个新的Git仓库" class="headerlink" title="初始化一个新的Git仓库"></a>初始化一个新的Git仓库</h3><ul><li><p><strong>创建文件夹</strong></p><ul><li><strong>右击新建文件夹或者在git命令里输入 mkdir 文件夹名称</strong></li></ul></li><li><p><strong>在文件内初始git（创建git仓库)</strong></p><ul><li><strong>在git命令行里 输入 ——git init</strong></li></ul></li><li><p>创建文件</p><ul><li>右击新建文件，或者命令行  —— touch 文件名</li></ul><h3 id="修改仓库文件"><a href="#修改仓库文件" class="headerlink" title="修改仓库文件"></a>修改仓库文件</h3><h3 id="删除仓库文件"><a href="#删除仓库文件" class="headerlink" title="删除仓库文件"></a>删除仓库文件</h3></li><li><p>在本地删除</p></li><li><p>在git命令行里 —— rm 删除文件名</p></li><li><p>git命令行    ——git commit -m ‘描述文字’</p><h2 id="Git远程仓库"><a href="#Git远程仓库" class="headerlink" title="Git远程仓库"></a>Git远程仓库</h2></li></ul><h2 id="Git克隆操作"><a href="#Git克隆操作" class="headerlink" title="Git克隆操作"></a>Git克隆操作</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的"></a>目的</h3><blockquote><p><strong>将远程仓库（github上对应的项目）复制到本地</strong></p></blockquote><ul><li><strong>验证有没有初始化git</strong><ul><li><strong>git status</strong></li></ul></li><li><strong>执行克隆操作</strong><ul><li><strong>git clone http：…(这里放置github上面克隆显示的网址)</strong></li></ul></li></ul><h2 id="将本地仓库和远程仓库连接"><a href="#将本地仓库和远程仓库连接" class="headerlink" title="将本地仓库和远程仓库连接"></a>将本地仓库和远程仓库连接</h2><ul><li><strong>首先配置远程仓库的目标</strong><ul><li><strong>git remote add origin http:…(后面跟上github仓库的clone下出的网址)</strong></li></ul></li><li><strong>将本地仓库发送到远程仓库</strong><ul><li><strong>git push -u origin master</strong></li></ul></li><li><strong>如果第2步出现了错误</strong><ul><li><strong>试一下：git pull –rebase origin master</strong></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;GitHub&quot;&gt;&lt;a href=&quot;#GitHub&quot; class=&quot;headerlink&quot; title=&quot;GitHub&quot;&gt;&lt;/a&gt;GitHub&lt;/h1&gt;&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基
      
    
    </summary>
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/categories/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/tags/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate注解</title>
    <link href="https://133608520.github.io/2019/09/17/32/"/>
    <id>https://133608520.github.io/2019/09/17/32/</id>
    <published>2019-09-17T11:59:51.000Z</published>
    <updated>2019-09-22T13:48:26.044Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hibernate注解"><a href="#Hibernate注解" class="headerlink" title="Hibernate注解"></a>Hibernate注解</h1><h2 id="User-java"><a href="#User-java" class="headerlink" title="User.java"></a>User.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Column;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GenerationType;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Table;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table</span>(name=<span class="string">"abcd_user"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">UUIDEntity</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Column</span>(unique = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">( String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>@Entity</li><li>@Table(name=”abcd_user”)</li><li>@GeneratedValue(strategy = GenerationType.IDENTITY)</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hibernate注解&quot;&gt;&lt;a href=&quot;#Hibernate注解&quot; class=&quot;headerlink&quot; title=&quot;Hibernate注解&quot;&gt;&lt;/a&gt;Hibernate注解&lt;/h1&gt;&lt;h2 id=&quot;User-java&quot;&gt;&lt;a href=&quot;#User-jav
      
    
    </summary>
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/categories/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/tags/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>周末复习</title>
    <link href="https://133608520.github.io/2019/09/09/31/"/>
    <id>https://133608520.github.io/2019/09/09/31/</id>
    <published>2019-09-09T11:57:28.000Z</published>
    <updated>2019-09-10T11:45:23.174Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建Hibernate环境，连接MySql数据库"><a href="#搭建Hibernate环境，连接MySql数据库" class="headerlink" title="搭建Hibernate环境，连接MySql数据库"></a>搭建Hibernate环境，连接MySql数据库</h1><ul><li><p><strong>创建Maven项目</strong></p><ul><li>1.什么是groupid和artifactId？<br>groupid和artifactId被统称为“坐标”是为了保证项目唯一性而提出的，如果你要把你项目弄到maven本地仓库去，你想要找到你的项目就必须根据这两个id去查找。<br>　　groupId一般分为多个段，这里我只说两段，第一段为域，第二段为公司名称。域又分为org、com、cn等等许多，其中org为非营利组织，com为商业组织。举个apache公司的tomcat项目例子：这个项目的groupId是org.apache，它的域是org（因为tomcat是非营利项目），公司名称是apache，artigactId是tomcat。 </li><li>注意：如果选择的时War，pom.xml会报错。</li><li>解决方案：在src-&gt;webapp下面新建 WEB-INF文件夹，里面粘贴一个web.xml</li></ul></li><li><p>在pom.xml里面引用hibernate的依赖</p><ul><li>百度搜索mvn</li><li>搜索hibernate</li><li>找带有core的</li></ul></li><li><p>hibernate的运行需要hibernate.cfg.xml</p><ul><li><p>注意名字必须是它，具体里面的配置内容寻找百度</p></li><li><p>放在src/main/resources下面</p></li><li><p>里面包含了要连接数据库的基本信息，例如数据库的账号，密码</p><p>重点代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();<span class="comment">//会到类路径下读取hibernate.cfg.xml</span></span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();<span class="comment">//会启动一个新线程</span></span><br><span class="line">Session session = fac.openSession();<span class="comment">//打开一个数据库对话，肯定会建立数据库</span></span><br><span class="line">session.close();<span class="comment">//关闭session</span></span><br><span class="line">fac.close();<span class="comment">//关闭fac</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h1 id="创建实体类，配置mapping，保存对象"><a href="#创建实体类，配置mapping，保存对象" class="headerlink" title="创建实体类，配置mapping，保存对象"></a>创建实体类，配置mapping，保存对象</h1><ul><li><p><strong>创建实体类</strong></p></li><li><p>例如创建一个entity包，里面放一个User类</p></li><li><p><strong>新建一个mapping文件</strong></p><ul><li><p>网上有mapping文件</p></li><li><!-- mapping文件用来描述Entity与数据表的关系 --></li><li><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC</span></span><br><span class="line"><span class="meta">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mapping文件用来描述Entity与数据表的关系 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"entity.User"</span> <span class="attr">table</span>=<span class="string">"rethink_user"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"rethink_id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"idntity"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">column</span>=<span class="string">"rethink_name"</span> <span class="attr">type</span>=<span class="string">"string"</span> <span class="attr">length</span>=<span class="string">"16"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">column</span>=<span class="string">"rethink_password"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"age"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对mapping编写完成后需要在hibernate写入映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mapping</span> <span class="attr">resource</span> =<span class="string">"entity/Person.hbm.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>接着运行<strong>Test.java</strong>,可能会出现如下错误</p></li></ul><p>数据库方言Error</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> Error executing DDL via JDBC Statement</span><br><span class="line">org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement</span><br></pre></td></tr></table></figure><ul><li><p>解决数据库方言BUG</p></li><li><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 数据库方言配置 org.hibernate.dialect.MySQLDialect (出现问题就更换) --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.dialect"</span>&gt;</span>org.hibernate.dialect.MySQL5Dialect<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>保存对象</strong></p><ul><li>在Test.java里面编写</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();<span class="comment">// 会到类路径下读取hibernate.cfg.xml</span></span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();<span class="comment">// 会开启一个新线程</span></span><br><span class="line">Session session =  fac.openSession();<span class="comment">//打开一条数据库会话，肯定会建立连接</span></span><br><span class="line">System.out.println(<span class="string">"成功连接数据库"</span>);</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setAge(<span class="number">18</span>);</span><br><span class="line">user.setUsername(<span class="string">"刘延昊"</span>);</span><br><span class="line">user.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">session.save(user);</span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><strong>重点代码</strong></p><blockquote><p><strong>User user = new User();</strong></p><pre><code>**user.setAge(18);****user.setUsername(&quot;刘延昊&quot;);****user.setPassword(&quot;123456&quot;);****session.save(user);**</code></pre></blockquote></li></ul><h1 id="删除对象，事务启动，提交，回滚"><a href="#删除对象，事务启动，提交，回滚" class="headerlink" title="删除对象，事务启动，提交，回滚"></a>删除对象，事务启动，提交，回滚</h1><h2 id="删除对象"><a href="#删除对象" class="headerlink" title="删除对象"></a>删除对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDelete</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line">User us = <span class="keyword">new</span> User();</span><br><span class="line">us.setId(<span class="number">1</span>);</span><br><span class="line">session.delete(us);<span class="comment">//虽然参数时Object，但实际上用ID</span></span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>注意要启动事务</strong></li><li><strong>注意要提交事务</strong></li></ul><h1 id="保存50个对象，修改对象"><a href="#保存50个对象，修改对象" class="headerlink" title="保存50个对象，修改对象"></a>保存50个对象，修改对象</h1><h2 id="TestSave50-java"><a href="#TestSave50-java" class="headerlink" title="TestSave50.java"></a>TestSave50.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSave50</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;<span class="number">50</span>;i++) &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setUsername(<span class="string">"刘"</span>+i);</span><br><span class="line">user.setAge(i);</span><br><span class="line">user.setPassword(<span class="string">"123456"</span>);</span><br><span class="line">session.save(user);</span><br><span class="line">&#125;</span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>session.save(user);</strong></li></ul><h2 id="TestUpdate-java"><a href="#TestUpdate-java" class="headerlink" title="TestUpdate.java"></a>TestUpdate.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestUpdate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line"><span class="comment">//根据ID修改密码,先查询-再修改</span></span><br><span class="line">User user = session.get(User.class, <span class="number">3</span>);</span><br><span class="line">user.setPassword(<span class="string">"12"</span>);</span><br><span class="line">session.update(user);</span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Query-与list-—-Query与uniqueResult"><a href="#Query-与list-—-Query与uniqueResult" class="headerlink" title="Query 与list  —-Query与uniqueResult"></a>Query 与list  —-Query与uniqueResult</h1><h2 id="TestQuery-java"><a href="#TestQuery-java" class="headerlink" title="TestQuery.java"></a>TestQuery.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Query;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestQuery</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line"><span class="comment">//HQL语句，纯查询语句，面向对象的语言，在HQL里面没有数据库的概念</span></span><br><span class="line">String hql = <span class="string">"from entity.User where age&gt;30"</span>;  <span class="comment">//也可以加别名</span></span><br><span class="line">Query&lt;User&gt; query = session.createQuery(hql);</span><br><span class="line">List&lt;User&gt; list = query.list();</span><br><span class="line"><span class="keyword">for</span>(User us:list) &#123;</span><br><span class="line">System.out.println(us.getUsername());</span><br><span class="line">&#125;</span><br><span class="line">Query&lt;User&gt; query2 = session.createQuery(<span class="string">"from entity.User where username='刘3'"</span>);</span><br><span class="line">User un = query2.uniqueResult();<span class="comment">//如果查出多个数据，会抛异常</span></span><br><span class="line">System.out.println(un.getId());</span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>**String hql = “from entity.User where age&gt;30”;  //也可以加别名<pre><code>Query&lt;User&gt; query = session.createQuery(hql);  List&lt;User&gt; list = query.list();  for(User us:list) {      System.out.println(us.getUsername());  }  Query&lt;User&gt; query2 = session.createQuery(&quot;from entity.User where username=&apos;刘3&apos;&quot;);  User un = query2.uniqueResult();//如果查出多个数据，会抛异常  System.out.println(un.getId());**</code></pre></li></ul><h1 id="Hibernate使用UUID主键"><a href="#Hibernate使用UUID主键" class="headerlink" title="Hibernate使用UUID主键"></a>Hibernate使用UUID主键</h1><h2 id="Book-java"><a href="#Book-java" class="headerlink" title="Book.java"></a>Book.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Book</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String author;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(String id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getAuthor</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> author;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAuthor</span><span class="params">(String author)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.author = author;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Book-hbm-xml"><a href="#Book-hbm-xml" class="headerlink" title="Book.hbm.xml"></a>Book.hbm.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE hibernate-mapping PUBLIC</span></span><br><span class="line"><span class="meta">"-//Hibernate/Hibernate Mapping DTD 3.0//EN"</span></span><br><span class="line"><span class="meta">"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mapping文件用来描述Entity与数据表的关系 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hibernate-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"entity.Book"</span> <span class="attr">table</span>=<span class="string">"rethink_book"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"book_id"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generator</span> <span class="attr">class</span>=<span class="string">"uuid"</span>&gt;</span><span class="tag">&lt;/<span class="name">generator</span>&gt;</span><span class="comment">&lt;!-- 使用Hibernate的UUID主键 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">column</span>=<span class="string">"book_name"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">column</span>=<span class="string">"book_author"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">hibernate-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="在hibernate-cfg-xml里面配置相关的mapping"><a href="#在hibernate-cfg-xml里面配置相关的mapping" class="headerlink" title="在hibernate.cfg.xml里面配置相关的mapping"></a>在hibernate.cfg.xml里面配置相关的mapping</h2><h2 id="TestUUID-java"><a href="#TestUUID-java" class="headerlink" title="TestUUID.java"></a>TestUUID.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.Book;</span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestUUID</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line">Book book = <span class="keyword">new</span> Book();</span><br><span class="line">book.setAuthor(<span class="string">"希不"</span>);</span><br><span class="line">book.setName(<span class="string">"我的书"</span>);</span><br><span class="line">session.save(book);</span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="OpenSession与CurrentSession"><a href="#OpenSession与CurrentSession" class="headerlink" title="OpenSession与CurrentSession"></a>OpenSession与CurrentSession</h1><ul><li><p><strong>首先在hibernate.cfg.xml里面配置</strong></p><blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;  <span class="comment">&lt;!-- 将Session与线程绑定=&gt; 只有配置了该配置,才能使用getCurrentSession --&gt;</span></span><br><span class="line">&gt;         <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernate.current_session_context_class"</span>&gt;</span>thread<span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote></li></ul><h2 id="TestSession-java"><a href="#TestSession-java" class="headerlink" title="TestSession.java"></a>TestSession.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSession</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line">Session session1 = fac.openSession();</span><br><span class="line">Session session2 = fac.openSession();</span><br><span class="line">Session session3 = fac.getCurrentSession();<span class="comment">//获取最近的currentSession,没有就创建一个,不要以为是Session，和session1和session2没有关系</span></span><br><span class="line">Session session4 = fac.getCurrentSession();</span><br><span class="line"></span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li><p><strong>OpenSession 打开新的Session</strong><br><strong>GetCurrentSession 获取最近的Session，我们需要在配置文件中描述何为最近</strong></p><p><strong>GetCurrentSession()会获取最近的CurrentSession，如果没有就建一个，</strong></p><p><strong>OpenSession在查询的时候可以不用事务，用过之后必须关闭</strong><br><strong>CurrentSession必须使用事务，使用之后不用关闭</strong></p><p><strong>无论什么Session，无论增删改查，都加事务就肯定没错，</strong></p></li></ul></blockquote><h1 id="带有参数的HQL语句（问号参数和冒号参数）"><a href="#带有参数的HQL语句（问号参数和冒号参数）" class="headerlink" title="带有参数的HQL语句（问号参数和冒号参数）"></a>带有参数的HQL语句（问号参数和冒号参数）</h1><h2 id="TestParams-java"><a href="#TestParams-java" class="headerlink" title="TestParams.java"></a>TestParams.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.Query;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestParams</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line">String hql = <span class="string">"from User u where u.username = ?"</span>;</span><br><span class="line">Query&lt;User&gt; query = session.createQuery(hql);</span><br><span class="line">query.setParameter(<span class="number">0</span>, <span class="string">"刘1"</span>);</span><br><span class="line">User user = query.uniqueResult();</span><br><span class="line">System.out.println(user.getId());</span><br><span class="line">String hql2 = <span class="string">"from User u where u.username =:bieming"</span>;</span><br><span class="line">Query&lt;User&gt; query2 = session.createQuery(hql2);</span><br><span class="line">query2.setParameter(<span class="string">"bieming"</span>, <span class="string">"刘2"</span>);</span><br><span class="line">User user2 = query2.uniqueResult();</span><br><span class="line">System.out.println(user2.getId());</span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>​        <strong>String hql = “from User u where u.username = ?”</strong>;</p></li><li><p>​        <strong>String hql2 = “from User u where u.username =:bieming”;</strong></p></li></ul><h1 id="投影查询（只查询属性的几个属性）"><a href="#投影查询（只查询属性的几个属性）" class="headerlink" title="投影查询（只查询属性的几个属性）"></a>投影查询（只查询属性的几个属性）</h1><h2 id="TestQuery2-java"><a href="#TestQuery2-java" class="headerlink" title="TestQuery2.java"></a>TestQuery2.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Query;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestQuery2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line"><span class="comment">//HQL语句，纯查询语句，面向对象的语言，在HQL里面没有数据库的概念</span></span><br><span class="line">String hql = <span class="string">"select new User(id,username) from User"</span>; </span><br><span class="line">Query&lt;User&gt; query = session.createQuery(hql);</span><br><span class="line">List&lt;User&gt; list = query.getResultList();</span><br><span class="line"><span class="keyword">for</span>(User user:list) &#123;</span><br><span class="line">System.out.println(user.getId());</span><br><span class="line">System.out.println(user.getUsername());</span><br><span class="line">System.out.println(user.getAge());</span><br><span class="line">System.out.println(user.getPassword());</span><br><span class="line">System.out.println(<span class="string">"-----------"</span>);</span><br><span class="line">&#125;</span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>**<font color="purple">String hql = “select new User(id,username) from User”; </font><pre><code>&lt;font color =&apos;purple&apos;&gt;Query&lt;User&gt; query = session.createQuery(hql);&lt;/font&gt;**</code></pre></li></ul><h1 id="HQL得到数据数组"><a href="#HQL得到数据数组" class="headerlink" title="HQL得到数据数组"></a>HQL<strong>得到数据数组</strong></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Query;</span><br><span class="line"><span class="comment">//删除对象</span></span><br><span class="line"><span class="keyword">import</span> org.hibernate.Session;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.SessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.cfg.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestQuery3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">Configuration cfg = <span class="keyword">new</span> Configuration().configure();</span><br><span class="line">SessionFactory fac = cfg.buildSessionFactory();</span><br><span class="line">Session session = fac.openSession();</span><br><span class="line">session.getTransaction().begin();<span class="comment">//启动事务</span></span><br><span class="line"><span class="comment">//HQL语句，纯查询语句，面向对象的语言，在HQL里面没有数据库的概念</span></span><br><span class="line">String hql = <span class="string">"select username,age from User"</span>; </span><br><span class="line">Query&lt;Object&gt; query = session.createQuery(hql);</span><br><span class="line">List&lt;Object&gt; list = query.getResultList();</span><br><span class="line"><span class="keyword">for</span>(Object obj:list) &#123;</span><br><span class="line">Object[] arr = (Object[])obj;</span><br><span class="line">String name = (String)arr[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">int</span> age = (Integer) arr[<span class="number">1</span>];</span><br><span class="line">System.out.println(name);</span><br><span class="line">System.out.println(age);</span><br><span class="line">System.out.println(<span class="string">"------------"</span>);</span><br><span class="line">&#125;</span><br><span class="line">session.getTransaction().commit();<span class="comment">//提交事务</span></span><br><span class="line">session.close();</span><br><span class="line">fac.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>String hql = “select username,age from User”;</strong> </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;搭建Hibernate环境，连接MySql数据库&quot;&gt;&lt;a href=&quot;#搭建Hibernate环境，连接MySql数据库&quot; class=&quot;headerlink&quot; title=&quot;搭建Hibernate环境，连接MySql数据库&quot;&gt;&lt;/a&gt;搭建Hibernate环境，
      
    
    </summary>
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/categories/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/tags/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate5</title>
    <link href="https://133608520.github.io/2019/09/02/30/"/>
    <id>https://133608520.github.io/2019/09/02/30/</id>
    <published>2019-09-02T13:16:46.000Z</published>
    <updated>2019-09-02T13:30:17.974Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>Hibernate5</strong></p><p><strong>全自动持久化框架，</strong> </p><p><strong>框架：可复用的程序集，</strong><br><strong>集合框架：List、Set、Map、迭代器。</strong></p><p><strong>ORM框架 - 对象关系映射</strong><br><strong>哪个类对应哪个表，哪些属性对应哪些字段</strong></p><p><strong>使用Hibernate可以非常快速的进行增删改查</strong><br><strong>连接数据库依然还是依靠JDBC，所有JDBC代码都已经在Hibernate底层写好，我们是不需要接触JDBC的。</strong></p><p><strong>学习框架目的：提高开发效率，该关注的就是如何使用，目的很简单，就是做出功能。</strong></p><p><strong>Hibernate方言：根据不同的方言生成不同的SQL语句，以适应各种数据库</strong><br><strong>org.hibernate.dialect.MySQL5Dialect</strong></p><p><strong>session.getTransaction().begin();//启动事务</strong><br><strong>session.getTransaction().commit();//提交事务</strong><br><strong>session.getTransaction().rollback();//回滚事务（滚回到begin的位置）</strong></p><p><strong>稳妥的修改：先查询再修改（查询，改值，更新）</strong><br><strong>User user = session.get(User.class, 60);</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Hibernate5&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全自动持久化框架，&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;框架：可复用的程序集，&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;集合框架：List、Set、
      
    
    </summary>
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/categories/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/tags/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>周末复习</title>
    <link href="https://133608520.github.io/2019/08/31/29/"/>
    <id>https://133608520.github.io/2019/08/31/29/</id>
    <published>2019-08-31T00:39:35.000Z</published>
    <updated>2019-09-01T09:40:57.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AJAX复习"><a href="#AJAX复习" class="headerlink" title="AJAX复习"></a>AJAX复习</h1><blockquote><p><strong>AJAX不是新的编程语言，而是一种使用现有标准的新技术。AJAX是在不重新加载整个页面的情况下，与服务器交换数据并异步更新部分网页的艺术。</strong></p></blockquote><h2 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line"> &lt;% String path = request.getContextPath(); %&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">The time is:&lt;span id ="dt"&gt;&lt;/span&gt;&lt;br/&gt;</span><br><span class="line">&lt;input type = <span class="string">"button"</span> value = <span class="string">"刷新时间"</span> onclick=<span class="string">"shua();"</span>/&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">alert(<span class="string">"hello world!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">function <span class="title">shua</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//可以发送页面请求，可以接收服务器响应</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">obj.onreadystatechange = function()&#123;</span><br><span class="line"><span class="comment">//是否已经加载完毕</span></span><br><span class="line"><span class="keyword">var</span> isLast = (obj.readyState==<span class="number">4</span>);</span><br><span class="line"><span class="comment">//服务器是否响应成功</span></span><br><span class="line"><span class="keyword">var</span> isSuccess = (obj.status==<span class="number">200</span>||obj.status==<span class="number">304</span>);</span><br><span class="line"><span class="comment">//当服务器相应成功，页面加载成功后</span></span><br><span class="line"><span class="keyword">if</span>(isLast&amp;&amp;isSuccess)&#123;</span><br><span class="line"><span class="comment">//获取响应器响应文本</span></span><br><span class="line"><span class="keyword">var</span> date = obj.responseText;</span><br><span class="line"><span class="comment">//获取标签对象</span></span><br><span class="line"><span class="keyword">var</span> text = document.getElementById(<span class="string">"dt"</span>);</span><br><span class="line"><span class="comment">//给标签对象赋值</span></span><br><span class="line">text.innerHTML=date;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//告诉页面要去哪里访问</span></span><br><span class="line">obj.open(<span class="string">"get"</span>,<span class="string">"&lt;%=path%&gt;/date.jsp"</span>);</span><br><span class="line"><span class="comment">//开始去所想去页面（同时会传递参数）</span></span><br><span class="line">obj.send(<span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="重点："><a href="#重点：" class="headerlink" title="重点："></a>重点：</h3><ul><li>首先定义一个变量: var obj = new XMLHttpRequest();</li><li>该对象的状态发生改变则执行函数操作： obj.onreadystatechange() = function(){} <font color="red"><strong>注意：</strong></font><font color="red">onreadystatechange全部都是小写</font></li><li>isLast（当前页面是否加载完毕） <strong>obj.readyState==4</strong></li><li>isSuccess（服务器是否响应成功）<strong>obj.status == 200||obj.status ==304</strong></li><li>接收服务器响应发送来的数据：<strong>obj.responseText;</strong></li><li>告诉页面发送的位置：<strong>obj.send(“get 或者post”，”发送服务器的地址“)</strong></li><li>开始发送，同时把要传递的参数写入 <strong>obj.send(null);</strong></li></ul><h2 id="Ajax工具类复习"><a href="#Ajax工具类复习" class="headerlink" title="Ajax工具类复习"></a>Ajax工具类复习</h2><h3 id="register-jsp"><a href="#register-jsp" class="headerlink" title="register.jsp"></a>register.jsp</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">    &lt;% String path = request.getContextPath();</span><br><span class="line">    request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">    response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">    %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;script type="text/javascript" src = "&lt;%=path%&gt;/js/ajax.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">用户名：&lt;input type=<span class="string">"text"</span> id =<span class="string">"user"</span>/&gt;</span><br><span class="line">&lt;input type = <span class="string">"button"</span> value = <span class="string">"检测用"</span> id = <span class="string">"bt"</span> onclick = <span class="string">"jiance();"</span>/&gt;</span><br><span class="line">&lt;script type =<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">jiance</span><span class="params">()</span></span>&#123;</span><br><span class="line">ajaxGet(<span class="string">"&lt;%=path%&gt;/userTest"</span>,<span class="string">"user="</span>+document.getElementById(<span class="string">"user"</span>).value,function(sc)&#123;alert(sc);&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="userTest-java"><a href="#userTest-java" class="headerlink" title="userTest.java"></a>userTest.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class userTest</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/userTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">userTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">   request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">    response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">String userName = request.getParameter(<span class="string">"user"</span>);</span><br><span class="line">System.out.println(<span class="string">"检测用户名："</span>+userName);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"liu"</span>.equals(userName)) &#123;</span><br><span class="line">response.getWriter().print(<span class="string">"存在该用户"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">response.getWriter().print(<span class="string">"不存在该用户"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ajax-js"><a href="#ajax-js" class="headerlink" title="ajax.js"></a>ajax.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajaxGet</span>(<span class="params">url,param,callSuc,callErr</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">obj.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> isLast = (obj.readyState == <span class="number">4</span>);</span><br><span class="line"><span class="keyword">var</span> isSuccess = (obj.status==<span class="number">200</span>||obj.status == <span class="number">304</span>);</span><br><span class="line"><span class="keyword">if</span>(isLast)&#123;</span><br><span class="line"><span class="keyword">if</span>(isSuccess)&#123;</span><br><span class="line"><span class="keyword">var</span> result = obj.responseText;</span><br><span class="line"><span class="keyword">if</span>(callSuc) callSuc(result);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(callErr) callErr(obj.status);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.open(<span class="string">"get"</span>,url+<span class="string">"?"</span>+param);</span><br><span class="line">obj.send(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重点：-1"><a href="#重点：-1" class="headerlink" title="重点："></a>重点：</h3><ul><li>对AJAX进行抽象封装，使它成为一个具有一定规范的方法</li><li>register页面-&gt;ajax.js-&gt;userTest-&gt;返回的数据交给ajaxGet（）方法进行处理</li><li>ajaxGet(url,param,callSuc);</li><li>使用时候现写callSuc</li></ul><h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><blockquote><p><strong>项目配置文件：pom.xml，在文件中描述需要哪些jar，可以自动联网更新，</strong><br><strong>我们只需要描述一下，需要用到什么组件，就可以自动获得这些jar包，及其依赖。</strong></p><p><strong>Maven是一个独立的程序，可以不依赖Eclipse，是基于命令行的软件。</strong></p><p><strong>会根据pom.xml文件寻找jar包及其依赖包，会连接到网络仓库进行下载，把下载的jar包存到本地，</strong><br><strong>涉及到两个概念：远程仓库，本地仓库（默认在用户目录下的.m2/repository）。</strong><br><strong>Maven会先加载本地仓库，如果仓库中不存在这个包，则会联网更新。</strong></p><p><strong>Maven本身的配置文件：settings.xml</strong></p><p><strong>普通javeweb项目src下的文件都会发布到：WEB-INF\classes</strong><br><strong>src/main         : 主目录，所有资源都在这里</strong><br><strong>src/main/java        : Source目录，编写JAVA代码</strong><br><strong>src/main/resource    : 资源目录，通常放各种配置文件</strong><br><strong>src/main/webapp        : 相当于WebRoot或WebContent</strong></p><p><strong>注意：</strong><br><strong>java目录下的.java文件会经过编译后发布到classes，</strong><br><strong>resource目录下的文件会直接copy到classes。</strong></p><p><strong>项目右键：</strong><br><strong>Deployment Assembly : 依赖关联，项目中的东西最终发布到哪里。</strong><br><strong>Project Facets : 项目的状态面板，java版本、Web版本、Runtime、是否web项目</strong></p></blockquote><h2 id="部署本地仓库"><a href="#部署本地仓库" class="headerlink" title="部署本地仓库"></a>部署本地仓库</h2><p><strong>打开Eclipse   perference-&gt;  userSetting-&gt;配置成自己的setting.xml路径后 update一下</strong></p><h2 id="配置阿里云中央仓库"><a href="#配置阿里云中央仓库" class="headerlink" title="配置阿里云中央仓库"></a>配置阿里云中央仓库</h2><p><strong>找到自己setting.xml文件后更改 mirrors-&gt;变成阿里云仓库标签</strong></p><h2 id="配置maven-compiler-plugin插件"><a href="#配置maven-compiler-plugin插件" class="headerlink" title="配置maven-compiler-plugin插件"></a>配置maven-compiler-plugin插件</h2><p>直接网上搜常用配置代码</p><h2 id="创建MavenWeb项目，使用Tomcat插件"><a href="#创建MavenWeb项目，使用Tomcat插件" class="headerlink" title="创建MavenWeb项目，使用Tomcat插件"></a>创建MavenWeb项目，使用Tomcat插件</h2><blockquote><p><strong>创建一个简单的Maven项目，会报缺少web.xml的错误提示，这个时候要新建一个WEB-INF文件夹里面放一个web.xml</strong></p><p><strong>使用Tomcat插件需要查找tomcat7-maven-plugin，从网上找它的一般配置即可</strong></p></blockquote><h2 id="引入ServvletAPI依赖并调试启动"><a href="#引入ServvletAPI依赖并调试启动" class="headerlink" title="引入ServvletAPI依赖并调试启动"></a>引入ServvletAPI依赖并调试启动</h2><p><strong>如何运行项目？</strong></p><ul><li><strong>run-&gt;MavenBuild  输入命令：tomcat7:run</strong></li></ul><p><strong>如何引入ServletAPI依赖?</strong></p><ul><li><strong>在百度上搜索mvn</strong></li><li><strong>进入网页，搜索Servlet</strong></li><li><strong>复制到pom.xml中</strong></li></ul><h2 id="Maven属性配置"><a href="#Maven属性配置" class="headerlink" title="Maven属性配置"></a>Maven属性配置</h2><h2 id="本地仓库与在线更新"><a href="#本地仓库与在线更新" class="headerlink" title="本地仓库与在线更新"></a>本地仓库与在线更新</h2><p><strong>都是对应于本地文件夹及相互的关系</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;AJAX复习&quot;&gt;&lt;a href=&quot;#AJAX复习&quot; class=&quot;headerlink&quot; title=&quot;AJAX复习&quot;&gt;&lt;/a&gt;AJAX复习&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AJAX不是新的编程语言，而是一种使用现有标准的新技术。AJAX是
      
    
    </summary>
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/categories/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/tags/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Maven</title>
    <link href="https://133608520.github.io/2019/08/28/28/"/>
    <id>https://133608520.github.io/2019/08/28/28/</id>
    <published>2019-08-28T09:18:06.000Z</published>
    <updated>2019-08-28T09:40:28.349Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p><strong>在开发java项目的时候，项目编译、测试、运行、打包等等都有着极高的成本，跨部门甚至跨人员之间的项目结构都有可能不一样，除此之外跨部门甚至跨人员之间的项目结构都有可能不一样，这使得成本加倍。maven就是为了解决这些问题的，在跨平台（Linux、Windows、Mac）的基础上，使用Archetype完成各种项目统一的骨架，还进行标准化的构建过程，包含了包版本管理、库依赖、集成测试、编译、安装、运行等。</strong></p></blockquote><h1 id="setting-xml"><a href="#setting-xml" class="headerlink" title="setting.xml"></a>setting.xml</h1><blockquote><p><strong>setting.xml 是maven的管理配置文件，包含了系统级别的配置和当前用户级别的配置，用户级别的路径是<code>~/.m2</code>，系统级别的是<code>$M2_HOME/conf</code>，当然了<code>$M2_HOME</code>是在安装的时候设置好的maven路径，我们一般使用的是用户级别的文件。</strong><br><strong>该文件可以配置仓库、代理、profile、镜像、插件等，更多更详细的配置[setting.xml</strong>](<a href="https://link.jianshu.com?t=http://maven.apache.org/settings.html" target="_blank" rel="noopener">https://link.jianshu.com?t=http://maven.apache.org/settings.html</a>)</p></blockquote><h2 id="配置本地仓库"><a href="#配置本地仓库" class="headerlink" title="配置本地仓库"></a>配置本地仓库</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>F:\\Documents\\MavenRepository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置阿里云仓库"><a href="#配置阿里云仓库" class="headerlink" title="配置阿里云仓库"></a>配置阿里云仓库</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="localRepository"><a href="#localRepository" class="headerlink" title="localRepository"></a><strong>localRepository</strong></h1><blockquote><p><strong>本地仓库地址，默认情况下，下载到本地的代码库存放在<code>${user.home}/.m2/repository</code>文件夹中的，用户如果想存在放其他地方，配置该属性即可</strong></p></blockquote><h1 id="mirrors"><a href="#mirrors" class="headerlink" title="mirrors"></a><strong><font color="blue">mirrors</font></strong></h1><blockquote><p><strong>镜像地址，对仓库地址的一种映射关系，<u>国外的仓库地址可能不是很稳定</u>，类似于AliBaBa和OSchina搭建的镜像地址，我们可以配置镜像地址，使得访问速度更快</strong></p></blockquote><h2 id="没有镜像的时候"><a href="#没有镜像的时候" class="headerlink" title="没有镜像的时候"></a><strong>没有镜像的时候</strong></h2><p><strong>需要直连A仓库，如果A仓库在国外可能存在各种问题不稳定工作</strong></p><h1 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h1><blockquote><p><strong>什么叫仓库呢？顾名思义就是存放物品的地方，在Java项目中肯定就是存放了各种各样的jar包，避免了每开发一个项目都要导入各种各样的jar包，全部统一存放在仓库中，使用的时候只需要在POM中声明所需要的包的GroupId和artifactId，在使用的时候会自动关联相关jar包。</strong></p></blockquote><h1 id="坐标和依赖"><a href="#坐标和依赖" class="headerlink" title="坐标和依赖"></a>坐标和依赖</h1><p>maven的坐标预定了世界上任何一个构建的位置，只需要约定好正确的坐标，就可以正确的找到所需的构建，坐标元素包括<code>groupId</code>,<code>artifactId</code>, <code>version</code>等。</p><p><strong>坐标详解</strong></p><ul><li>groupId    （必选）定义当前maven项目隶属的实际项目</li><li>artifactId （必选）实际项目中的一个maven模块</li><li>version （必选）版本号</li><li>packaging （可选）打包方式，常用的分为jar和war包，插件则是maven-plugin,默认为jar包</li><li>classifier （不可直接定义）帮助定义构建出的一些附属构建，例如source和对应的doc</li></ul><p><strong>依赖配置</strong></p><p>依赖配置是在pom文件中的配置的元素，在dependencies中的，可以包含一个或者多个dependency元素，每个依赖包含如下元素</p><ul><li>groupId、artifactId、version 依赖的基础坐标，最重要的</li><li>type 依赖的类型，对应到坐标的packaging，默认情况下不必声明，其值为jar</li><li>scope 依赖的范围，<strong>不同的依赖会使用不同的classpath</strong></li></ul><h1 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a><font color="blue">pom.xml</font></h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.zhenzhigu.demo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>HelloMaven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.45<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-dbutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-beanutils<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span><span class="comment">&lt;!-- 不和项目一起发布 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.glassfish.web<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-impl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">finalName</span>&gt;</span>hello-maven-web<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编译的时候使用JDK8和UTF8编码 , --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;version&gt;3.0&lt;/version&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 编译jar包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">archive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">addMavenDescriptor</span>&gt;</span>false<span class="tag">&lt;/<span class="name">addMavenDescriptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">addDefaultImplementationEntries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addDefaultImplementationEntries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">addDefaultSpecificationEntries</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addDefaultSpecificationEntries</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">archive</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="如何去网上寻找引用"><a href="#如何去网上寻找引用" class="headerlink" title="如何去网上寻找引用"></a>如何去网上寻找引用</h1><ul><li><strong>百度搜索mvn</strong></li><li><strong>搜索需要的引用</strong></li><li><strong>复制坐标</strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;在开发java项目的时候，项目编译、测试、运行、打包等等都有着极高的成本，跨部门甚至跨人员之间的项
      
    
    </summary>
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/categories/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/tags/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>AJAX</title>
    <link href="https://133608520.github.io/2019/08/24/27/"/>
    <id>https://133608520.github.io/2019/08/24/27/</id>
    <published>2019-08-24T08:28:19.000Z</published>
    <updated>2019-08-27T01:13:58.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h1><blockquote><p><strong>AJAX:”Asynchronous JavaScript and XML”</strong><br><strong>中文意思：异步JavaScript和XML。</strong><br><strong>指一种创建交互式网页应用的网页开发技术。</strong><br><strong>AJAX并非缩写词,而是由Jesse James Gaiiett创造的名词。</strong></p><p><strong>不是指一种单一的技术，而是有机地利用了一系列相关的技术：</strong><br><strong>web标准( Standards-Based Presentation )XHTML+CSS的表示,</strong><br><strong>使用 DOM( Document Object Model )进行动态显示及交互,</strong><br><strong>使用 XML 和 XSLT 进行数据交换及相关操作,</strong><br><strong>使用 XMLHttpRequest 进行异步数据查询、检索.</strong></p><p><strong>简单理解为：JavaScript + XMLHttpRequest + CSS +服务器端 的集合.</strong></p></blockquote><h1 id="AJAX优点"><a href="#AJAX优点" class="headerlink" title="AJAX优点"></a>AJAX优点</h1><p><strong>传统的web应用允许用户向web服务器发送一个请求。服务器接收并处理，然后返回一个新的网页。</strong> </p><p><strong>这个做法浪费了许多带宽，因为在前后两个页面中的大部分HTML代码往往是相同的。</strong></p><p><strong>AJAX应用可以仅向服务器发送并取回必需的数据，并在客户端采用JavaScript处理来自服务器的响应</strong> </p><p><strong>因为在服务器和浏览器之间交换的数据大量减少（大约只有原来的5%），结果我们就能看到响应更快的应用。同时很多的处理工作可以在发出请求的客户端机器上完成，所以Web服务器的处理时间也减少了。</strong> </p><p><strong>Ajax在本质上是一个浏览器端的技术</strong> </p><p><strong>Ajax技术之主要目的在于局部交换客户端及服务器间之数据</strong> </p><p><strong>能够不用重新载入整个版面来更新资料，也就是所谓的Refresh without Reload(轻刷新)</strong></p><p><strong>与服务器之间的沟通，完全是透过Javascript 来实行</strong> </p><p><strong>本身传送的资料量很小，反应更快，让网络程序更像一个桌面应用程序</strong> </p><p><strong>AJAX 就是运用Javascript 在后台悄悄帮你去跟服务器要资料，最后再由Javascript 或DOM 来帮你呈现结果，因为所有动作都是由Javascript 代劳，所以省去了网页重载的麻烦，使用者也感受不到等待的痛苦</strong></p><h2 id="XMLHttpRequest对象"><a href="#XMLHttpRequest对象" class="headerlink" title="XMLHttpRequest对象"></a><font color="red">XMLHttpRequest对象</font></h2><blockquote><p><strong>XMLHttpRequest对象是Ajax应用程序的中心。</strong><br><strong>在IE浏览器和非IE浏览器中创建的方法不同。</strong><br><strong>XMLHttpRequest对象允许用javascript通过HTTP连接到服务器，而不是通过HTTP请求响应模型与服务器通信。</strong><br><strong>简而言之：它可以异步从服务器端获取txt或者xml数据</strong></p></blockquote><h2 id="创建XMLHttpRequest对象"><a href="#创建XMLHttpRequest对象" class="headerlink" title="创建XMLHttpRequest对象"></a>创建XMLHttpRequest对象</h2><p><strong>一、先来创建XMLHttpRequest对象</strong></p><p><strong>在IE、Firefox、safari和Opera中创建该对象的JavaScript代码为：</strong><br>    <strong>var xhr = new XMLHttpRequest();</strong><br><strong>在IE5/6中代码为：</strong><br>    <strong>var xmlRequest = new ActiveXObject(“Microsoft.XMLHTTP”);</strong><br>        <strong>注意，JavaScript区分大小写。</strong></p><p><strong>二、为XMLHttpRequest对象设置请求参数</strong><br><strong>open(method, url, async, username, password)</strong></p><p><strong>1.设置参数：xhr.open(“GET”, “index.jsp”, true);</strong><br><strong>2.POST方式：xhr.open(“POST”, “index.jsp”, true);</strong><br><strong>三、发送请求：(分别对应GET和POST)</strong><br><strong>xhr.send(null);//GET方式不能传值，用null</strong><br><strong>xhr.send(“a=1&amp;b=123”);//POST方式可传值</strong></p><h2 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a>回调函数</h2><blockquote><p><strong>请求发出去之后会有响应，如何处理呢？</strong><br><strong>XMLHttpRequest对象有个onreadystatechange事件，当状态发生变化时就会触发</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.编写回调函数</span><br><span class="line"><span class="function">function <span class="title">hehe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">               <span class="keyword">var</span> msg = xhr.responseText; <span class="comment">//服务器返回的字符串</span></span><br><span class="line">           &#125; <span class="keyword">else</span> alert(<span class="string">"服务器错误!"</span> + xhr.status);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2</span>.在xhr.send之前添加设置回调函数代码：</span><br><span class="line">xhr.onreadystatechange = hehe;</span><br></pre></td></tr></table></figure><h1 id="status属性"><a href="#status属性" class="headerlink" title="status属性"></a><font color="red">status属性</font></h1><p>服务器发送的每一个响应也都带有首部信息。三位数的状态码是服务器发送的响应中最重要的首部信息，并且属于超文本传输协议中的一部分。<br>常用状态码及其含义：<br><strong>404 没找到页面(not found)</strong><br><strong>403 禁止访问(forbidden)</strong><br><strong>500 内部服务器出错(internal service error)</strong><br><strong>200 一切正常(ok)</strong><br><strong>304 没有被修改(not modified)</strong><br>在 XMLHttpRequest 对象中，服务器发送的状态码都保存在 status 属性里。通过把这个值和 200 或 304 比较，可以确保服务器是否已发送了一个成功的响应</p><h1 id="readyState属性"><a href="#readyState属性" class="headerlink" title="readyState属性"></a><font color="red">readyState属性</font></h1><blockquote><p><strong>readyState属性指出了XMLHttpRequest对象在发送/接收数据过程中所处的几个状态。XMLHttpRequest对象会经历5种不同的状态。</strong><br><strong>0：未初始化。对象已经创建，但还未初始化，即还没调用open方法；</strong><br><strong>1：已打开。对象已经创建并初始化，但还未调用send方法；</strong><br><strong>2：已发送。已经调用send 方法，但该对象正在等待状态码和头的返回；</strong><br><strong>3：正在接收。已经接收了部分数据，但还不能使用该对象的属性和方法，因为状态和响应头不完整；</strong><br><strong>4：已加载。所有数据接收完毕</strong></p></blockquote><h1 id="responseText属性"><a href="#responseText属性" class="headerlink" title="responseText属性"></a><font color="red">responseText属性</font></h1><p><strong>XMLHttpRequest 的 responseText 属性包含了从服务器得到的数据。它是一个HTML,XML或普通文本，这取决于服务器发送的内容。</strong><br><strong><font color="red">当 readyState 属性值变成 4 时, responseText 属性才可用，表明 Ajax 请求已经结束。</font></strong></p><h1 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line"> &lt;% String path = request.getContextPath(); %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">服务器时间：&lt;span id ="dt"&gt;&lt;/span&gt;</span><br><span class="line">&lt;br/&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"刷新时间"</span> onclick=<span class="string">"shua();"</span>/&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">shua</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//异步对象,可以发送异步请求，可以接收服务器响应。</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   obj.readyState:准备状态：1，2，3，4</span></span><br><span class="line"><span class="comment">   obj.status:服务器响应状态码：(404/403/500/200/304)</span></span><br><span class="line"><span class="comment">   obj.responseText:服务器给我们的响应文本</span></span><br><span class="line"><span class="comment">   obj.onreadystatechange事件:radyState发生改变时触发</span></span><br><span class="line"><span class="comment">   </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">obj.onreadystatechange = function()&#123;</span><br><span class="line">   <span class="keyword">var</span> isLast = (obj.readyState==<span class="number">4</span>);<span class="comment">//已经加载完毕</span></span><br><span class="line">   <span class="keyword">var</span> isSuccess = (obj.status==<span class="number">200</span>||obj.status==<span class="number">304</span>);<span class="comment">//服务器响应成功(本次请求成功)</span></span><br><span class="line">   <span class="keyword">if</span>(isLast &amp;&amp; isSuccess)&#123;</span><br><span class="line">   <span class="keyword">var</span> data = obj.responseText;<span class="comment">//获取服务器响应文本</span></span><br><span class="line">   <span class="keyword">var</span> el = document.getElementById(<span class="string">"dt"</span>);</span><br><span class="line">   el.innerHTML = data;</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//要去哪里访问</span></span><br><span class="line">   obj.open(<span class="string">"get"</span>,<span class="string">"&lt;%=path%&gt;/date.jsp"</span>);</span><br><span class="line">   <span class="comment">//去，参数会传递到服务器</span></span><br><span class="line">   obj.send(<span class="keyword">null</span>);</span><br><span class="line">   setTimeout(<span class="string">"shua()"</span>,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="data-jsp"><a href="#data-jsp" class="headerlink" title="data.jsp"></a>data.jsp</h1><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"java.util.Date"</span>%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">    &lt;% out.print(<span class="keyword">new</span> Date()); %&gt;</span><br></pre></td></tr></table></figure><p># </p><h1 id="hasName-java"><a href="#hasName-java" class="headerlink" title="hasName.java"></a>hasName.java</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class hasName</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/hasName"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">hasName</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">hasName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">String name = request.getParameter(<span class="string">"un"</span>);</span><br><span class="line">System.out.println(<span class="string">"准备检测用户名："</span>+name);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"admin"</span>.equals(name))&#123;</span><br><span class="line"><span class="comment">//存在</span></span><br><span class="line">response.getWriter().print(<span class="string">"1"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">response.getWriter().print(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="register-jsp"><a href="#register-jsp" class="headerlink" title="register.jsp"></a>register.jsp</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line"> &lt;% String path = request.getContextPath();</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">用户名：&lt;input type=<span class="string">"text"</span> id=<span class="string">"yhm"</span>/&gt;</span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"检测用户名是否存在"</span>  onclick=<span class="string">"jiance();"</span>/&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">jiance</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//异步对象,可以发送异步请求，可以接收服务器响应。</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   obj.readyState:准备状态：1，2，3，4</span></span><br><span class="line"><span class="comment">   obj.status:服务器响应状态码：(404/403/500/200/304)</span></span><br><span class="line"><span class="comment">   obj.responseText:服务器给我们的响应文本</span></span><br><span class="line"><span class="comment">   obj.onreadystatechange事件:radyState发生改变时触发</span></span><br><span class="line"><span class="comment">   </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">obj.onreadystatechange = function()&#123;</span><br><span class="line">   <span class="keyword">var</span> isLast = (obj.readyState==<span class="number">4</span>);<span class="comment">//已经加载完毕</span></span><br><span class="line">   <span class="keyword">var</span> isSuccess = (obj.status==<span class="number">200</span>||obj.status==<span class="number">304</span>);<span class="comment">//服务器响应成功(本次请求成功)</span></span><br><span class="line">   <span class="keyword">if</span>(isLast &amp;&amp; isSuccess)&#123;</span><br><span class="line">   <span class="keyword">var</span> data = obj.responseText;<span class="comment">//获取服务器响应文本</span></span><br><span class="line">     alert(data);</span><br><span class="line">   &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">var</span> val = document.getElementById(<span class="string">"yhm"</span>).value;</span><br><span class="line">   <span class="comment">//要去哪里访问</span></span><br><span class="line">   obj.open(<span class="string">"post"</span>,<span class="string">"&lt;%=path%&gt;/hasName"</span>);</span><br><span class="line">   obj.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">   <span class="comment">//去，参数会传递到服务器</span></span><br><span class="line">   obj.send(<span class="string">"un="</span>+val);</span><br><span class="line">   <span class="comment">//setTimeout("shua()",1000);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="自定义AJAX工具类"><a href="#自定义AJAX工具类" class="headerlink" title="自定义AJAX工具类"></a>自定义AJAX工具类</h1><h2 id="MyAjax-jsp"><a href="#MyAjax-jsp" class="headerlink" title="MyAjax.jsp"></a>MyAjax.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">    &lt;% String path = request.getContextPath(); %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;script type="text/javascript" src="&lt;%=path%&gt;/js/ajax.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line">ajaxGet(<span class="string">"&lt;%=path%&gt;/hasName"</span>,<span class="string">"un=admi"</span>,function(er)&#123;alert(er);&#125;,function(em)&#123;alert(em);&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="新建js文件夹，里面新建ajax-js"><a href="#新建js文件夹，里面新建ajax-js" class="headerlink" title="新建js文件夹，里面新建ajax.js"></a>新建js文件夹，里面新建ajax.js</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"hello"</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajaxGet</span>(<span class="params">url,param,callSuc,callErr</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">obj.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> isLast = (obj.readyState==<span class="number">4</span>);</span><br><span class="line"><span class="keyword">var</span> isSuccess = (obj.status==<span class="number">200</span>||obj.status==<span class="number">304</span>);</span><br><span class="line"><span class="keyword">if</span>(isLast)&#123;</span><br><span class="line"><span class="keyword">if</span>(isSuccess)&#123;</span><br><span class="line"><span class="keyword">var</span> result = obj.responseText;</span><br><span class="line"><span class="keyword">if</span>(callSuc) </span><br><span class="line">callSuc(result);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(callErr) callErr(obj.status);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.open(<span class="string">"get"</span>,url+<span class="string">"?"</span>+param);</span><br><span class="line">obj.send(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;AJAX&quot;&gt;&lt;a href=&quot;#AJAX&quot; class=&quot;headerlink&quot; title=&quot;AJAX&quot;&gt;&lt;/a&gt;AJAX&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;AJAX:”Asynchronous JavaScript and XML”&lt;/s
      
    
    </summary>
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/categories/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="JAVA个人笔记" scheme="https://133608520.github.io/tags/JAVA%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>周末复习</title>
    <link href="https://133608520.github.io/2019/08/11/26/"/>
    <id>https://133608520.github.io/2019/08/11/26/</id>
    <published>2019-08-11T01:25:36.000Z</published>
    <updated>2019-08-11T23:04:21.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSP复习"><a href="#JSP复习" class="headerlink" title="JSP复习"></a>JSP复习</h1><h2 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"demo.user.User"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"java.util.List"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"demo.factory.DaoFactory"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"dao.Dao"</span>%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">#customers</span><br><span class="line">  &#123;</span><br><span class="line">  font-family:<span class="string">"Trebuchet MS"</span>, Arial, Helvetica, sans-serif;</span><br><span class="line">  width:<span class="number">100</span>%;</span><br><span class="line">  border-collapse:collapse;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">#customers td, #customers th </span><br><span class="line">  &#123;</span><br><span class="line">  font-size:<span class="number">1</span>em;</span><br><span class="line">  border:1px solid #98bf21;</span><br><span class="line">  padding:<span class="number">3</span>px <span class="number">7</span>px <span class="number">2</span>px <span class="number">7</span>px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">#customers th </span><br><span class="line">  &#123;</span><br><span class="line">  font-size:<span class="number">1.1</span>em;</span><br><span class="line">  text-align:left;</span><br><span class="line">  padding-top:<span class="number">5</span>px;</span><br><span class="line">  padding-bottom:<span class="number">4</span>px;</span><br><span class="line">  background-color:#A7C942;</span><br><span class="line">  color:#ffffff;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table id=<span class="string">"customers"</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">&lt;th&gt;NAME&lt;/th&gt;</span><br><span class="line">&lt;th&gt;PASS&lt;/th&gt;</span><br><span class="line">&lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;% </span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">Dao dao = DaoFactory.getDao();</span><br><span class="line">List&lt;User&gt;list = dao.findAll();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">User us = list.get(i);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getId()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getName()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getPass()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;a href="&lt;%=path%&gt;/readychange.jsp?id=&lt;%=us.getId()%&gt;"&gt;&lt;button&gt;修改&lt;/button&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;button onclick ="shanchu(&lt;%=us.getId()%&gt;);"&gt;删除&lt;/button&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">shanchu</span><span class="params">(uid)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(window.confirm(<span class="string">"确定要删除吗？"</span>))</span><br><span class="line">&#123;</span><br><span class="line">window.location.href=<span class="string">"&lt;%=path%&gt;/del.jsp?xx="</span>+uid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="change-jsp"><a href="#change-jsp" class="headerlink" title="change.jsp"></a>change.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"demo.user.User"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"dao.Dao"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"demo.factory.DaoFactory"</span>%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String st = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line"><span class="keyword">int</span> id = Integer.parseInt(st);</span><br><span class="line">String name = request.getParameter(<span class="string">"name"</span>);</span><br><span class="line">String pass = request.getParameter(<span class="string">"password"</span>);</span><br><span class="line">Dao dao = DaoFactory.getDao();</span><br><span class="line">User us= <span class="keyword">new</span> User();</span><br><span class="line">us.setId(id);</span><br><span class="line">us.setName(name);</span><br><span class="line">us.setPass(pass);</span><br><span class="line">dao.update(us);</span><br><span class="line">response.sendRedirect(path+<span class="string">"/index.jsp"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="readychange-jsp"><a href="#readychange-jsp" class="headerlink" title="readychange.jsp"></a>readychange.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"demo.factory.DaoFactory"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"dao.Dao"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"demo.user.User"</span>%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String st = request.getParameter(<span class="string">"id"</span>);</span><br><span class="line"><span class="keyword">int</span> id = Integer.parseInt(st);</span><br><span class="line">Dao dao = DaoFactory.getDao();</span><br><span class="line">User us= dao.findById(id);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;form action =<span class="string">"&lt;%=path%&gt;/change.jsp"</span> method = <span class="string">"post"</span>&gt; </span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"id"</span> value=<span class="string">"&lt;%=us.getId()%&gt;"</span> readonly=<span class="string">"readonly"</span>/&gt;</span><br><span class="line">&lt;input type = <span class="string">"text"</span> name =<span class="string">"name"</span> value=<span class="string">"&lt;%=us.getName() %&gt;"</span>/&gt;</span><br><span class="line">&lt;input type =<span class="string">"text"</span> name = <span class="string">"password"</span> value =<span class="string">"&lt;%=us.getPass()%&gt;"</span>/&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> value=<span class="string">"确认修改"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="del-jsp"><a href="#del-jsp" class="headerlink" title="del.jsp"></a>del.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"demo.factory.DaoFactory"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"dao.Dao"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@gupage</span> language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String st = request.getParameter(<span class="string">"xx"</span>);</span><br><span class="line"><span class="keyword">int</span> id = Integer.parseInt(st);</span><br><span class="line">Dao dao = DaoFactory.getDao();;</span><br><span class="line">dao.delete(id);</span><br><span class="line">response.sendRedirect(path+<span class="string">"/index.jsp"</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="重点总结："><a href="#重点总结：" class="headerlink" title="重点总结："></a>重点总结：</h1><ul><li><strong>需要导入jar包的时候，把用到的包都导入到lib下，不用再buid path</strong></li><li><strong>一个页面传参到另一个页面</strong><ul><li><strong>可以通过form</strong></li><li><strong>可以通过session</strong></li><li><strong>可以通过get方式的<u>问号传值</u></strong></li></ul></li><li><strong>一个页面接收参数的时候</strong><ul><li><strong>String st = request.getParameter(“xx”);</strong><ul><li><strong>注意返回值类型时String</strong></li></ul></li></ul></li><li><strong>过滤器启动异常</strong><ul><li><strong>有可能时jdk版本不同造成的</strong></li></ul></li><li><strong>window.confitm(“弹出的文字”)</strong><ul><li><strong>返回一个boolean型</strong></li><li><strong>一般和if一起用，如果点击确定，则执行if语句</strong></li></ul></li><li><strong>window.location.href=” “</strong><ul><li><strong>把当前页面强制跳转到指定地址页面</strong></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JSP复习&quot;&gt;&lt;a href=&quot;#JSP复习&quot; class=&quot;headerlink&quot; title=&quot;JSP复习&quot;&gt;&lt;/a&gt;JSP复习&lt;/h1&gt;&lt;h2 id=&quot;index-jsp&quot;&gt;&lt;a href=&quot;#index-jsp&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="周末复习" scheme="https://133608520.github.io/categories/%E5%91%A8%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/%E5%91%A8%E6%9C%AB%E5%A4%8D%E4%B9%A0/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
      <category term="周末复习" scheme="https://133608520.github.io/tags/%E5%91%A8%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Filter</title>
    <link href="https://133608520.github.io/2019/08/10/25/"/>
    <id>https://133608520.github.io/2019/08/10/25/</id>
    <published>2019-08-10T02:56:43.000Z</published>
    <updated>2019-08-11T08:51:13.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h1><p>Debug了一天，直接码吧。</p><h2 id="MyFilter-java"><a href="#MyFilter-java" class="headerlink" title="MyFilter.java"></a>MyFilter.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet Filter implementation class MyFilter</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/index.jsp"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Default constructor. </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#destroy()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"销毁"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#doFilter(ServletRequest, ServletResponse, FilterChain)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="comment">// place your code here</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// pass the request along the filter chain</span></span><br><span class="line">System.out.println(<span class="string">"成功过滤"</span>);</span><br><span class="line">chain.doFilter(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#init(FilterConfig)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a><font color="red">web.xml</font></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>FilterTest<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>demo.MyFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%System.out.println(<span class="string">"INDEX"</span>); %&gt;</span><br><span class="line">首页</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="BUG"><a href="#BUG" class="headerlink" title="BUG"></a><font color="red">BUG</font></h1><p><font color="red" size="7"><strong>血的教训！！！</strong></font></p><p><strong>在xml里配置都正确的前提下，关于启动Tomcat出现过滤器异常的error时，该怎样解决？</strong></p><p><font color="slate" size="6"><strong><u>解决方法</u>：项目右键-&gt;properties-&gt;Java Build Path看order and export选项，内容全部打钩，然后点击apply and close（或apply），<u>重新部署</u>启动项目。 （在Libraries选项中可以查看相关jar包是否完整正确）</strong></font></p><ul><li><strong><font color="slate" size="6">如果还是不行，则看看lib里面有没有东西，试着把过滤器复制到lib里面</font></strong></li><li><font color="purple"><strong>还有可能时jdk版本不一致导致的问题：</strong></font></li><li><font color="blue"><strong>1、先设置好jdk,需要确定 项目,eclipse/myeclipse,系统 用的是同一个版本的JDK,例如系统中安装的JDK是1.7,所以把eclipse的jdk成1.7。</strong></font></li><li><font color="blue"><strong>2、进入 windows—proferences—java–compiler设置编译出来的文件使用的格式是 1.7版本的 (设置成多少都行,只要兼容,并且与你项目的编译版本一直就可以,我这里统一设置成1.7)</strong>。</font></li><li><font color="blue"><strong>3、进入项目–properties—java Compiler 把项目编译版本也设置成 1.7 。</strong></font></li><li><font color="blue"><strong>4、进入项目–properties—Myeclipse—project Facets设置java文件的版本为 1.7，并打勾。</strong></font></li></ul><p><strong>从以上可以知道如何重新部署一个项目</strong></p><h1 id="Filter案例-全站字符编码过滤器"><a href="#Filter案例-全站字符编码过滤器" class="headerlink" title="Filter案例-全站字符编码过滤器"></a>Filter案例-全站字符编码过滤器</h1><h2 id="HelloYou-java"><a href="#HelloYou-java" class="headerlink" title="HelloYou.java"></a>HelloYou.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet Filter implementation class HelloYou</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter</span>(<span class="string">"/HelloYou"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloYou</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Default constructor. </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloYou</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#destroy()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"销毁"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#doFilter(ServletRequest, ServletResponse, FilterChain)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"><span class="comment">// place your code here</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// pass the request along the filter chain</span></span><br><span class="line"></span><br><span class="line">HttpServletRequest rq = (HttpServletRequest)request;</span><br><span class="line">HttpServletResponse rp = (HttpServletResponse) response;</span><br><span class="line">rq.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">rp.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">rp.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">System.out.println(<span class="string">"经过过滤"</span>);</span><br><span class="line"><span class="comment">//放行</span></span><br><span class="line">chain.doFilter(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> Filter#init(FilterConfig)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"初始化"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="web-xml-1"><a href="#web-xml-1" class="headerlink" title="web.xml"></a>web.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Hello<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HelloN<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>demo.HelloYou<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>HelloN<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="重点总结："><a href="#重点总结：" class="headerlink" title="重点总结："></a>重点总结：</h1><ul><li><strong>放行：</strong><ul><li><strong>doFilter(request,response);</strong></li></ul></li><li><strong>使用request，response时候向下转型</strong></li><li><strong>xml里面配置的时需要启动过滤器的条件路径，没在路径里面的页面默认不会启动过滤器</strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Filter&quot;&gt;&lt;a href=&quot;#Filter&quot; class=&quot;headerlink&quot; title=&quot;Filter&quot;&gt;&lt;/a&gt;Filter&lt;/h1&gt;&lt;p&gt;Debug了一天，直接码吧。&lt;/p&gt;
&lt;h2 id=&quot;MyFilter-java&quot;&gt;&lt;a href=&quot;#My
      
    
    </summary>
    
      <category term="Filter学习" scheme="https://133608520.github.io/categories/Filter%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Filter学习" scheme="https://133608520.github.io/tags/Filter%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>JSP检测</title>
    <link href="https://133608520.github.io/2019/08/08/24/"/>
    <id>https://133608520.github.io/2019/08/08/24/</id>
    <published>2019-08-08T03:01:10.000Z</published>
    <updated>2019-08-08T03:46:10.090Z</updated>
    
    <content type="html"><![CDATA[<ul><li>主页面显示数据库里面的信息（通过表格表示）</li><li>主页面的表单的最后一列，有修改和删除两个按钮</li><li>点击修改按钮 弹出 确认修改吗？如果确认则跳转到readyChange.jsp页面</li><li>readyChange.jsp页面里得到修改记录的信息，</li><li>readyChange.jsp里面有确认修改按钮.点击确认修改按钮后跳转到Change.jsp</li><li>Change.jsp页面，首先更新页面里面的内容，然后重定向到首页。</li><li>如果点击删除按钮，则弹出一个确认删除的按钮，跳转到del.jsp。</li><li>del.jsp里面具体实现删除功能，删除后重定向到首页。</li></ul><h1 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"user.User"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"factory.DaoFactory"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"dao.Dao"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"java.util.ArrayList"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"java.util.List"</span>%&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">#customers</span><br><span class="line">  &#123;</span><br><span class="line">  font-family:<span class="string">"Trebuchet MS"</span>, Arial, Helvetica, sans-serif;</span><br><span class="line">  width:<span class="number">100</span>%;</span><br><span class="line">  border-collapse:collapse;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">#customers td, #customers th </span><br><span class="line">  &#123;</span><br><span class="line">  font-size:<span class="number">1</span>em;</span><br><span class="line">  border:1px solid #98bf21;</span><br><span class="line">  padding:<span class="number">3</span>px <span class="number">7</span>px <span class="number">2</span>px <span class="number">7</span>px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">#customers th </span><br><span class="line">  &#123;</span><br><span class="line">  font-size:<span class="number">1.1</span>em;</span><br><span class="line">  text-align:left;</span><br><span class="line">  padding-top:<span class="number">5</span>px;</span><br><span class="line">  padding-bottom:<span class="number">4</span>px;</span><br><span class="line">  background-color:#A7C942;</span><br><span class="line">  color:#ffffff;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;table id=<span class="string">"customers"</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">&lt;th&gt;NAME&lt;/th&gt;</span><br><span class="line">&lt;th&gt;PASS&lt;/th&gt;</span><br><span class="line">&lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;% </span><br><span class="line">Dao dao = DaoFactory.getDao();</span><br><span class="line">List&lt;User&gt; list = dao.findAll();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">User us = list.get(i);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getId()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getName()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getPass()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;a href="&lt;%=path%&gt;/readyChange.jsp?uid=&lt;%=us.getId() %&gt;"&gt;&lt;button&gt;修改&lt;/button&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;button onclick ="del(&lt;%=us.getId()%&gt;)"&gt;删除&lt;/button&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">&lt;% </span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">del</span><span class="params">(uid)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(window.confirm(<span class="string">"确定要删除吗？"</span>))&#123;</span><br><span class="line">window.location.href=<span class="string">"&lt;%=path%&gt;/del.jsp?xx="</span>+uid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="readyChange-jsp"><a href="#readyChange-jsp" class="headerlink" title="readyChange.jsp"></a>readyChange.jsp</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"factory.DaoFactory"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"dao.Dao"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"user.User"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">  String uidstr = request.getParameter(<span class="string">"uid"</span>);</span><br><span class="line">  <span class="keyword">int</span> usrId = Integer.parseInt(uidstr);</span><br><span class="line">  Dao dao = DaoFactory.getDao();</span><br><span class="line">  User us = dao.findUser(usrId);</span><br><span class="line">%&gt;</span><br><span class="line">修改用户信息&lt;br/&gt;</span><br><span class="line">&lt;form action=<span class="string">"&lt;%=path%&gt;/Change.jsp"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">ID:&lt;input type=<span class="string">"text"</span> readonly=<span class="string">"readonly"</span> name=<span class="string">"uid"</span>  value = <span class="string">"&lt;%=us.getId()%&gt;"</span> /&gt;&lt;br/&gt;</span><br><span class="line">Name:&lt;input type=<span class="string">"text"</span> name=<span class="string">"uname"</span> value=<span class="string">"&lt;%=us.getName() %&gt;"</span>/&gt;&lt;br/&gt;</span><br><span class="line">Pass:&lt;input type=<span class="string">"text"</span> name =<span class="string">"upass"</span> value =<span class="string">"&lt;%=us.getPass() %&gt;"</span>/&gt;&lt;br/&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> value=<span class="string">"确认修改"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="Change-jsp"><a href="#Change-jsp" class="headerlink" title="Change.jsp"></a>Change.jsp</h1><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"user.User"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"factory.DaoFactory"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"dao.Dao"</span>%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;%</span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String uidstr = request.getParameter(<span class="string">"uid"</span>);</span><br><span class="line"><span class="keyword">int</span> usrId = Integer.parseInt(uidstr);</span><br><span class="line">Dao dao = DaoFactory.getDao();</span><br><span class="line">String name = request.getParameter(<span class="string">"uname"</span>);</span><br><span class="line">String pass = request.getParameter(<span class="string">"upass"</span>);</span><br><span class="line">User uss = <span class="keyword">new</span> User();</span><br><span class="line">uss.setId(usrId);</span><br><span class="line">uss.setName(name);</span><br><span class="line">uss.setPass(pass);</span><br><span class="line">dao.updateUser(uss);</span><br><span class="line">response.sendRedirect(path+<span class="string">"/index.jsp"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h1 id="del-jsp"><a href="#del-jsp" class="headerlink" title="del.jsp"></a>del.jsp</h1><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"user.User"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"factory.DaoFactory"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"dao.Dao"</span>%&gt;</span><br><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//删除页面,删除后重定向到主页</span></span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String sid = request.getParameter(<span class="string">"xx"</span>);</span><br><span class="line"><span class="keyword">int</span> id = Integer.parseInt(sid);</span><br><span class="line">Dao dao = DaoFactory.getDao();</span><br><span class="line">dao.delete(id);</span><br><span class="line">response.sendRedirect(path+<span class="string">"/index.jsp"</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h1 id="疑难总结："><a href="#疑难总结：" class="headerlink" title="疑难总结："></a>疑难总结：</h1><ul><li><p><strong>记得导入包，导包格式</strong></p><ul><li><strong>&lt;%@page import = “”%&gt;</strong></li></ul></li><li><p><strong>要清楚内置对象</strong></p></li><li><p><strong>&lt;%= %&gt;</strong></p></li><li><p><strong>&lt;% %&gt;</strong></p></li><li><p><strong>&lt;%! %&gt;</strong></p></li><li><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%=path%&gt;/readyChange.jsp?uid=&lt;%=us.getId() %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>a标签转页面的时候传参要用get传参方式。？uid=</strong></p></li><li><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;% </span><br><span class="line">Dao dao = DaoFactory.getDao();</span><br><span class="line">List&lt;User&gt; list = dao.findAll();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">User us = list.get(i);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getId()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getName()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;%=us.getPass()%&gt;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;a href="&lt;%=path%&gt;/readyChange.jsp?uid=&lt;%=us.getId() %&gt;"&gt;&lt;button&gt;修改&lt;/button&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;button onclick ="del(&lt;%=us.getId()%&gt;)"&gt;删除&lt;/button&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">&lt;% </span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>可以动态拼接，如上</strong></p></li><li><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="function">function <span class="title">del</span><span class="params">(uid)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(window.confirm(<span class="string">"确定要删除吗？"</span>))&#123;</span><br><span class="line">window.location.href=<span class="string">"&lt;%=path%&gt;/del.jsp?xx="</span>+uid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>window.confirm(“内容”) 具有然会值，点击确定按钮返回true</strong></p></li><li><p><strong>window.location.href=””强制跳转页面。     把当前页面强制跳转到目标页面</strong></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;主页面显示数据库里面的信息（通过表格表示）&lt;/li&gt;
&lt;li&gt;主页面的表单的最后一列，有修改和删除两个按钮&lt;/li&gt;
&lt;li&gt;点击修改按钮 弹出 确认修改吗？如果确认则跳转到readyChange.jsp页面&lt;/li&gt;
&lt;li&gt;readyChange.jsp页面
      
    
    </summary>
    
      <category term="JSP检测" scheme="https://133608520.github.io/categories/JSP%E6%A3%80%E6%B5%8B/"/>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/JSP%E6%A3%80%E6%B5%8B/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JSP检测" scheme="https://133608520.github.io/tags/JSP%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>JSP学习</title>
    <link href="https://133608520.github.io/2019/08/07/23/"/>
    <id>https://133608520.github.io/2019/08/07/23/</id>
    <published>2019-08-07T09:04:22.000Z</published>
    <updated>2019-08-07T09:21:34.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSP运行原理"><a href="#JSP运行原理" class="headerlink" title="JSP运行原理"></a>JSP运行原理</h1><blockquote><p><strong>当JSP页面第一次被请求执行时，Tomcat将启动一个线程将.jsp文件转换成.java文件，再将.java文件转换成.class文件，然后执行.class文件响应客户请求。</strong><br><strong>当该JSP页面再次被执行时，将直接执行字节码文件。</strong><br><strong>JSP标记、Java程序片、表达式等由Tomcat计算并将结果转化为字符串交由浏览器显示。</strong></p></blockquote><h1 id="JSP常用指令"><a href="#JSP常用指令" class="headerlink" title="JSP常用指令"></a>JSP常用指令</h1><p><strong>格式： &lt;%@ 指令 属性名=”值” %&gt;</strong><br><strong>1.设置页面显示的字符集：</strong><br><strong>&lt;%@ page contentType=”text/html;charset=UTF-8”%&gt;</strong><br><strong>2.在jsp中引入java包：</strong><br><strong>&lt;%@ page import=”java.util.Date”%&gt;</strong><br><strong>3.引入其他页面文件：</strong><br><strong>&lt;%@ include file=“/head.jsp”%&gt;</strong></p><p><strong>include指令用于引入其它JSP页面，如果使用include指令引入了其它JSP页面，那么JSP引擎将把这两个JSP翻译成一个servlet。所以include指令引入通常也称之为静态引入,其中的file属性用于指定被引入文件的路径。路径以“/”开头，表示代表当前web应用.</strong></p><h1 id="Java程序片"><a href="#Java程序片" class="headerlink" title="Java程序片"></a>Java程序片</h1><blockquote><p><strong>在 &lt;%    %&gt; 之间写Java程序片。</strong><br><strong>一个JSP页面可以有多个JAVA程序片，这些程序片被JSP引擎顺序执行。</strong><br><strong>语法格式如下：</strong><br>        <strong>&lt;% JAVA程序片 %&gt;</strong></p></blockquote><h1 id="页面局部变量"><a href="#页面局部变量" class="headerlink" title="页面局部变量"></a>页面局部变量</h1><blockquote><p><strong>在程序片中声明的变量称为页面局部变量。</strong><br><strong>页面局部变量在该页面中后续的所有程序片及表达式部分有效。</strong><br><strong>当多个客户请求一个JSP页面时，一个客户的局部变量和另一个客户的局部变量会被分配不同的内存空间。</strong><br><strong>因此，一个客户对页面局部变量的操作结果不影响其它客户的这个局部变量。</strong></p></blockquote><h1 id="成员变量与成员方法"><a href="#成员变量与成员方法" class="headerlink" title="成员变量与成员方法"></a>成员变量与成员方法</h1><blockquote><p><strong>在标记符 &lt;%!    %&gt; 内声明成员变量与成员方法。</strong><br><strong>成员变量在整个JSP页面内有效。</strong><br><strong>当多个用户请求同一个JSP页面时，用户共享成员变量。因此每一个用户对成员变量的改动都会影响其它用户。</strong></p><p><strong>&lt;%!    %&gt;标记中还可以定义方法</strong></p></blockquote><h1 id="成员变量与局部变量"><a href="#成员变量与局部变量" class="headerlink" title="成员变量与局部变量"></a>成员变量与局部变量</h1><blockquote><p><strong>变量的共享性：</strong><br>    <strong>成员变量：所有用户共享变量；</strong><br>    <strong>页面局部变量：用户间没有联系。</strong><br><strong>变量的初始化：</strong><br>    <strong>页面被激活后，成员变量只被初始化一次；</strong><br>    <strong>页面被激活后，每次有用户调用，页面局部变量都被初始化。</strong></p></blockquote><h1 id="JSP表达式"><a href="#JSP表达式" class="headerlink" title="JSP表达式"></a>JSP表达式</h1><blockquote><p><strong>在页面上输出信息，语法格式如下：</strong><br>            <strong>&lt;%= 表达式 %&gt;</strong></p><p><strong>表达式的值由服务器计算，并将计算结果以字符串的形式发送到客户端显示。</strong></p></blockquote><h1 id="Java程序片组合"><a href="#Java程序片组合" class="headerlink" title="Java程序片组合"></a>Java程序片组合</h1><p><strong>可以将Java程序片分成几个小的程序片，以便插入JSP标记或HTML标记，如：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">&lt;%for (int i=1;i&lt;=7;i++)&#123;%&gt;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">FONT</span> <span class="attr">SIZE</span>=<span class="string">"&lt;%=i%&gt;"</span>&gt;</span>大家好！<span class="tag">&lt;/<span class="name">FONT</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span>&#125;%&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="JSP页面注释"><a href="#JSP页面注释" class="headerlink" title="JSP页面注释"></a>JSP页面注释</h1><blockquote><p>（<strong>1）</strong>HTML注释：**<br>            <strong><!--  注释内容  --></strong><br><strong>（2）JSP注释：</strong><br>            <strong>&lt;%–  注释内容  –%&gt;</strong><br><strong>（3）Java程序片注释：</strong><br>            <strong>&lt;%      //单行注释</strong><br>                <strong>/ *多行注释 */</strong><br>             <strong>%&gt;</strong></p></blockquote><h1 id="引入其他页面"><a href="#引入其他页面" class="headerlink" title="引入其他页面"></a>引入其他页面</h1><blockquote><p><strong>这两种方式都可以引入其他页面：</strong><br><strong>&lt;%@ include file=“/head.jsp”%&gt;是一个指令元素</strong><br><strong>父页面和包含进来的页面，代码合并后，才一起翻译成servlet，反馈到前台，形成一个HTML页面</strong></p><p><strong>&lt;jsp:include page=“head.jsp” /&gt;是一个行为元素</strong><br><strong>父页面和包含进来的页面单独编译，单独翻译成servlet后，在前台拼成一个HTML页面</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;JSP运行原理&quot;&gt;&lt;a href=&quot;#JSP运行原理&quot; class=&quot;headerlink&quot; title=&quot;JSP运行原理&quot;&gt;&lt;/a&gt;JSP运行原理&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;当JSP页面第一次被请求执行时，Tomcat将启动一个线程
      
    
    </summary>
    
      <category term="JSP学习" scheme="https://133608520.github.io/categories/JSP%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/JSP%E5%AD%A6%E4%B9%A0/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JSP学习" scheme="https://133608520.github.io/tags/JSP%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>阶段性检测-1</title>
    <link href="https://133608520.github.io/2019/08/06/22/"/>
    <id>https://133608520.github.io/2019/08/06/22/</id>
    <published>2019-08-06T12:05:04.000Z</published>
    <updated>2019-08-07T02:09:55.323Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浏览器乱码问题解决"><a href="#浏览器乱码问题解决" class="headerlink" title="浏览器乱码问题解决"></a>浏览器乱码问题解决</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">"text/html;charset = UTF-8"</span>);</span><br></pre></td></tr></table></figure><h1 id="阶段性检测目标"><a href="#阶段性检测目标" class="headerlink" title="阶段性检测目标"></a>阶段性检测目标</h1><ul><li><strong>建立一个个人中心网页（index.jsp）</strong></li><li><strong>网站首先检测有无登录（通过Session）</strong></li><li><strong>通过网站填写用户账号和密码</strong></li><li><strong>服务器和数据库进行连接校验是否匹配。</strong><ul><li><strong>如果成功则跳转到成功页面，输出个人账号信息（user，pass）</strong><ul><li><strong>通过请求跳转实现</strong></li></ul></li><li><strong>如果失败则重新跳转到登录页面</strong><ul><li><strong>通过重定向实现</strong></li></ul></li></ul></li><li><strong>其中和数据库的连接通过Dao工厂完成</strong></li></ul><h2 id="Dao-java"><a href="#Dao-java" class="headerlink" title="Dao.java"></a>Dao.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> user.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Dao</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUser</span><span class="params">(String name,String pass)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="User-java"><a href="#User-java" class="headerlink" title="User.java"></a>User.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String pass;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String name, String pass)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.pass = pass;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getPass</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> pass;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPass</span><span class="params">(String pass)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pass = pass;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DaoImpl-java"><a href="#DaoImpl-java" class="headerlink" title="DaoImpl.java"></a>DaoImpl.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> daoimpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dao.Dao;</span><br><span class="line"><span class="keyword">import</span> user.User;</span><br><span class="line"><span class="keyword">import</span> util.JDBCUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaoImpl</span> <span class="keyword">implements</span> <span class="title">Dao</span></span>&#123;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line">    String sql = <span class="string">"select * from UN where use=? and pass =?"</span>;</span><br><span class="line">    ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">findUser</span><span class="params">(String name,String pass)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn = JDBCUtil.getConnection();</span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line">pst.setString(<span class="number">1</span>, name);</span><br><span class="line">pst.setString(<span class="number">2</span>, pass);</span><br><span class="line">rs = pst.executeQuery();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)</span><br><span class="line">&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User();</span><br><span class="line">user.setName(rs.getString(<span class="number">1</span>));</span><br><span class="line">user.setPass(rs.getString(<span class="number">2</span>));</span><br><span class="line"><span class="keyword">return</span> user;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">JDBCUtil.close(conn, pst, rs);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JDBCUtil-java"><a href="#JDBCUtil-java" class="headerlink" title="JDBCUtil.java"></a>JDBCUtil.java</h2><blockquote><p>通过连接池得到连接对象</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyVetoException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">ComboPooledDataSource cd = <span class="keyword">new</span> ComboPooledDataSource();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">cd.setDriverClass(<span class="string">"oracle.jdbc.driver.OracleDriver"</span>);</span><br><span class="line">cd.setJdbcUrl(<span class="string">"jdbc:oracle:thin:@//192.168.0.105/orcl"</span>);</span><br><span class="line">cd.setUser(<span class="string">"liuyanhao"</span>);</span><br><span class="line">cd.setPassword(<span class="string">"abc123"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> cd.getConnection();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block\</span></span><br><span class="line">System.out.println(<span class="string">"获取连接失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection c,Statement st,ResultSet rs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>)</span><br><span class="line">rs.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)</span><br><span class="line">&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(st!=<span class="keyword">null</span>)</span><br><span class="line">st.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)</span><br><span class="line">&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(c!=<span class="keyword">null</span>)</span><br><span class="line">c.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e)</span><br><span class="line">&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="DaoFactory-java"><a href="#DaoFactory-java" class="headerlink" title="DaoFactory.java"></a>DaoFactory.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dao.Dao;</span><br><span class="line"><span class="keyword">import</span> daoimpl.DaoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaoFactory</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Dao <span class="title">getDao</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> DaoImpl();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Index-jsp"><a href="#Index-jsp" class="headerlink" title="Index.jsp"></a>Index.jsp</h2><blockquote><p>这是网站的首页，通过首页提交账号和密码，提交到login</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset = UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">"/Rethink/Login"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">账号：&lt;input type = <span class="string">"text"</span> value =<span class="string">""</span> name = <span class="string">"user"</span>/&gt;&lt;br/&gt;</span><br><span class="line">密码：&lt;input type =<span class="string">"text"</span> value =<span class="string">""</span> name=<span class="string">"pass"</span>/&gt;&lt;br/&gt;</span><br><span class="line">&lt;input type =<span class="string">"submit"</span> value=<span class="string">"登录"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="Login-java"><a href="#Login-java" class="headerlink" title="Login.java"></a>Login.java</h2><blockquote><p>对提交的账号和密码进行审核，通过与数据库连接实现。如果登录成功，首先通过session存取用户个人信息，然后再跳转请求。失败则重定向到登陆页面。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.RequestDispatcher;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> factory.DaoFactory;</span><br><span class="line"><span class="keyword">import</span> user.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class login</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Login"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Login</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">HttpSession hs = request.getSession();</span><br><span class="line">String user = (String)request.getParameter(<span class="string">"user"</span>);</span><br><span class="line">String pass = (String)request.getParameter(<span class="string">"pass"</span>);</span><br><span class="line">System.out.println(user);</span><br><span class="line">System.out.println(pass);</span><br><span class="line"></span><br><span class="line">User u = DaoFactory.getDao().findUser(user, pass);</span><br><span class="line">String url =<span class="string">"/Success"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(u!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">//把user存入session</span></span><br><span class="line">hs.setAttribute(<span class="string">"user"</span>, u);</span><br><span class="line"><span class="comment">//下面开始跳转-&gt;成功页面 ,请求跳转方式</span></span><br><span class="line">RequestDispatcher ds = request.getRequestDispatcher(url);</span><br><span class="line">ds.forward(request, response);</span><br><span class="line"><span class="keyword">return</span> ;                  <span class="comment">//跳转完页面要结束</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//没有在数据库中找到该用户，需要重定向到登陆页面</span></span><br><span class="line">String root = request.getContextPath();</span><br><span class="line">response.sendRedirect(root+<span class="string">"/index.jsp"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Success-java"><a href="#Success-java" class="headerlink" title="Success.java"></a>Success.java</h2><blockquote><p>登录成功后跳转到的页面，会从session里面取出用户的个人信息并进行输出。</p><p>然后可以有一个转到个人中心的选择</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> user.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class Success</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Success"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Success</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Success</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">HttpSession hs = request.getSession();</span><br><span class="line">PrintWriter pw = response.getWriter();</span><br><span class="line">User us =(User)hs.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">String user = us.getName();</span><br><span class="line">String pass = us.getPass();</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pw.print(<span class="string">"&lt;html&gt;&lt;body&gt;账号:"</span>+user+<span class="string">"&lt;br/&gt;密码:"</span>+pass+<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line">String url = request.getContextPath()+<span class="string">"/Person"</span>;</span><br><span class="line">pw.print(<span class="string">"&lt;a href ='"</span>+url+<span class="string">"'&gt;个人中心&lt;/a&gt;"</span>);</span><br><span class="line">pw.print(<span class="string">"&lt;/body&gt;&lt;/html&gt;"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Person-java"><a href="#Person-java" class="headerlink" title="Person.java"></a>Person.java</h2><blockquote><p>个人中心页面，首先通过session判断用户有没有登录，没登陆则提供一个跳转到登录页面的选择，如果已经登陆了则输出登录信息。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> user.User;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class Person</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Person"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//个人中心页面，首先判断用户有没有登录</span></span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=UTF-8"</span>);</span><br><span class="line">HttpSession hs = request.getSession();</span><br><span class="line">User us =(User)hs.getAttribute(<span class="string">"user"</span>);</span><br><span class="line">PrintWriter pw = response.getWriter();</span><br><span class="line"><span class="keyword">if</span>(us!=<span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">//证明用户已经登陆</span></span><br><span class="line">pw.print(<span class="string">"&lt;html&gt;&lt;body&gt;账号:"</span>+us.getName()+<span class="string">"&lt;br/&gt;密码:"</span>+us.getPass()+<span class="string">"&lt;br/&gt;"</span>);</span><br><span class="line">pw.print(<span class="string">"&lt;/body&gt;&lt;/html&gt;"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//证明没有登陆</span></span><br><span class="line">String url = request.getContextPath()+<span class="string">"/Login"</span>;</span><br><span class="line">pw.print(<span class="string">"&lt;html&gt;&lt;body&gt;"</span>);</span><br><span class="line">pw.print(<span class="string">"&lt;a href ='"</span>+url+<span class="string">"'&gt;前往登录&lt;/a&gt;"</span>);</span><br><span class="line">pw.print(<span class="string">"&lt;/body&gt;&lt;/html&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="重点突破"><a href="#重点突破" class="headerlink" title="重点突破"></a>重点突破</h1><ul><li><strong>Oracle数据库里面的sql语句，字符串类型数据要用<font color="red" size="7">‘  ‘</font></strong></li><li><strong><font color="red">从表单里面取出数据</font>:</strong><ul><li><strong>String str = (String)reques.getParameter(“user”);</strong><ul><li><strong>参数代表表单里面的name</strong></li></ul></li></ul></li><li><strong>注意从表单里面取数据和从session里面取数据用到的函数的不同</strong></li><li><strong>要注意把页面重定位和return结合使用</strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;浏览器乱码问题解决&quot;&gt;&lt;a href=&quot;#浏览器乱码问题解决&quot; class=&quot;headerlink&quot; title=&quot;浏览器乱码问题解决&quot;&gt;&lt;/a&gt;浏览器乱码问题解决&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>周末复习-3</title>
    <link href="https://133608520.github.io/2019/08/06/21/"/>
    <id>https://133608520.github.io/2019/08/06/21/</id>
    <published>2019-08-06T00:17:32.000Z</published>
    <updated>2019-08-06T10:36:28.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在Notepad-中如何快速删除一整行的内容-自定义快捷键"><a href="#在Notepad-中如何快速删除一整行的内容-自定义快捷键" class="headerlink" title="在Notepad++中如何快速删除一整行的内容(自定义快捷键)"></a>在Notepad++中如何快速删除一整行的内容(自定义快捷键)</h1><blockquote><p><strong>Notepad++是一款免费的文本编辑器，使用的人也是非常的多，尤其是程序员。但在类似eclipse这种软件中，习惯了Ctrl+D删除一整行的操作，到Notepad++中变成了，复制并粘贴一行的操作。开始你或许如我一样以为，肯定有这种快捷键，只是不知道是什么，但是，当你查遍资料之后，你会发现，根本没有这种快捷键。唯一相似的操作是Ctrl+L，但是实际上Crtrl+L是剪切一行，而并非删除一行</strong></p></blockquote><h2 id="网上解决方法："><a href="#网上解决方法：" class="headerlink" title="网上解决方法："></a>网上解决方法：</h2><ul><li>点击菜单中的【宏】-【开始录制】</li><li>鼠标在任意一行内容上单击，使光标停在这行。</li><li>然后在键盘上找到home键，按下，这时光标不管之前在哪个位置，现在光标都会出现在这行的最前面，这时按住shift键不松，再在键盘上找到end键然后按下。这时就选中这一行了。然后按两次delete键。       <font color="red" size="6"><strong>这里有问题，如果要删除的行为一个空白行，就会出现多删除的情况。</strong></font></li><li>然后点击【宏】-【停止录制】。</li><li>然后点击【宏】-【保存录制】</li><li>然后根据提示，填写名称和选择快捷键的组合，在这我选择的是Ctrl+D。然后点击OK保存。</li></ul><h2 id="解决Bug"><a href="#解决Bug" class="headerlink" title="解决Bug"></a>解决Bug</h2><p><strong>根据以上可能产生的问题：可进行如下方案：</strong></p><p><font color="slateblue" size="5"><strong>按Home将光标移动到行首位置，然后按Shift+down+Backspace</strong></font></p><p><strong>完美解决！emmm~~</strong></p><h1 id="JavaScript复习"><a href="#JavaScript复习" class="headerlink" title="JavaScript复习"></a>JavaScript复习</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span>(<span class="keyword">var</span> a = <span class="number">1</span>;a&lt;<span class="number">10</span>;a++)&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"记录第"</span>+a+<span class="string">"遍&lt;br/&gt;"</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">for</span>(<span class="keyword">var</span> a = <span class="number">1</span>;a&lt;<span class="number">10</span>;a++)&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"Hello,world!"</span>+<span class="string">"第"</span>+a+<span class="string">"遍"</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="函数变元"><a href="#函数变元" class="headerlink" title="函数变元"></a>函数变元</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>JS-函数变元<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">BODY</span> <span class="attr">style</span>=<span class="string">"height:1500px;"</span>  &gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t1"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"bt"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"检测"</span> <span class="attr">onclick</span>=<span class="string">"dian();"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"b"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t2"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span> &gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"t3"</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"XIXI"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="comment">//函数中描述应该有参数，叫做形参</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params">a,b,c</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"HelloWorld:"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(a);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(b);</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(c);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//1,3,5,7,等数值是调用时真实的参数，叫做实参</span></span></span><br><span class="line">hello(2,3,5,7,9);</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//思考：js如何做重载呢？</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//目标：两个参数求和，三个参数求积</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//JS不支持重载，后定义的function会覆盖前面的</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">xx</span>(<span class="params">a,b</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"aaaaaaa"</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">xx</span>(<span class="params">a,b,c</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"bbbbbbb"</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">xx(5,6);</span><br><span class="line">xx(5,6,7);</span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="comment">//JS使用变元机制模拟重载</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">cz</span>(<span class="params">a,b,c</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//if条件：null,'',undefined,false都为假</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(c!=<span class="literal">undefined</span>)&#123;<span class="comment">//如果c有值</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"至少3个参数:乘法运算="</span>+(a*b*c));</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(b)&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"有2个参数:加法运算="</span>+(a+b));</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a)&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"有1个参数"</span>);</span></span><br><span class="line"><span class="javascript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"没有参数"</span>);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cz(5,6,7);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="和表单结合使用"><a href="#和表单结合使用" class="headerlink" title="和表单结合使用"></a>和表单结合使用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"test"</span> <span class="attr">name</span> =<span class="string">"ts"</span> <span class="attr">onchange</span> = <span class="string">"alert('值被修改'+this.value);"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span> =<span class="string">"but"</span> <span class="attr">value</span>=<span class="string">"button"</span> <span class="attr">onclick</span> = <span class="string">"dian();"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">dian</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">"按钮被点击"</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">bianyuan</span>(<span class="params">a,b,c</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span>(c)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(a+b+c);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">else</span> <span class="keyword">if</span>(b)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(a+b);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">else</span> <span class="keyword">if</span>(a)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(a);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">"参数的个数为零个"</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">bianyuan(1,2,3);</span><br><span class="line">bianyuan(1,2);</span><br><span class="line">bianyuan(1);</span><br><span class="line">bianyuan();</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="利用JavaScript写计时功能"><a href="#利用JavaScript写计时功能" class="headerlink" title="利用JavaScript写计时功能"></a><font color="red">利用JavaScript写计时功能</font></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"开始计时"</span> <span class="attr">onclick</span> = <span class="string">"jishi();"</span>/&gt;</span>     <span class="comment">&lt;!--开始计时按钮--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"test"</span> <span class="attr">id</span> = <span class="string">"ji"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span>                          <span class="comment">&lt;!--记录计时时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"结束计时"</span> <span class="attr">onclick</span> = <span class="string">"stop();"</span>/&gt;</span>       <span class="comment">&lt;!--结束计时按钮--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--开始计时函数，可以知道，如果不停止则需要一直计时--&gt;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> t;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> c = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">jishi</span>(<span class="params"></span>)</span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript"><span class="comment">/*首先获得要显示value值，进而给它赋值 */</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">"ji"</span>).value = c;</span></span><br><span class="line">c = c+1;</span><br><span class="line"><span class="javascript">t = setTimeout(<span class="string">"jishi()"</span>,<span class="number">1000</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">stop</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line">clearTimeout(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><strong>注意函数的参数是变元的。</strong></li><li><strong>document.write(“Hello,world”);</strong></li><li><strong>document.getElementById(“”);</strong></li><li><strong>onclike = “ “</strong></li><li><strong>onchange = “ “              注意格式</strong></li><li><strong>计时器有关</strong><ul><li><strong>setTimeout（“ ”，1000）;第一个参数是一个语句，第二个参数是执行时间，毫秒为单位，1000毫秒代表1秒。</strong></li><li><strong>clearTimeout(t);      注意大小写</strong></li></ul></li></ul><h1 id="JDBC连接池"><a href="#JDBC连接池" class="headerlink" title="JDBC连接池"></a>JDBC连接池</h1><blockquote><p>数据库连接池技术（connection pool）的基本思想就是为数据库连接建立一个“缓冲池”。预先在缓冲池中放入一定数量的连接，<u>当需要建立数据库连接时，只需从“缓冲池”中取出一个，使用完毕之后再放回去。</u></p><p>数据库连接池负责分配、管理和释放数据库连接，<u>它允许应用程序重复使用一个现有的数据库连接，而不是重新建立一个。</u></p><p>数据库连接池在初始化时将创建一定数量的数据库连接放到连接池中，这些数据库连接的数量是由最小数据库连接数来设定的。无论这些数据库连接是否被使用，连接池都将一直保证至少拥有这么多的连接数量。连接池的最大数据库连接数量限定了这个连接池能占有的最大连接数，当应用程序向连接池请求的连接数超过最大连接数量时，这些请求将被加入到等待队列中。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.beans.PropertyVetoException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3p0</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">ComboPooledDataSource ds = <span class="keyword">new</span>  ComboPooledDataSource();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//设置驱动</span></span><br><span class="line">ds.setDriverClass(<span class="string">"oracle.jdbc.driver.OracleDriver"</span>);</span><br><span class="line"><span class="comment">//设置URL</span></span><br><span class="line">ds.setJdbcUrl(<span class="string">"jdbc:oracle:thin:@//192.168.0.105/orcl"</span>);</span><br><span class="line"><span class="comment">//设置用户名</span></span><br><span class="line">ds.setUser(<span class="string">"liuyanhao"</span>);</span><br><span class="line"><span class="comment">//设置密码</span></span><br><span class="line">ds.setPassword(<span class="string">"abc123"</span>);</span><br><span class="line"><span class="comment">//设置最大连接数</span></span><br><span class="line">ds.setMaxPoolSize(<span class="number">40</span>);</span><br><span class="line"><span class="comment">//设置最小连接数</span></span><br><span class="line">ds.setMinPoolSize(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//设置初始连接数</span></span><br><span class="line">ds.setInitialPoolSize(<span class="number">3</span>);</span><br><span class="line">Connection conn = ds.getConnection();</span><br><span class="line"><span class="comment">//这里并不是真的关闭了连接，close经过重写，只是将连接归还给连接池</span></span><br><span class="line">conn.close();</span><br><span class="line">System.out.println(<span class="string">"连接数据库成功"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (PropertyVetoException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重点："><a href="#重点：" class="headerlink" title="重点："></a>重点：</h2><ul><li><p>导入C3P0和jdbc的jar包</p></li><li><p><strong>buid path</strong></p></li><li><p><strong>ComboPooledDataSource  com = new ComboPooledDataSource();</strong></p></li><li><p><strong>com.setDriverClass(“oracle.jdbc.driver.OracleDriver”);</strong></p></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ds.setJdbcUrl(<span class="string">"jdbc:oracle:thin:@//192.168.0.105/orcl"</span>);</span><br><span class="line"><span class="comment">//设置用户名</span></span><br><span class="line">ds.setUser(<span class="string">"liuyanhao"</span>);</span><br><span class="line"><span class="comment">//设置密码</span></span><br><span class="line">ds.setPassword(<span class="string">"abc123"</span>);</span><br><span class="line"><span class="comment">//设置最大连接数</span></span><br><span class="line">ds.setMaxPoolSize(<span class="number">40</span>);</span><br><span class="line"><span class="comment">//设置最小连接数</span></span><br><span class="line">ds.setMinPoolSize(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//设置初始连接数</span></span><br><span class="line">ds.setInitialPoolSize(<span class="number">3</span>);</span><br></pre></td></tr></table></figure></li></ul><h1 id="两种跳转方式复习"><a href="#两种跳转方式复习" class="headerlink" title="两种跳转方式复习"></a>两种跳转方式复习</h1><h2 id="MyTest-java"><a href="#MyTest-java" class="headerlink" title="MyTest.java"></a>MyTest.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.RequestDispatcher;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class MyTest</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/MyTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"成功连接网页"</span>);</span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">String user = <span class="string">"liuyanhao"</span>;</span><br><span class="line">String pass = <span class="string">"123456"</span>;</span><br><span class="line"><span class="keyword">if</span>(user.equals(request.getParameter(<span class="string">"user"</span>))&amp;&amp;pass.equals(request.getParameter(<span class="string">"pass"</span>)))&#123;</span><br><span class="line"><span class="comment">//请求转发方式，可以传递参数</span></span><br><span class="line">System.out.println(<span class="string">"账户匹配成功！欢迎!"</span>);</span><br><span class="line">RequestDispatcher dis = request.getRequestDispatcher(<span class="string">"/Success"</span>);</span><br><span class="line">dis.forward(request, response);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//重定向方式</span></span><br><span class="line">System.out.println(<span class="string">"账户匹配失败"</span>);</span><br><span class="line">String root = request.getContextPath();       <span class="comment">//得到根路径</span></span><br><span class="line">response.sendRedirect(root+<span class="string">"/error.html"</span>);</span><br><span class="line"><span class="keyword">return</span>;           <span class="comment">//跳转完页面，程序可以return了已经。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Success-java"><a href="#Success-java" class="headerlink" title="Success.java"></a>Success.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class Success</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Success"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Success</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Success</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.println(<span class="string">"登录成功"</span>);</span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset = UTF-8"</span>);</span><br><span class="line">       String user = request.getParameter(<span class="string">"user"</span>);</span><br><span class="line">       String pss = request.getParameter(<span class="string">"pass"</span>);</span><br><span class="line">       PrintWriter write = response.getWriter();</span><br><span class="line">       write.print(<span class="string">"&lt;html&gt;&lt;body&gt;恭喜你，登录成功&lt;br/&gt;账号:"</span>+user+<span class="string">"&lt;br/&gt;密码："</span>+pss+<span class="string">"&lt;/body&gt;&lt;/html&gt;"</span>);</span><br><span class="line">write.flush();</span><br><span class="line">write.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">"/ServerTest/MyTest"</span> method = <span class="string">"post"</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">"test"</span> name =<span class="string">"user"</span> value=<span class="string">""</span>/&gt;账户 &lt;br/&gt;</span><br><span class="line">&lt;input type=<span class="string">"password"</span> name =<span class="string">"pass"</span>/&gt;密码&lt;br/&gt;</span><br><span class="line">&lt;input type=<span class="string">"radio"</span> name = <span class="string">"sex"</span> value=<span class="string">"nan"</span> /&gt;男</span><br><span class="line">&lt;input type = <span class="string">"radio"</span> name = <span class="string">"sex"</span> value = <span class="string">"nv"</span> /&gt;女&lt;br/&gt;</span><br><span class="line">&lt;input type = <span class="string">"checkbox"</span> name = <span class="string">"interest"</span> value=<span class="string">"movie"</span>/&gt;看电影</span><br><span class="line">&lt;input type = <span class="string">"checkbox"</span> name = <span class="string">"interest"</span> value=<span class="string">"study"</span>/&gt;学习</span><br><span class="line">&lt;input type = <span class="string">"checkbox"</span> name = <span class="string">"interest"</span> value=<span class="string">"read"</span>/&gt;读书&lt;br/&gt;</span><br><span class="line">&lt;input type=<span class="string">"submit"</span> value = <span class="string">"提交"</span>/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="error-html"><a href="#error-html" class="headerlink" title="error.html"></a>error.html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>您的账号不匹配，请重新登陆<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><strong>有两种跳转方式：重定向，请求跳转</strong></p><ul><li><p><strong>重定向</strong></p><ul><li><p><strong>String root = request.getContextPath();       //得到根路径</strong></p><hr></li><li><p><strong>response.sendRedirect(root+”/error.html”); //告诉请求页面应该访问的地址</strong></p></li></ul></li><li><p><strong>请求跳转</strong></p><ul><li><p><strong>RequestDispatcher dis = request.getRequestDispatcher(“/Success”);</strong></p><hr></li><li><p><strong>dis.forward(request, response);</strong></p></li></ul><p><strong><font color="red">注意：getRequestDispatcher里面的/代表根路径</font></strong></p></li></ul><h1 id="Session复习"><a href="#Session复习" class="headerlink" title="Session复习"></a>Session复习</h1><h2 id="Show-java"><a href="#Show-java" class="headerlink" title="Show.java"></a>Show.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class Show</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/Show"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Show</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">HttpSession ss = request.getSession();</span><br><span class="line">String str = (String)ss.getAttribute(<span class="string">"user"</span>);</span><br><span class="line"><span class="keyword">if</span>(str!=<span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">System.out.println(str);</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">System.out.println(<span class="string">"null"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(ss.getId());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NewTest-java"><a href="#NewTest-java" class="headerlink" title="NewTest.java"></a>NewTest.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class NewTest</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/NewTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NewTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">HttpSession hs = request.getSession();</span><br><span class="line">hs.setAttribute(<span class="string">"user"</span>, <span class="string">"liuyanhao"</span>);</span><br><span class="line">String id = hs.getId();</span><br><span class="line">System.out.println(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><ul><li><strong>HttpSession ss = request.getSession();</strong></li><li><strong>ss.setAttribute(“user”,”val”);</strong></li><li><strong>另一个页面使用时也需要首先通过第一步得到session对象</strong></li><li><strong>承上：ss.getAttribute(“user”); <font color="red">返回值类型为Object类型，需要转型</font></strong></li><li><strong>可以通过调用getId（）方法查两个页面的session是否相同</strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在Notepad-中如何快速删除一整行的内容-自定义快捷键&quot;&gt;&lt;a href=&quot;#在Notepad-中如何快速删除一整行的内容-自定义快捷键&quot; class=&quot;headerlink&quot; title=&quot;在Notepad++中如何快速删除一整行的内容(自定义快捷键)&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>周末复习-2</title>
    <link href="https://133608520.github.io/2019/08/05/20/"/>
    <id>https://133608520.github.io/2019/08/05/20/</id>
    <published>2019-08-05T01:20:37.000Z</published>
    <updated>2019-08-05T10:36:05.092Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Navicat下编写存储过程和函数"><a href="#Navicat下编写存储过程和函数" class="headerlink" title="Navicat下编写存储过程和函数"></a>Navicat下编写存储过程和函数</h1><h2 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span></span><br><span class="line"><span class="keyword">procedure</span> PRO_STU        //存储过程名</span><br><span class="line">(</span><br><span class="line">a <span class="keyword">in</span> <span class="built_in">number</span>,</span><br><span class="line">b <span class="keyword">in</span> <span class="built_in">number</span>,</span><br><span class="line">c <span class="keyword">out</span> <span class="built_in">number</span>              //需要输入的参数和输出的参数的声明</span><br><span class="line">)</span><br><span class="line"><span class="keyword">AS</span> 或者 <span class="keyword">IS</span>              //如果需要声明变量则用<span class="keyword">IS</span> 否则用 <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">IS</span></span><br><span class="line">x <span class="built_in">integer</span> := <span class="number">2</span>;        //注意sql里面的赋值语句</span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line"><span class="keyword">select</span> (a+b) <span class="keyword">into</span> c <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">end</span> PRO_STU;            //注意语句结束后要使用; <span class="keyword">end</span> 结束后也是</span><br></pre></td></tr></table></figure><h1 id="编写SUM函数"><a href="#编写SUM函数" class="headerlink" title="编写SUM函数"></a>编写SUM函数</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span></span><br><span class="line"><span class="keyword">function</span> FUN_SUM</span><br><span class="line">(</span><br><span class="line">    a <span class="keyword">in</span> <span class="built_in">number</span>,</span><br><span class="line">    b <span class="keyword">in</span> <span class="built_in">number</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">RETURN</span> <span class="built_in">number</span></span><br><span class="line"><span class="keyword">AS</span> 或者 <span class="keyword">IS</span>              //如果需要声明变量则用<span class="keyword">IS</span> 否则用 <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">IS</span></span><br><span class="line">x <span class="built_in">integer</span> := <span class="number">2</span>;        //注意sql里面的赋值语句</span><br><span class="line"><span class="keyword">begin</span> </span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line"><span class="keyword">end</span> FUN_SUM;            //注意语句结束后要使用; <span class="keyword">end</span> 结束后也是</span><br></pre></td></tr></table></figure><p>总结：函数和存储过程相比，开头定义不相同。</p><blockquote><p>函数可以用sql语句调用：</p><p><strong>select FUN_SUM(10,20) from dual;</strong></p></blockquote><h1 id="使用Navicat对MySql数据库基本操作"><a href="#使用Navicat对MySql数据库基本操作" class="headerlink" title="使用Navicat对MySql数据库基本操作"></a>使用Navicat对MySql数据库基本操作</h1><p><strong>！对root下的mysql默认数据库不要动，千万不要动。</strong></p><p>！<font color="red"><strong>mysql和information_schema</strong></font><strong>不要删除</strong></p><p>！<strong>mysql数据库只有数据库管理员才能看到，记录的是数据库的配置信息，很重要，不要乱动                                               **<font color="red" size="6"></font></strong>不作死就不会死**</p><p>端口：<strong>3306</strong></p><p>本地主机：<strong>localhost</strong>或者127.0.0.1<strong>两者是一样的</strong>，都代表我的电脑的意思</p><p>MySQL中默认用户：root@localhost       </p><p> <font color="red" size="6"><strong>初级阶段，对默认用户不要做修改，作为root千万不要取消自己的权限</strong></font></p><p><strong>如何通过网络访问mysql数据库？</strong> </p><ul><li><p>新建一个用户</p></li><li><p>用户名：lyh</p></li><li><p>主机： %                                 %代表可以进行网络连接</p></li><li><p>不要忘记给新创建的用户授权，可以使他拥有一个单独数据库的全部权限    </p><h2 id="MySql和JDBC连接"><a href="#MySql和JDBC连接" class="headerlink" title="MySql和JDBC连接"></a>MySql和JDBC连接</h2><p><strong>驱动程序类名：com.mysql.jdbc.Driver</strong></p><p><strong>JDBC URL: jdbc:mysql://<host>:<port>/<database_name></database_name></port></host></strong></p><p><font color="slateblue" size="6"><strong>注意最后使用的是数据库名</strong></font></p></li></ul><h1 id="Dao工厂设计模式"><a href="#Dao工厂设计模式" class="headerlink" title="Dao工厂设计模式"></a><font color="red">Dao工厂设计模式</font></h1><p><strong>DAO设计模式包含几个重要部分：</strong><br><strong>（1）DAO接口</strong>                  用来封存方法，用户表面能够看到的<br><strong>（2）DAO实现类</strong>           用来实现方法，最底层，用户无法看到<br><strong>（3）DAO工厂类</strong>                通过工厂类获取已经实现了的DAO对象<br><strong>（4）实体模型</strong>                   实体模型对应数据库里面的表的结构类型<br><strong>（5）数据库连接类</strong>             这个就是自己写的JDBC工具类</p><h2 id="第一步：新建文件夹，导包，build-path"><a href="#第一步：新建文件夹，导包，build-path" class="headerlink" title="第一步：新建文件夹，导包，build path"></a>第一步：新建文件夹，导包，build path</h2><p>把依赖的jar包放到新建的文件夹里，这样jar包就会一直和项目联系起来。</p><p>如果使用JDBC连接的是MySql数据库，要注意URL的格式：</p><p><font color="red"><strong>jdbc：mysql：//@92.168.0.105：3306/liuyanhao</strong></font></p><h3 id="JDBC工具类代码"><a href="#JDBC工具类代码" class="headerlink" title="JDBC工具类代码"></a>JDBC工具类代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> myutil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编写JDBC工具类，通过调用工具类可以获取与MySQL数据库的连接</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyUtil</span> </span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 第一步：注册驱动类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="string">"jdbc:mysql://192.168.0.105:3306/liuyanhao"</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String user =<span class="string">"liuyanhao"</span>;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="string">"123456"</span>;</span><br><span class="line"><span class="keyword">static</span> &#123;                                  <span class="comment">//第一次使用时加载驱动类</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">new</span> com.mysql.jdbc.Driver();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"加载驱动失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接着获取连接</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">Connection conn = DriverManager.getConnection(url, user, password);</span><br><span class="line"><span class="keyword">return</span> conn;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"获取连接失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn,Statement st,ResultSet rs)</span> </span>&#123;   <span class="comment">//关闭连接</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>)</span><br><span class="line">rs.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(st!=<span class="keyword">null</span>)</span><br><span class="line">st.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(conn!=<span class="keyword">null</span>)</span><br><span class="line">conn.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二步：编写DAO接口"><a href="#第二步：编写DAO接口" class="headerlink" title="第二步：编写DAO接口"></a>第二步：编写DAO接口</h2><h3 id="Dao-java"><a href="#Dao-java" class="headerlink" title="Dao.java"></a>Dao.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> user.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Dao</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">save</span><span class="params">(User user)</span> </span>;     <span class="comment">//保存数据到数据库</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(User user)</span></span>;    <span class="comment">//更新数据到数据库</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">find</span><span class="params">(User user)</span></span>;       <span class="comment">//通过查找id得到用户</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;<span class="comment">//通过查找id从数据库删除数据</span></span><br><span class="line"><span class="comment">//public int delete(String uname,String pass);   //通过账户名和密码删除数据</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;   <span class="comment">//查找数据库中的所有数据</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三步：编写Dao实现类"><a href="#第三步：编写Dao实现类" class="headerlink" title="第三步：编写Dao实现类"></a>第三步：编写Dao实现类</h2><h3 id="DaoImpl-java"><a href="#DaoImpl-java" class="headerlink" title="DaoImpl.java"></a>DaoImpl.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> daoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dao.Dao;</span><br><span class="line"><span class="keyword">import</span> myutil.MyUtil;</span><br><span class="line"><span class="keyword">import</span> user.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaoImpl</span> <span class="keyword">implements</span> <span class="title">Dao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">save</span><span class="params">(User user)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">String sql = <span class="string">"insert into student values(?,?,?); "</span>;</span><br><span class="line">PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    conn = MyUtil.getConnection();</span><br><span class="line">st = conn.prepareStatement(sql);</span><br><span class="line">st.setInt(<span class="number">1</span>, user.getId());</span><br><span class="line">st.setString(<span class="number">2</span>, user.getuName());</span><br><span class="line">st.setString(<span class="number">3</span>, user.getuPass());</span><br><span class="line">st.execute();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">MyUtil.close(conn, st, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(User user)</span> </span>&#123;</span><br><span class="line">String sql =<span class="string">"update student set uName = ?,uPass = ? where id = ?"</span>;</span><br><span class="line">PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    conn = MyUtil.getConnection();</span><br><span class="line">st = conn.prepareStatement(sql);</span><br><span class="line">st.setString(<span class="number">1</span>,user.getuName());</span><br><span class="line">st.setString(<span class="number">2</span>,user.getuPass());</span><br><span class="line">st.setInt(<span class="number">3</span>, user.getId());</span><br><span class="line"><span class="keyword">return</span> st.executeUpdate();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">MyUtil.close(conn, st, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> User <span class="title">find</span><span class="params">(User user)</span></span>&#123;</span><br><span class="line">PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">String sql = <span class="string">"select * from student where id = ?"</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    conn = MyUtil.getConnection();</span><br><span class="line">st = conn.prepareStatement(sql);</span><br><span class="line">st.setInt(<span class="number">1</span>, user.getId());</span><br><span class="line">rs = st.executeQuery();</span><br><span class="line"><span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line">User us = <span class="keyword">new</span> User();</span><br><span class="line">us.setId(rs.getInt(<span class="number">1</span>));</span><br><span class="line">us.setuName(rs.getString(<span class="number">2</span>));</span><br><span class="line">us.setuPass(rs.getString(<span class="number">3</span>));</span><br><span class="line"><span class="keyword">return</span> us;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">MyUtil.close(conn, st, rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">String sql =<span class="string">"delete  from student where id = ?"</span>;</span><br><span class="line">PreparedStatement st = <span class="keyword">null</span>;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    conn = MyUtil.getConnection();</span><br><span class="line">    st = conn.prepareStatement(sql);</span><br><span class="line">    st.setInt(<span class="number">1</span>,id);</span><br><span class="line"><span class="keyword">return</span> st.executeUpdate();</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">MyUtil.close(conn, st, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">String sql =<span class="string">"select * from student"</span>;</span><br><span class="line">Statement st = <span class="keyword">null</span>;</span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    conn = MyUtil.getConnection();</span><br><span class="line">    st = conn.createStatement();</span><br><span class="line">    rs = st.executeQuery(sql);</span><br><span class="line">    <span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line">    User us = <span class="keyword">new</span> User();</span><br><span class="line">    us.setId(rs.getInt(<span class="number">1</span>));</span><br><span class="line">    us.setuName(rs.getString(<span class="number">2</span>));</span><br><span class="line">    us.setuPass(rs.getString(<span class="number">3</span>));</span><br><span class="line">    list.add(us);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">MyUtil.close(conn, st, rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四步：编写实体模型"><a href="#第四步：编写实体模型" class="headerlink" title="第四步：编写实体模型"></a>第四步：编写实体模型</h2><h3 id="User-java"><a href="#User-java" class="headerlink" title="User.java"></a>User.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> user;</span><br><span class="line"><span class="comment">//编写实体模型，对应数据库里面表的类型和数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String uName;</span><br><span class="line"><span class="keyword">private</span> String uPass;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String uName, String uPass, <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.uName = uName;</span><br><span class="line"><span class="keyword">this</span>.uPass = uPass;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(String uName, String uPass)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.uName = uName;</span><br><span class="line"><span class="keyword">this</span>.uPass = uPass;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getuName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> uName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setuName</span><span class="params">(String uName)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.uName = uName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getuPass</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> uPass;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setuPass</span><span class="params">(String uPass)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.uPass = uPass;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"id：\t"</span>+getId()+<span class="string">"\t姓名"</span>+getuName()+<span class="string">"\t密码："</span>+getuPass();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五步：编写Dao工厂类"><a href="#第五步：编写Dao工厂类" class="headerlink" title="第五步：编写Dao工厂类"></a>第五步：编写Dao工厂类</h2><h3 id="DaoFactory-java"><a href="#DaoFactory-java" class="headerlink" title="DaoFactory.java"></a>DaoFactory.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dao.Dao;</span><br><span class="line"><span class="keyword">import</span> daoImpl.DaoImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DaoFactory</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Dao <span class="title">togetDao</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> DaoImpl();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Junit测试"><a href="#Junit测试" class="headerlink" title="Junit测试"></a><font color="red">Junit测试</font></h1><p>为了方便进行测试可以，使用新建<strong>JUnit Test case</strong>来对某一个类进行测试，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.BeforeEach;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dao.Dao;</span><br><span class="line"><span class="keyword">import</span> factory.DaoFactory;</span><br><span class="line"><span class="keyword">import</span> user.User;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DaoImplTest</span> </span>&#123;</span><br><span class="line">Dao dao = DaoFactory.togetDao();</span><br><span class="line">List&lt;User&gt; list = <span class="keyword">new</span> ArrayList&lt;User&gt;();</span><br><span class="line"><span class="meta">@BeforeEach</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testSave</span><span class="params">()</span> </span>&#123;</span><br><span class="line">User user = <span class="keyword">new</span> User(<span class="string">"小明"</span>,<span class="string">"123456"</span>,<span class="number">1</span>);</span><br><span class="line">User user1 = <span class="keyword">new</span> User(<span class="string">"小红"</span>,<span class="string">"123456"</span>,<span class="number">2</span>);</span><br><span class="line">User user2 = <span class="keyword">new</span> User(<span class="string">"小方"</span>,<span class="string">"123456"</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">dao.save(user);</span><br><span class="line">dao.save(user1);</span><br><span class="line">dao.save(user2);</span><br><span class="line">System.out.println(<span class="string">"成功存入数据"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">User user = <span class="keyword">new</span> User(<span class="string">"小强"</span>,<span class="string">"123456"</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">dao.update(user);</span><br><span class="line">System.out.println(<span class="string">"成功修改数据"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">fail(<span class="string">"修改数据失败 error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testFind</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">User user = <span class="keyword">new</span> User(<span class="string">"小红"</span>,<span class="string">"123456"</span>,<span class="number">2</span>);</span><br><span class="line">dao.find(user);</span><br><span class="line">System.out.println(<span class="string">"成功找到："</span>+user.getuName());</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">fail(<span class="string">"查找数据失败 error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testDelete</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">dao.delete(<span class="number">3</span>);</span><br><span class="line">System.out.println(<span class="string">"成功删除"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">fail(<span class="string">"删除数据失败 error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">testFindAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">list = dao.findAll();</span><br><span class="line">Iterator&lt;User&gt; it = list.iterator();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"> <span class="keyword">while</span>(it.hasNext()) &#123;</span><br><span class="line"> User uss = it.next();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.out.println(uss.toString());</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">System.out.println(<span class="string">"输出所有查询到的数据是失败！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> System.out.println(<span class="string">"查询所有数据成功"</span>);</span><br><span class="line"> </span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"查询所有数据失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">fail(<span class="string">"删除数据失败 error"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><p><strong>JUnit 4 开始使用 Java 5 中的注解（annotation），常用的几个 annotation 介绍：</strong></p><ul><li><strong>@BeforeClass：针对所有测试，只执行一次，且必须为static void</strong></li><li><strong>@Before：初始化方法</strong></li><li><strong>@Test：测试方法，在这里可以测试期望异常和超时时间</strong></li><li><strong>@After：释放资源</strong></li><li><strong>@AfterClass：针对所有测试，只执行一次，且必须为static void</strong></li><li><strong>@Ignore：忽略的测试方法</strong></li><li></li><li><strong>一个单元测试用例执行顺序为：</strong></li><li><strong>@BeforeClass –&gt; @Before –&gt; @Test –&gt; @After –&gt; @AfterClass</strong></li><li><strong>每一个测试方法的调用顺序为：</strong></li><li><strong>@Before –&gt; @Test –&gt; @After</strong></li></ul><h1 id="MySql删除"><a href="#MySql删除" class="headerlink" title="MySql删除"></a>MySql删除</h1><p><strong>删除sql语句：delete from 表名 where 条件</strong></p><p>  <strong>注意delete  和   from之间没有*</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Navicat下编写存储过程和函数&quot;&gt;&lt;a href=&quot;#Navicat下编写存储过程和函数&quot; class=&quot;headerlink&quot; title=&quot;Navicat下编写存储过程和函数&quot;&gt;&lt;/a&gt;Navicat下编写存储过程和函数&lt;/h1&gt;&lt;h2 id=&quot;存储过程&quot;
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>周末复习</title>
    <link href="https://133608520.github.io/2019/08/04/19/"/>
    <id>https://133608520.github.io/2019/08/04/19/</id>
    <published>2019-08-04T07:41:35.000Z</published>
    <updated>2019-08-04T11:06:01.173Z</updated>
    
    <content type="html"><![CDATA[<p><strong>使用Navicat建立数据库的时候，<font color="slateblue" size="5">数据库名称一定要全部大写</font>，否则DOS下无法查询那些不是全部大写名称的数据库，以及java连接数据库的时候会出错</strong></p><p><strong>注意Navicat中对字符串的操作都是加单引号</strong></p><h1 id="JDBC执行SQL语句"><a href="#JDBC执行SQL语句" class="headerlink" title="JDBC执行SQL语句"></a>JDBC执行SQL语句</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OracleTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line"><span class="comment">//注册JDBC驱动</span></span><br><span class="line">Class.forName(<span class="string">"oracle.jdbc.driver.OracleDriver"</span>);</span><br><span class="line"><span class="comment">//定义连接字符串</span></span><br><span class="line">String url = <span class="string">"jdbc:oracle:thin:@//192.168.0.105:1521/orcl"</span>;</span><br><span class="line">String user =<span class="string">"lyh"</span>;</span><br><span class="line">String pass =<span class="string">"123456"</span>;</span><br><span class="line"><span class="comment">//是驱动管理器与数据库建立连接</span></span><br><span class="line">Connection conn = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn = DriverManager.getConnection(url, user, pass);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"与数据库建立连接失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"成功与数据库建立连接"</span>);</span><br><span class="line">Statement st = conn.createStatement();</span><br><span class="line">ResultSet rs = st.executeQuery(<span class="string">"select * from STU"</span>);</span><br><span class="line"><span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line">System.out.println(rs.getString(<span class="string">"sname"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//String ins ="create table student(id int,sname varchar(255),sage int)";</span></span><br><span class="line"><span class="comment">//st.execute(ins);</span></span><br><span class="line"><span class="comment">//System.out.println("成功创建表");</span></span><br><span class="line"><span class="comment">//String inss = "insert into  student values(1,'小强',11)";</span></span><br><span class="line"><span class="comment">//st.execute(inss);</span></span><br><span class="line"><span class="comment">//System.out.println("成功插入数据");</span></span><br><span class="line"><span class="comment">//String strr ="select * from student";</span></span><br><span class="line"><span class="comment">//rs = st.executeQuery(strr);</span></span><br><span class="line"><span class="comment">//while(rs.next()) &#123;</span></span><br><span class="line"><span class="comment">//System.out.println(rs.getString("sname"));</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">String stn =<span class="string">"insert into STU values(5,'小六',14)"</span>;</span><br><span class="line">st.execute(stn);</span><br><span class="line">System.out.println(<span class="string">"成功插入了表"</span>);</span><br><span class="line">rs.close();</span><br><span class="line">st.close();</span><br><span class="line">&#125;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><font color="pink" size="7">特别注意:java里面对sql语句的要求特别严格，稍微不规范就会报错，<strong>尤其时String str = “insert into 表名 values（1，‘小明’，11）</strong>”的时候</font></p><p><font color="blue" size="7"><strong>有几点要注意：into后面不用table，最后没有分号，没有！！</strong></font></p></blockquote><h1 id="编写JDBC工具类"><a href="#编写JDBC工具类" class="headerlink" title="编写JDBC工具类"></a>编写JDBC工具类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String url =<span class="string">"jdbc:oracle:thin:@//192.168.0.105/orcl"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String user = <span class="string">"lyh"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="string">"123456"</span>;</span><br><span class="line"><span class="comment">//第一次使用时加载驱动  </span></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="keyword">new</span> oracle.jdbc.driver.OracleDriver();</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">System.out.println(<span class="string">"加载驱动失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取连接</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">try</span> &#123;</span><br><span class="line">Connection conn = DriverManager.getConnection(url,user,password);</span><br><span class="line"><span class="keyword">return</span> conn;</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"获取连接失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//close（）方法，实现关闭rs,st,conn</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">(Connection conn,Statement st,ResultSet rs)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(rs!=<span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">rs.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(st!=<span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">st.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(conn!=<span class="keyword">null</span>)</span><br><span class="line">&#123;</span><br><span class="line">conn.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><font color="salmon" size="6">总结：<strong>第一步:注册驱动类；第二步：获取连接；第三步：获取操作对象；第四步：如果需要，建立结果集；</strong></font></p><p><strong>分别对应的类</strong></p><ul><li><strong>new.oracle.jdbc.Driver.OracleDriver</strong>   </li><li><strong>Connection  conn = DriverManager.getConnection(url,user,password);</strong></li><li><strong>Statement st = conn.createStatement();</strong></li><li><strong>ResultSet rs = st.execute(sql);</strong></li></ul><p><strong>注意：Oracle的话 Url的形式： jdbc:oracle:thin:@//192.168.0.105/orcl;</strong></p><p><strong>另外注意最后的orcl时sid，一般来说就是orcl，除非自己后面修改</strong></p><p><font color="red" size="6">关闭的顺序为 <strong>rs  st  conn</strong></font></p><h1 id="JDBC编写事务处理"><a href="#JDBC编写事务处理" class="headerlink" title="JDBC编写事务处理"></a>JDBC编写事务处理</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> util.JDBCUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Trigger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事务处理</span></span><br><span class="line"><span class="comment"> * 第一步：获取连接</span></span><br><span class="line"><span class="comment"> * 第二步:获取操作对象</span></span><br><span class="line"><span class="comment"> * 第三步：设置不自动提交</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String sql = <span class="string">"insert into STU values(7,'小明',16)"</span>;</span><br><span class="line">Connection conn = JDBCUtil.getConnection();</span><br><span class="line">Statement st = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">st = conn.createStatement();</span><br><span class="line">conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">st.executeUpdate(sql);</span><br><span class="line">conn.commit();                                                        <span class="comment">//需要自己手动提交</span></span><br><span class="line">System.out.println(<span class="string">"成功插入"</span>);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">                                                                      <span class="comment">//try里面的内容出现了异常，需要回滚</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"插入失败！"</span>);</span><br><span class="line">conn.rollback();</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e1) &#123;</span><br><span class="line">e1.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">conn.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">JDBCUtil.close(conn, st, <span class="keyword">null</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：事务处理即成功都成功，失败都失败。</p><p>事务处理主要<strong>用到try{}catch{}，通过处理异常对事务进行回滚</strong>，需要主要的有两个地方</p><ol><li><strong>首先把自动提交关了，最后再把自动提交打开</strong></li><li><strong>不要忘了，没有问题的话，需要自己手动提交</strong></li></ol><h1 id="PreparedStatement-预编译语句"><a href="#PreparedStatement-预编译语句" class="headerlink" title="PreparedStatement 预编译语句"></a>PreparedStatement 预编译语句</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.Statement;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> util.JDBCUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Prepare</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="comment">//PrepareStatement 预编译语句</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获得连接</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">String sql =<span class="string">"insert into STU values(?,?,?)"</span>;                                  <span class="comment">//特色</span></span><br><span class="line">Connection conn = JDBCUtil.getConnection();</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pst = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pst = conn.prepareStatement(sql);</span><br><span class="line">pst.setInt(<span class="number">1</span>, <span class="number">10</span>);                                                           <span class="comment">//第一个参数是第几个问好</span></span><br><span class="line">pst.setString(<span class="number">2</span>, <span class="string">"小芳"</span>);<span class="comment">//第二个参数是要传的值</span></span><br><span class="line">pst.setInt(<span class="number">3</span>, <span class="number">18</span>);</span><br><span class="line">pst.addBatch();</span><br><span class="line">pst.executeBatch();</span><br><span class="line">System.out.println(<span class="string">"成功插入数据"</span>);  <span class="comment">//插入成功的话，来看一下里面的数据</span></span><br><span class="line"><span class="comment">//rs = pst.executeQuery("select * from STU");            不能这么用，需要重新得到一个Statement,应为pst需要绑定变量，即只能用带问号的形式                       </span></span><br><span class="line">java.sql.Statement st =   conn.createStatement();</span><br><span class="line">    rs = st.executeQuery(<span class="string">"select * from STU"</span>);</span><br><span class="line">System.out.println(<span class="string">"学号 姓名 年龄 "</span>);</span><br><span class="line"><span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line">System.out.print(rs.getInt(<span class="number">1</span>));</span><br><span class="line">System.out.print(<span class="string">"\t"</span>);</span><br><span class="line">System.out.print(rs.getString(<span class="number">2</span>));</span><br><span class="line">System.out.print(<span class="string">"\t"</span>);</span><br><span class="line">System.out.print(rs.getInt(<span class="number">3</span>));</span><br><span class="line">System.out.print(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"插入数据失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">JDBCUtil.close(conn, pst, rs);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：PreparedStatement和Statement相比，更加安全，效率更高，性能更好。</p><p>要点:  PreparedStatement  pst = null;</p><p>​        <font color="red">   <strong>pst = conn.PreparedStatement(sql);  //注意sql语句的形式</strong></font></p><p>​           pst.setInt(1,1);</p><p>​            pst.setString(2,“”小明”);</p><p>​            <font color="red"><strong>pst.addBatch();                            //需要自己声明一条记录添加完成</strong></font></p><p>​            <strong>pst.executeBatch();</strong>                        //批操作前面添加的记录</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;使用Navicat建立数据库的时候，&lt;font color=&quot;slateblue&quot; size=&quot;5&quot;&gt;数据库名称一定要全部大写&lt;/font&gt;，否则DOS下无法查询那些不是全部大写名称的数据库，以及java连接数据库的时候会出错&lt;/strong&gt;&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Navicat下自实现主键自增功能</title>
    <link href="https://133608520.github.io/2019/08/03/18/"/>
    <id>https://133608520.github.io/2019/08/03/18/</id>
    <published>2019-08-03T11:09:06.000Z</published>
    <updated>2019-08-03T11:23:49.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Navicat下自实现主键自增功能"><a href="#Navicat下自实现主键自增功能" class="headerlink" title="Navicat下自实现主键自增功能"></a>Navicat下自实现主键自增功能</h1><p><strong>通过构建序列和触发器完成</strong></p><ul><li><p><strong>首先构建一个序列</strong></p></li><li><p><strong>构建触发器</strong></p><ul><li><p>条件写 <font color="staleblue">new. <u><strong>“id”</strong></u>  is null</font></p></li><li><p>定义语句里面写</p><ul><li><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> SEQ_S.nextval <span class="keyword">into</span>:new.<span class="string">"id"</span> <span class="keyword">from</span> dual;</span><br><span class="line">//其中SEQ_S是前面建立的序列的名称</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><p><font color="slateblue" size="8"><strong>一定要加引号</strong></font></p><p><font color="slateblue" size="8"><strong>一定要加引号</strong></font></p><p><font color="slateblue" size="8"><strong>一定要加引号</strong></font></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Navicat下自实现主键自增功能&quot;&gt;&lt;a href=&quot;#Navicat下自实现主键自增功能&quot; class=&quot;headerlink&quot; title=&quot;Navicat下自实现主键自增功能&quot;&gt;&lt;/a&gt;Navicat下自实现主键自增功能&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;通过
      
    
    </summary>
    
      <category term="数据库学习" scheme="https://133608520.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="数据库学习" scheme="https://133608520.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Oracle在DOS下无法管理登录-ORA-01031</title>
    <link href="https://133608520.github.io/2019/08/03/17/"/>
    <id>https://133608520.github.io/2019/08/03/17/</id>
    <published>2019-08-03T08:39:15.000Z</published>
    <updated>2019-08-03T08:44:23.486Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ORA-01031-insufficient-privileges解决办法"><a href="#ORA-01031-insufficient-privileges解决办法" class="headerlink" title="ORA-01031: insufficient privileges解决办法"></a>ORA-01031: insufficient privileges解决办法</h1><h2 id="打开用户组管理"><a href="#打开用户组管理" class="headerlink" title="打开用户组管理"></a>打开用户组管理</h2><p><strong>输入 lusrmgr.msc</strong></p><p><strong>双击ora_dba</strong></p><p><strong>点击添加按钮</strong></p><p><strong>点击高级按钮</strong></p><p><strong>点击立即查找，添加用户（添加用户为本机用户）</strong></p><p><font color="purple" size="9"><strong>成功</strong></font> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ORA-01031-insufficient-privileges解决办法&quot;&gt;&lt;a href=&quot;#ORA-01031-insufficient-privileges解决办法&quot; class=&quot;headerlink&quot; title=&quot;ORA-01031: insuffi
      
    
    </summary>
    
      <category term="BUG分析" scheme="https://133608520.github.io/categories/BUG%E5%88%86%E6%9E%90/"/>
    
    
      <category term="BUG分析" scheme="https://133608520.github.io/tags/BUG%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb会话跟踪</title>
    <link href="https://133608520.github.io/2019/08/02/16/"/>
    <id>https://133608520.github.io/2019/08/02/16/</id>
    <published>2019-08-02T09:46:17.000Z</published>
    <updated>2019-08-02T11:34:43.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTTP通信过程"><a href="#HTTP通信过程" class="headerlink" title="HTTP通信过程"></a>HTTP通信过程</h1><blockquote><p><strong>JavaWeb应用程序运行是基于B/S的模式，用户通过客户端浏览器向Web服务器发送一个HTTP请求，服务器收到请求的同时一个连接就建立了，服务器根据请求做必要的处理并生成一个响应信息，然后把它回送给客户端。这一过程结束后，服务器就关闭了该连接，而不会一直与客户端保持着连接的状态。</strong></p></blockquote><h1 id="HTTP的无状态性"><a href="#HTTP的无状态性" class="headerlink" title="HTTP的无状态性"></a>HTTP的无状态性</h1><blockquote><p><strong>Web服务器需要为大量的用户服务。对于一个服务器，接受一条网络连接就意味着通过一个套接字侦听进入的请求，如果一个服务器同时连接大量的用户，这会消耗掉服务器大量的资源，包括线程和内存。</strong></p><p><strong>为了能够服务于大量的用户，HTTP被设计成在每一次新请求中都使用新的连接，这种特性称为HTTP的无状态性。</strong></p></blockquote><h1 id="Session会话"><a href="#Session会话" class="headerlink" title="Session会话"></a><font color="red">Session会话</font></h1><blockquote><p>既然http是无状态的，那服务器该如何对多个用户进行区分呢？<br>我们常进的网站通常都是每次只需要登录一次，然后就记住了用户信息和登录状态，这是如何实现的呢？这就需要一种机制来唯一的标识用户，以便跟踪用户在站点中的行为。<br>这就是我们要说的会话对象session，可以利用会话对象session来记录用户的数据信息。</p></blockquote><h2 id="会话的概念"><a href="#会话的概念" class="headerlink" title="会话的概念"></a>会话的概念</h2><blockquote><p><strong>从一个用户打开浏览器并连接到服务器开始到用户关闭浏览器离开这个服务器结束称做一个会话。</strong><br><strong>在多次HTTP连接间维护用户与不同请求之间关联的情况称为维护一个会话（session）</strong><br><strong>当一个用户连接到服务器时可能到不同的页面，而许多WEB程序需要用户在客户端的一系列请求之间能够互相关联，实现不同的页面之间数据的传递和共享，而HTTP协议是无状态的，基于WEB的应用程序需要维护这样的状态，这就需要session，利用session 可以保存访问者访问页面的数据信息</strong></p></blockquote><h2 id="会话的特征"><a href="#会话的特征" class="headerlink" title="会话的特征"></a>会话的特征</h2><blockquote><ul><li><strong>Session是服务器为自己不认识的用户做的标记，</strong></li><li><strong>Session里面可以存放数据</strong></li><li><strong>可以自动创建和销毁</strong></li></ul></blockquote><h2 id="Session工作原理"><a href="#Session工作原理" class="headerlink" title="Session工作原理"></a>Session工作原理</h2><blockquote><p>当用户第一次发出请求时，由WEB容器自动创建一个Session对象，该对象调用相应的方法可以存储用户在访问各个页面其间提交的各种信息，比如名字、号码等信息，同时这个Session 对象被分配了一个唯一的Session ID与之对应。这个Session ID也会随着HTTP响应内容传递给用户端浏览器。传递的方式默认情况下为cookie，如果用户端浏览器关闭了cookie功能，就会使用URL重写技术传递给用户浏览器</p></blockquote><blockquote><p>在用户发出的后续请求中，请求信息中会包含WEB容器传递给它的Session ID。WEB容器就会根据传回的Session ID寻找用户对应的Session 对象，Session 对象和客户之间是一个一一对应的关系，直到客户关闭浏览器后，服务器才将该用户的Session 对象取消。</p></blockquote><p><strong>Session的ID</strong></p><blockquote><p>WEB容器在创建每一个新的HTTP会话对象时，都会赋予一个新的ID号。WEB容器保证它在Web应用范围内是唯一的。<br>这个ID号<strong>可以通过Session对象的getId()获得</strong>。例如：<br> <strong>String sessionId=session.getId();</strong></p></blockquote><h2 id="Session的属性"><a href="#Session的属性" class="headerlink" title="Session的属性"></a><font color="red">Session的属性</font></h2><p><strong>Session对象使用以下方法管理绑定到会话的属性</strong><br><strong>设置：void setAttribute(String name,Object value) ;</strong><br><strong>获取：Object getAttribute(String name);</strong><br><strong>移除：void removeAttribute(String name) ;</strong></p><p><strong>与Map的用法相似，其实内部就是键值对。</strong></p><h1 id="页面跳转的两种方式："><a href="#页面跳转的两种方式：" class="headerlink" title="页面跳转的两种方式："></a><font color="red">页面跳转的两种方式：</font></h1><blockquote><p>页面跳转的两种方式：</p><p>1.<strong>请求转发</strong></p><p>服务器内部转发，服务器内部跳转，浏览器无法感知</p><p>代码：<br><strong>RequestDispatcher dispatcher</strong><br>    <strong>= request.getRequestDispatcher(“/hello/show”);</strong><br><strong>dispatcher.forward(request, response);</strong></p><p>解释：<br>斜线代表项目根路径,代表WebRoot目录（request.getContextPath）<br>请求转发之后，浏览器中的url不会改变<br>request跳转到下一页面后，还是这个request<br>request可以作为容器使用相当于Map集合<br>request.setAttribute向request中存数据<br>request.getAttribute可以从中取数据</p><p>2<strong>.重定向</strong></p><p>服务器告诉浏览器跳转到某个位置</p><p>代码：<br><strong>String path = req.getContextPath();</strong><br><strong>resp.sendRedirect(path+”/MyHtml.html”);</strong></p><p>解释：<br>斜线代表服务器根路径<br>重定向最好配合req.getContextPath()使用<br>重定向之后需要结束当前方法<br>重定向之后前面的的请求信息会消失<br>重定向之后浏览器会发起一次新的请求</p></blockquote><h2 id="页面跳转代码示例"><a href="#页面跳转代码示例" class="headerlink" title="页面跳转代码示例"></a><font color="red">页面跳转代码示例</font></h2><h3 id="Myservlet"><a href="#Myservlet" class="headerlink" title="Myservlet"></a>Myservlet</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet主要功能：接收来自浏览器的请求，给予浏览器响应</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"1111111111"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  重定向</span></span><br><span class="line"><span class="comment"> *斜线代表服务器跟路径</span></span><br><span class="line"><span class="comment"> *  重定向之后需要结束当前方法</span></span><br><span class="line"><span class="comment"> *  重定向之后之前的请求信息就都没了</span></span><br><span class="line"><span class="comment"> *  再一次发起的是新的请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取Webroot的URL</span></span><br><span class="line">String path = req.getContextPath();</span><br><span class="line">System.out.println(path);</span><br><span class="line">resp.sendRedirect(path+<span class="string">"/MyHtml.html"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">doGet(req, resp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Receive"><a href="#Receive" class="headerlink" title="Receive"></a>Receive</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpRetryException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.RequestDispatcher;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Receive</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The doGet method of the servlet. &lt;br&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This method is called when a form has its tag value method equals to get.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the request send by the client to the server</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the response send by the server to the client</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException if an error occurred</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurred</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">String xx = request.getParameter(<span class="string">"un"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//把表单中的信息提取出来耍耍</span></span><br><span class="line">System.out.println(<span class="string">"Receive1:"</span>+xx);</span><br><span class="line">System.out.println(<span class="string">"Receive2:"</span>+xx);</span><br><span class="line">System.out.println(<span class="string">"Receive3:"</span>+xx);</span><br><span class="line"></span><br><span class="line"><span class="comment">//向request中存入数据，带到下一个页面去</span></span><br><span class="line">request.setAttribute(<span class="string">"st"</span>, <span class="string">"Hahahaha"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求转发</span></span><br><span class="line"><span class="comment"> * 斜线代表项目根路径,代表WebRoot目录（request.getContextPath）</span></span><br><span class="line"><span class="comment"> * 请求转发之后，浏览器中的url不会改变</span></span><br><span class="line"><span class="comment"> * request跳转到下一页面后，还是这个request</span></span><br><span class="line"><span class="comment"> * request可以作为容器使用相当于Map集合</span></span><br><span class="line"><span class="comment"> * request.setAttribute向request中存数据</span></span><br><span class="line"><span class="comment"> * request.getAttribute可以从中取数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//走起</span></span><br><span class="line">RequestDispatcher dispatcher = request.getRequestDispatcher(<span class="string">"/hello/show"</span>);</span><br><span class="line">dispatcher.forward(request, response);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The doPost method of the servlet. &lt;br&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This method is called when a form has its tag value method equals to post.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the request send by the client to the server</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the response send by the server to the client</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException if an error occurred</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurred</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Show"><a href="#Show" class="headerlink" title="Show"></a>Show</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Show</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The doGet method of the servlet. &lt;br&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This method is called when a form has its tag value method equals to get.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the request send by the client to the server</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the response send by the server to the client</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException if an error occurred</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurred</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">"text/html"</span>);</span><br><span class="line">PrintWriter out = response.getWriter();</span><br><span class="line">out.println(<span class="string">"&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;HTML&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"  &lt;HEAD&gt;&lt;TITLE&gt;A Servlet&lt;/TITLE&gt;&lt;/HEAD&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"  &lt;BODY&gt;"</span>);</span><br><span class="line">out.print(<span class="string">"    This is "</span>);</span><br><span class="line">out.print(<span class="keyword">this</span>.getClass());</span><br><span class="line">out.println(<span class="string">", using the GET method"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;br&gt;接到一个表单参数：un="</span>+request.getParameter(<span class="string">"un"</span>)+<span class="string">",st="</span>+request.getAttribute(<span class="string">"st"</span>));</span><br><span class="line">out.println(<span class="string">"  &lt;/BODY&gt;"</span>);</span><br><span class="line">out.println(<span class="string">"&lt;/HTML&gt;"</span>);</span><br><span class="line">out.flush();</span><br><span class="line">out.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The doPost method of the servlet. &lt;br&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This method is called when a form has its tag value method equals to post.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the request send by the client to the server</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the response send by the server to the client</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException if an error occurred</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurred</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Web-xml"><a href="#Web-xml" class="headerlink" title="Web.xml"></a>Web.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">"3.0"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>页面跳转DEMO<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hi<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>demo.MyServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Show<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>demo.Show<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Receive<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>demo.Receive<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hi<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/good/haha/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Show<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello/show<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Receive<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/Receive<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="MyHtml-html-放在WebRoot下"><a href="#MyHtml-html-放在WebRoot下" class="headerlink" title="MyHtml.html   (放在WebRoot下)"></a>MyHtml.html   (放在WebRoot下)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>MyHtml.html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"this is my page"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--&lt;link rel="stylesheet" type="text/css" href="./styles.css"&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    This is my HTML page. <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./servlet/Receive"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"un"</span>  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTTP通信过程&quot;&gt;&lt;a href=&quot;#HTTP通信过程&quot; class=&quot;headerlink&quot; title=&quot;HTTP通信过程&quot;&gt;&lt;/a&gt;HTTP通信过程&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;JavaWeb应用程序运行是基于B/S的模式，用户
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
      <category term="JavaWeb会话跟踪" scheme="https://133608520.github.io/tags/JavaWeb%E4%BC%9A%E8%AF%9D%E8%B7%9F%E8%B8%AA/"/>
    
  </entry>
  
  <entry>
    <title>Servlet</title>
    <link href="https://133608520.github.io/2019/08/02/15/"/>
    <id>https://133608520.github.io/2019/08/02/15/</id>
    <published>2019-08-02T09:46:17.000Z</published>
    <updated>2019-08-02T11:15:37.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Servlet简介"><a href="#Servlet简介" class="headerlink" title="Servlet简介"></a>Servlet简介</h1><blockquote><p><strong>Servlet是用Java语言编写的程序，它运行在Web服务器上，用以处理来自客户端的请求；</strong><br><strong>它一般会把处理的结果以为HTML的形式返回，在客户端形成动态网页</strong></p></blockquote><h1 id="Servlet容器"><a href="#Servlet容器" class="headerlink" title="Servlet容器"></a>Servlet容器</h1><blockquote><p><strong>Servlet和我们以往见过的普通Java类一样，在需要的时候被实例化，在不需要的时候被销毁，而Servlet的实例化和销毁工作由Servlet容器来完成；</strong><br><strong>Servlet在Servlet容器内运行，Servlet容器负责调度Servlet，并控制着Servlet的生命周期；</strong><br><strong>Apache Tomcat既是Web服务器软件，同时也是符合规范的Servlet容器</strong></p></blockquote><h1 id="Javax-servlet-http包中接口"><a href="#Javax-servlet-http包中接口" class="headerlink" title="Javax.servlet.http包中接口"></a>Javax.servlet.http包中接口</h1><table><thead><tr><th>类名称</th><th>说    明</th></tr></thead><tbody><tr><td>HttpServlet</td><td>该类是最常用于扩展Servlet的类，因为很多Servlet应用程序都遵照HTTP协议运行。此类支持HTTP协议功能以及Servlet类的方法，它是个抽象类。它接收客户端的请求，并向客户端发送响应。</td></tr><tr><td>Cookie</td><td>此类用来创建Cookie，它存储了少量由Servlet发送至客户端的信息。</td></tr></tbody></table><h1 id="HttpServlet注意事项"><a href="#HttpServlet注意事项" class="headerlink" title="HttpServlet注意事项"></a>HttpServlet注意事项</h1><blockquote><p><strong>HttpServlet中还包含一个service方法，其原型如下：</strong><br>    <strong>public void service(HttpServletRequest request,</strong><br>                                     <strong>HttpServletResponse response)</strong><br>    <strong>throws ServletException, IOException</strong><br><strong>此方法用来调度客户端的请求，API文档中明确规定，请勿重写该方法</strong></p></blockquote><h1 id="http请求方式"><a href="#http请求方式" class="headerlink" title="http请求方式"></a>http请求方式</h1><blockquote><p><strong>HTTP协议定义了GET和POST两种请求方法，POST方法对请求发送的数据量没有限制。</strong><br><strong>Get是使用明文在浏览器地址栏直接显示请求字符串</strong><br><strong>post是将数据隐含在HTTP协议的请求报文中发送至服务器</strong></p></blockquote><h2 id="代码示例-HelloServlet"><a href="#代码示例-HelloServlet" class="headerlink" title="代码示例   HelloServlet"></a>代码示例   HelloServlet</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//导入必要的包</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="comment">//自定义Servlet，继承于HttpServlet</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="comment">//重写父类的doGet方法，收到客户端的请求（get方式）时，执行此方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                      HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获得输出流，以便向客户端输出内容</span></span><br><span class="line">        PrintWriter out = response.getWriter();</span><br><span class="line">        <span class="comment">//向客户端输出页面内容</span></span><br><span class="line">        out.println(<span class="string">"&lt;html&gt;"</span>);</span><br><span class="line">        out.println(<span class="string">"&lt;head&gt;"</span>);</span><br><span class="line">        out.println(<span class="string">"&lt;title&gt; HelloServlet &lt;/title&gt;"</span>);</span><br><span class="line">        out.println(<span class="string">"&lt;/head&gt;"</span>);</span><br><span class="line">        out.println(<span class="string">"&lt;body&gt;"</span>);</span><br><span class="line">        out.println(<span class="string">"Hello world!&lt;br&gt;"</span>);</span><br><span class="line">        out.println(<span class="string">"&lt;/body&gt;"</span>);</span><br><span class="line">        out.println(<span class="string">"&lt;/html&gt;"</span>);</span><br><span class="line">        out.close();  <span class="comment">//关闭流</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Web-xml中配置Servlet"><a href="#Web-xml中配置Servlet" class="headerlink" title="Web.xml中配置Servlet"></a><font color="red">Web.xml中配置Servlet</font></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">为了使Servlet容器能够正确识别Servlet，还必须在web.xml的配置文件中配置，其格式如下：</span><br><span class="line">&lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;ServletName&lt;/servlet-name&gt; //servlet名称，名称可以任意命名</span><br><span class="line">    &lt;servlet-<span class="class"><span class="keyword">class</span>&gt;<span class="title">ServletClass</span>&lt;<span class="title">servlet</span>-<span class="title">class</span>&gt;//<span class="title">Servlet</span>类的名称</span></span><br><span class="line"><span class="class">&lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">servlet</span>-<span class="title">name</span>&gt;<span class="title">ServletName</span>&lt;<span class="title">servlet</span>-<span class="title">name</span>&gt;//<span class="title">servlet</span>名称，名称可以任意命名</span></span><br><span class="line"><span class="class">    &lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;<span class="title">ServletURLMapping</span>&lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;//<span class="title">Servlet</span>对应的<span class="title">url</span>名，自己定</span></span><br><span class="line"><span class="class">&lt;<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Servlet总结"><a href="#Servlet总结" class="headerlink" title="Servlet总结"></a>Servlet总结</h1><ol><li><strong>Servlet其实就是运行在服务器端的小应用程序；</strong></li><li><strong>Servlet容器负责调度Servlet，并控制着它们的生命周期；</strong></li><li><strong>一般通过继承HttpServlet的方式来实现Servlet;</strong></li><li><strong>根据客户端请求的方式，只需重写doGet或doPost方法即可；</strong></li><li><strong>要使容器正确识别Servlet，则必须填写配置文件web.xml；</strong></li></ol><h1 id="Servlet表单处理"><a href="#Servlet表单处理" class="headerlink" title="Servlet表单处理"></a>Servlet表单处理</h1><h2 id="Html表单"><a href="#Html表单" class="headerlink" title="Html表单"></a>Html表单</h2><p><strong>客户端通过浏览器向web服务器提交请求的方式有7种，post、get、 put、 delete、 options 、head和trace,其中只需要掌握get和post就足够了。</strong></p><p><strong>Post请求是通过html中的表单(Form)来完成的，表单中包含了若干组件：</strong><br><strong>Input text     Input password   Input radio</strong><br><strong>Input checkbox   select 单选    select 多选</strong><br><strong>TextArea    submit    reset</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">表单(Form)</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">“f1”</span> <span class="attr">method</span>=<span class="string">“post”</span> <span class="attr">action</span>=<span class="string">“/servlet/check”</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">属性：</span><br><span class="line">name:表单的名称</span><br><span class="line">method:向服务器提交数据的方式，一般get或post</span><br><span class="line">action：表单数据提交的位置( 相对地址或绝对地址)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">文本框(text)</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“text”</span> <span class="attr">name</span>=<span class="string">“userName”</span></span></span><br><span class="line"><span class="tag"><span class="attr">Size</span>=<span class="string">“16”</span> <span class="attr">maxlength</span>=<span class="string">“8”</span> <span class="attr">value</span>=<span class="string">“haha”/</span>&gt;</span></span><br><span class="line">单选按钮(radio)</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“radio”</span> <span class="attr">name</span>=<span class="string">“gender”</span> <span class="attr">value</span>=<span class="string">“nan”</span> <span class="attr">checked</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“radio”</span> <span class="attr">name</span>=<span class="string">“gender”</span> <span class="attr">value</span>=<span class="string">“nv”</span> &gt;</span>女</span><br><span class="line">复选按钮(checkbox)</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“checkbox”</span> <span class="attr">name</span>=<span class="string">“interest”</span> </span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">“movie”</span>&gt;</span>看电影</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“checkbox”</span> <span class="attr">name</span>=<span class="string">“interest”</span> <span class="attr">value</span>=<span class="string">“computer”</span>&gt;</span>玩电脑</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“checkbox”</span> <span class="attr">name</span>=<span class="string">“interest”</span> <span class="attr">value</span>=<span class="string">“shopping”</span>&gt;</span>购物</span><br><span class="line">下拉列表(select 单选)</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">“city”</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">“beijing”</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">“shanghai”</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">“wuxi”</span>&gt;</span>无锡<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">“dalian”</span>&gt;</span>大连<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">“etc”</span>&gt;</span>其他<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">文本域(TextArea)</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">“comment”</span> <span class="attr">rows</span>=<span class="string">“10”</span> <span class="attr">cols</span>=<span class="string">“40”</span>&gt;</span>感谢使用本系统</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">提交按钮(submit)和重置按钮(reset)</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“submit”</span> <span class="attr">value</span>=<span class="string">“提交”/</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">“reset”</span> <span class="attr">value</span>=<span class="string">“重置”/</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="HttpServletRequest常用方法"><a href="#HttpServletRequest常用方法" class="headerlink" title="HttpServletRequest常用方法"></a>HttpServletRequest常用方法</h1><ul><li><strong>获取单值请求参数的方法：getParamter();</strong></li><li><strong>获取多值请求参数的方法：getParameterValues();</strong></li><li><strong>获取请求参数名字的方法：getParameterNames();</strong></li><li><strong>获取session对象的方法：getSession();</strong></li><li><strong>获取Web应用根路径的方法：getContextPath();</strong></li><li><strong>获取Servlet路径的方法：getServletPath();</strong></li><li><strong>获取request中的属性的方法：getAttribute();</strong></li><li><strong>设置request中的属性的方法：setAttribute();</strong></li><li><strong>获取请求转发对象的方法：getRequestDispatcher();</strong></li></ul><h1 id="Html传值方式"><a href="#Html传值方式" class="headerlink" title="Html传值方式"></a>Html传值方式</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">想把un=tom和pw=123传到服务器上的login.jsp，可以采用如下方法：</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">“post”</span> <span class="attr">action</span>=<span class="string">“login.jsp”</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">“un”</span> <span class="attr">value</span>=<span class="string">“tom”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">“pw”</span> <span class="attr">value</span>=<span class="string">“123”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">tupe</span>=<span class="string">“submit”</span> <span class="attr">value</span>=<span class="string">“Login”</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">get:</span><br><span class="line">http://xxxx/login.jsp?un=tom&amp;pw=123</span><br></pre></td></tr></table></figure><h1 id="页面重定向（1）"><a href="#页面重定向（1）" class="headerlink" title="页面重定向（1）"></a>页面重定向（1）</h1><p><strong>1.客户端跳转</strong><br><strong>res.sendRedirect(“index.jsp”)</strong></p><h1 id="页面重定向（2）"><a href="#页面重定向（2）" class="headerlink" title="页面重定向（2）"></a>页面重定向（2）</h1><p><strong>1.服务器跳转</strong><br><strong>RequestDispatcher dispatcher = req.getRequestDispatcher(“hehe.jsp”); dispatcher.forward(req, resp);</strong></p><h1 id="两种跳转方式对比"><a href="#两种跳转方式对比" class="headerlink" title="两种跳转方式对比"></a>两种跳转方式对比</h1><blockquote><p><strong>1.服务器跳转</strong><br>RequestDispatcher dispatcher = req.getRequestDispatcher(“hehe.jsp”); dispatcher.forward(req, resp);<br>在服务端进行重新指向，可以将request中的参数继续传递到下一个页面。</p><p><strong>2.客户端跳转</strong><br>response.sendRedirect(“index.jsp”);<br>让客户端跳转到指定页面，会让浏览器重新发起请求，所以无法将原request中的参数继续传递。</p></blockquote><h1 id="乱码问题"><a href="#乱码问题" class="headerlink" title="乱码问题"></a>乱码问题</h1><h2 id="response乱码"><a href="#response乱码" class="headerlink" title="response乱码"></a>response乱码</h2><p><strong>浏览器乱码：</strong><br><strong>浏览器中显示的内容都是从服务器传出的数据，出现乱码的原因就是浏览器的显示编码和数据编码不一致</strong></p><p><strong>让它们一致就可以了：</strong><br><strong>response.setContentType(“text/html; charset=utf-8”);</strong><br><strong>response.setCharacterEncoding(“UTF-8”);</strong></p><h2 id="request-post乱码"><a href="#request-post乱码" class="headerlink" title="request-post乱码"></a>request-post乱码</h2><p><strong>request请求分为post和get，对于不同的请求方式有不同的解决乱码的方案：</strong></p><p><strong>POST解决方案:</strong><br><strong>设置request的编码与提交请求的页面编码相同。</strong><br><strong>setCharacterEncoding只对post有效。</strong></p><p><strong>request.setCharacterEncoding(“UTF-8”);</strong></p><h2 id="request-get乱码"><a href="#request-get乱码" class="headerlink" title="request-get乱码"></a><strong>request-get乱码</strong></h2><p><strong>request请求分为post和get，对于不同的请求方式有不同的解决乱码的方案：</strong></p><p><strong>GET解决方案:</strong></p><p><strong>//用ISO-8859-1编码读出数据，再转为UTF8</strong><br><strong>String name=req.getParameter(“usrname”);</strong><br><strong>String name2=new String(name.getBytes(“ISO-8859-1”), “UTF-8”);</strong></p><p><strong>其中ISO8859-1与浏览器内部编码一致，UTF-8是我们需要的编码。</strong></p><h1 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h1><h2 id="MyServlet"><a href="#MyServlet" class="headerlink" title="MyServlet"></a>MyServlet</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet主要功能：接收来自浏览器的请求，给予浏览器响应</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">resp.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">System.out.println(<span class="string">"服务器接到Get请求"</span>);</span><br><span class="line">resp.getWriter().print(<span class="string">"&lt;html&gt;&lt;body&gt;&lt;h1&gt;HelloWorld世界你好&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"服务器接到Post请求"</span>);</span><br><span class="line"></span><br><span class="line">doGet(req, resp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Zhuce"><a href="#Zhuce" class="headerlink" title="Zhuce"></a>Zhuce</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Zhuce</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The doGet method of the servlet. &lt;br&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This method is called when a form has its tag value method equals to get.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the request send by the client to the server</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the response send by the server to the client</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException if an error occurred</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurred</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">request.setCharacterEncoding(<span class="string">"UTF-8"</span>);<span class="comment">//设置request编码</span></span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);<span class="comment">//设置response编码</span></span><br><span class="line"></span><br><span class="line">String a = request.getParameter(<span class="string">"userName"</span>);</span><br><span class="line">System.out.println(<span class="string">"接到用户名："</span>+a);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"性别："</span>+request.getParameter(<span class="string">"sex"</span>));</span><br><span class="line"></span><br><span class="line">String[] ins = request.getParameterValues(<span class="string">"interest"</span>);</span><br><span class="line"><span class="keyword">for</span>(String str : ins)&#123;</span><br><span class="line">System.out.println(<span class="string">"兴趣："</span>+str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"城市："</span>+request.getParameter(<span class="string">"city"</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The doPost method of the servlet. &lt;br&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This method is called when a form has its tag value method equals to post.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request the request send by the client to the server</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response the response send by the server to the client</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> ServletException if an error occurred</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException if an error occurred</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Web-xml"><a href="#Web-xml" class="headerlink" title="Web.xml"></a><font color="purple">Web.xml</font></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">"3.0"</span> <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hehe<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>demo.MyServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>This is the description of my J2EE component<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>This is the display name of my J2EE component<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Zhuce<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>demo.Zhuce<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hehe<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hh/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-<span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>Zhuce<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/xixi/haha/register.php<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">"java"</span> <span class="keyword">import</span>=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">String path = request.getContextPath();</span><br><span class="line">String basePath = request.getScheme()+<span class="string">"://"</span>+request.getServerName()+<span class="string">":"</span>+request.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;base href=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;title&gt;My JSP 'index.jsp' starting page&lt;/title&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"pragma"</span> content=<span class="string">"no-cache"</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"cache-control"</span> content=<span class="string">"no-cache"</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"expires"</span> content=<span class="string">"0"</span>&gt;    </span><br><span class="line">&lt;meta http-equiv=<span class="string">"keywords"</span> content=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"description"</span> content=<span class="string">"This is my page"</span>&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"styles.css"</span>&gt;</span><br><span class="line">--&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    This is my JSP page. &lt;br&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;form action=<span class="string">"./xixi/haha/register.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    </span><br><span class="line">&lt;input type=<span class="string">"text"</span> name=<span class="string">"userName"</span> /&gt;&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"nan"</span> checked&gt;男</span><br><span class="line">&lt;input type=<span class="string">"radio"</span> name=<span class="string">"sex"</span> value=<span class="string">"nv"</span> &gt;女</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"interest"</span> value=<span class="string">"movie"</span>&gt;看电视</span><br><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"interest"</span> value=<span class="string">"computer"</span>&gt;玩电脑</span><br><span class="line">&lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"interest"</span> value=<span class="string">"shopping"</span>&gt;购物</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line">&lt;select name=<span class="string">"city"</span>&gt;</span><br><span class="line">   &lt;option value="beijing"&gt;北京&lt;/option&gt;</span><br><span class="line">   &lt;option value="shanghai"&gt;上海&lt;/option&gt;</span><br><span class="line">   &lt;option value="wuxi"&gt;无锡&lt;/option&gt;</span><br><span class="line">   &lt;option value="dalian"&gt;大连&lt;/option&gt;</span><br><span class="line">   &lt;option value="etc"&gt;其他&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;textarea name=<span class="string">"comment"</span> rows=<span class="string">"10"</span> cols=<span class="string">"40"</span>&gt;感谢使用本系统</span><br><span class="line">&lt;/textarea&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    </span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Servlet简介&quot;&gt;&lt;a href=&quot;#Servlet简介&quot; class=&quot;headerlink&quot; title=&quot;Servlet简介&quot;&gt;&lt;/a&gt;Servlet简介&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Servlet是用Java语言编写的程序，
      
    
    </summary>
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/categories/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java个人笔记" scheme="https://133608520.github.io/tags/Java%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Servlet" scheme="https://133608520.github.io/tags/Servlet/"/>
    
  </entry>
  
</feed>
